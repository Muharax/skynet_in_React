{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Desktop\\\\WWW\\\\react\\\\skynet\\\\skynet\\\\src\\\\test\\\\test.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './test.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateShuffledNumbers = (min, max) => {\n  let numbers = Array.from({\n    length: max - min + 1\n  }, (_, i) => i + min);\n  for (let i = numbers.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [numbers[i], numbers[j]] = [numbers[j], numbers[i]];\n  }\n  return numbers;\n};\nconst Div = ({\n  startAnimation,\n  animationDuration,\n  minNumber,\n  maxNumber,\n  handleSliderChange,\n  displayedNumbersProp,\n  onStop,\n  number\n}) => {\n  _s();\n  const [displayedNumbers, setDisplayedNumbers] = useState(displayedNumbersProp || Array.from({\n    length: maxNumber - minNumber + 1\n  }, (_, i) => i + minNumber));\n  const [lastStartAnimation, setLastStartAnimation] = useState(false);\n  const [isStopped, setIsStopped] = useState(false); // Nowy stan, który śledzi, czy animacja jest zatrzymana\n\n  const handleStopClick = () => {\n    onStop();\n    setIsStopped(true); // Nowa funkcja, która zatrzymuje animację\n  };\n\n  useEffect(() => {\n    if (startAnimation && !lastStartAnimation && !isStopped) {\n      const shuffledNumbers = generateShuffledNumbers(minNumber, maxNumber);\n      setDisplayedNumbers(shuffledNumbers);\n    } else if (isStopped) {\n      setIsStopped(false); // Zresetuj stan zatrzymania po zakończeniu animacji\n      setDisplayedNumbers([number]); // Ustaw displayedNumbers na przekazaną liczbę\n    }\n\n    setLastStartAnimation(startAnimation);\n  }, [startAnimation, minNumber, maxNumber, isStopped, number]); // Dodaj number do tablicy zależności\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopClick,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Speed Break\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"rangeSpeed\",\n      type: \"range\",\n      min: \"0.1\",\n      max: \"1.2\",\n      step: \"0.1\",\n      value: animationDuration,\n      onChange: handleSliderChange,\n      orient: \"vertical\",\n      style: {\n        writingMode: 'bt-lr'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '50px',\n        height: '50px',\n        border: '1px solid black',\n        backgroundColor: '#eee',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: startAnimation ? 'number-spin' : '',\n        style: {\n          position: 'relative',\n          animationDuration: `${animationDuration}s`\n        },\n        children: displayedNumbers.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '2px'\n          },\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Div, \"qBUWHHPGIsMnkY2ZRa9Dtg+iLY4=\");\n_c = Div;\nconst Siatka = () => {\n  _s2();\n  const [numbers, setNumbers] = useState([]);\n  const [startAnimations, setStartAnimations] = useState([false, false, false, false, false, false]);\n  const [displayedNumbersList, setDisplayedNumbersList] = useState([]);\n  const [animationDurations, setAnimationDurations] = useState([0.1, 0.2, 0.6, 0.8, 1, 1.2]);\n  const [minNumber, setMinNumber] = useState(1);\n  const [maxNumber, setMaxNumber] = useState();\n  const [speedBreak, setSpeedBreak] = useState(3000);\n  const grid = [];\n  const handleClick = () => {\n    const nums = new Set();\n    console.log(`S: ${nums}`);\n    while (nums.size < 6) {\n      nums.add(Math.floor(Math.random() * (maxNumber - minNumber + 1) + minNumber));\n    }\n    setNumbers([...nums]);\n    setStartAnimations([true, true, true, true, true, true]);\n\n    // Generuj unikalne listy numerów dla każdego komponentu Div\n    const newDisplayedNumbersList = Array(6).fill().map(() => generateShuffledNumbers(minNumber, maxNumber));\n    // console.log(newDisplayedNumbersList);\n    // console.log(`S: `);\n    setDisplayedNumbersList(newDisplayedNumbersList);\n  };\n  const stopAnimation = index => {\n    setStartAnimations(prevStartAnimations => {\n      const newStartAnimations = [...prevStartAnimations];\n      newStartAnimations[index] = false;\n      return newStartAnimations;\n    });\n  };\n\n  // useEffect(() => {\n  //   let timeouts = [];\n  //   for (let i = 0; i < 6; i++) {\n  //     timeouts[i] = setTimeout(() => {\n  //       setStartAnimations(prevStartAnimations => {\n  //         const newStartAnimations = [...prevStartAnimations];\n  //         newStartAnimations[i] = false;\n  //         return newStartAnimations;\n  //       });\n  //     }, i * animationDurations[i] * speedBreak);\n  //   }\n\n  //   return () => timeouts.forEach(timeout => clearTimeout(timeout));\n  // }, [numbers, animationDurations, speedBreak]); // Add speedBreak to the dependency array\n\n  const handleSpeedBreakChange = e => {\n    setSpeedBreak(Number(e.target.value)); // Set speedBreak when slider changes\n  };\n\n  for (let i = 0; i < 6; i++) {\n    const handleSliderChange = e => {\n      setAnimationDurations(animationDurations.map((duration, index) => {\n        if (index === i) {\n          return Number(e.target.value);\n        } else {\n          return duration;\n        }\n      }));\n    };\n    grid.push( /*#__PURE__*/_jsxDEV(Div, {\n      startAnimation: startAnimations[i],\n      number: numbers[i] // Przekazanie liczby jako prop\n      ,\n      animationDuration: animationDurations[i],\n      minNumber: minNumber,\n      maxNumber: maxNumber,\n      handleSliderChange: handleSliderChange,\n      displayedNumbersProp: displayedNumbersList[i],\n      onStop: () => stopAnimation(i)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Losowanie Lotto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"1000\",\n      max: \"20000\",\n      step: \"1000\",\n      value: speedBreak,\n      onChange: handleSpeedBreakChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Losuj liczby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s2(Siatka, \"FMwdIT1HxDKsQadkPlA2MYwHvYQ=\");\n_c2 = Siatka;\nexport default Siatka;\nvar _c, _c2;\n$RefreshReg$(_c, \"Div\");\n$RefreshReg$(_c2, \"Siatka\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","generateShuffledNumbers","min","max","numbers","Array","from","length","_","i","j","Math","floor","random","Div","startAnimation","animationDuration","minNumber","maxNumber","handleSliderChange","displayedNumbersProp","onStop","number","_s","displayedNumbers","setDisplayedNumbers","lastStartAnimation","setLastStartAnimation","isStopped","setIsStopped","handleStopClick","shuffledNumbers","style","margin","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","type","step","value","onChange","orient","writingMode","width","height","border","backgroundColor","display","justifyContent","alignItems","overflow","position","map","num","index","marginBottom","_c","Siatka","_s2","setNumbers","startAnimations","setStartAnimations","displayedNumbersList","setDisplayedNumbersList","animationDurations","setAnimationDurations","setMinNumber","setMaxNumber","speedBreak","setSpeedBreak","grid","handleClick","nums","Set","console","log","size","add","newDisplayedNumbersList","fill","stopAnimation","prevStartAnimations","newStartAnimations","handleSpeedBreakChange","e","Number","target","duration","push","flexDirection","_c2","$RefreshReg$"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/src/test/test.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './test.css';\n\nconst generateShuffledNumbers = (min, max) => {\n  let numbers = Array.from({length: max - min + 1}, (_, i) => i + min);\n  for(let i = numbers.length - 1; i > 0; i--){\n    const j = Math.floor(Math.random() * (i + 1));\n    [numbers[i], numbers[j]] = [numbers[j], numbers[i]];\n  }\n  return numbers;\n};\n\nconst Div = ({ startAnimation, animationDuration, minNumber, maxNumber, handleSliderChange, displayedNumbersProp, onStop, number }) => {\n  const [displayedNumbers, setDisplayedNumbers] = useState(displayedNumbersProp || Array.from({length: maxNumber - minNumber + 1}, (_, i) => i + minNumber));\n  const [lastStartAnimation, setLastStartAnimation] = useState(false);\n  const [isStopped, setIsStopped] = useState(false); // Nowy stan, który śledzi, czy animacja jest zatrzymana\n\n  const handleStopClick = () => {\n    onStop();\n    setIsStopped(true); // Nowa funkcja, która zatrzymuje animację\n  };\n\n  useEffect(() => {\n    if (startAnimation && !lastStartAnimation && !isStopped) {\n      const shuffledNumbers = generateShuffledNumbers(minNumber, maxNumber);\n      setDisplayedNumbers(shuffledNumbers);\n    } else if (isStopped) {\n      setIsStopped(false); // Zresetuj stan zatrzymania po zakończeniu animacji\n      setDisplayedNumbers([number]); // Ustaw displayedNumbers na przekazaną liczbę\n    }\n    setLastStartAnimation(startAnimation);\n  }, [startAnimation, minNumber, maxNumber, isStopped, number]); // Dodaj number do tablicy zależności\n\n\n  return (\n    <div style={{ margin: '20px' }}>\n      <button onClick={handleStopClick}>Stop</button> {/* Nowy przycisk stop */}\n      <div>Speed Break</div>\n      <input \n        className='rangeSpeed'\n        type=\"range\" \n        min=\"0.1\" \n        max=\"1.2\" \n        step=\"0.1\" \n        value={animationDuration} \n        onChange={handleSliderChange} \n        orient=\"vertical\"\n        style={{writingMode: 'bt-lr'}}\n      />\n      <div style={{ width: '50px', height: '50px', border: '1px solid black', backgroundColor: '#eee', display: 'flex', justifyContent: 'center', alignItems: 'center', overflow: 'hidden' }}>\n        <div \n          className={startAnimation ? 'number-spin' : ''} \n          style={{ position: 'relative', animationDuration: `${animationDuration}s` }}\n        >\n          {displayedNumbers.map((num, index) => (\n            <div key={index} style={{ marginBottom: '2px' }}>{num}</div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Siatka = () => {\n  const [numbers, setNumbers] = useState([]);\n  const [startAnimations, setStartAnimations] = useState([false, false, false, false, false, false]);\n  \n  const [displayedNumbersList, setDisplayedNumbersList] = useState([]);\n  const [animationDurations, setAnimationDurations] = useState([0.1, 0.2, 0.6, 0.8, 1, 1.2]);\n  const [minNumber, setMinNumber] = useState(1);\n  const [maxNumber, setMaxNumber] = useState();\n  const [speedBreak, setSpeedBreak] = useState(3000);\n  const grid = [];\n\n  const handleClick = () => {\n    const nums = new Set();\n    console.log(`S: ${nums}`);\n    while(nums.size < 6) {\n      nums.add(Math.floor(Math.random() * (maxNumber - minNumber + 1) + minNumber));\n    }\n    setNumbers([...nums]);\n    setStartAnimations([true, true, true, true, true, true]);\n\n    // Generuj unikalne listy numerów dla każdego komponentu Div\n    const newDisplayedNumbersList = Array(6).fill().map(() => generateShuffledNumbers(minNumber, maxNumber));\n    // console.log(newDisplayedNumbersList);\n    // console.log(`S: `);\n    setDisplayedNumbersList(newDisplayedNumbersList);\n    \n  }\n\n  const stopAnimation = (index) => {\n    setStartAnimations(prevStartAnimations => {\n      const newStartAnimations = [...prevStartAnimations];\n      newStartAnimations[index] = false;\n      return newStartAnimations;\n    });\n  };\n\n  // useEffect(() => {\n  //   let timeouts = [];\n  //   for (let i = 0; i < 6; i++) {\n  //     timeouts[i] = setTimeout(() => {\n  //       setStartAnimations(prevStartAnimations => {\n  //         const newStartAnimations = [...prevStartAnimations];\n  //         newStartAnimations[i] = false;\n  //         return newStartAnimations;\n  //       });\n  //     }, i * animationDurations[i] * speedBreak);\n  //   }\n  \n  //   return () => timeouts.forEach(timeout => clearTimeout(timeout));\n  // }, [numbers, animationDurations, speedBreak]); // Add speedBreak to the dependency array\n  \n  const handleSpeedBreakChange = (e) => {\n    setSpeedBreak(Number(e.target.value)); // Set speedBreak when slider changes\n  };\n\n  for (let i = 0; i < 6; i++) {\n    const handleSliderChange = (e) => {\n      setAnimationDurations(animationDurations.map((duration, index) => {\n        if (index === i) {\n          return Number(e.target.value);\n        } else {\n          return duration;\n        }\n      }));\n    }\n\n    grid.push(\n      <Div\n        key={i}\n        startAnimation={startAnimations[i]}\n        number={numbers[i]} // Przekazanie liczby jako prop\n        animationDuration={animationDurations[i]}\n        minNumber={minNumber}\n        maxNumber={maxNumber}\n        handleSliderChange={handleSliderChange}\n        displayedNumbersProp={displayedNumbersList[i]}\n        onStop={() => stopAnimation(i)}\n      />\n    );\n  }\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <h1>Losowanie Lotto</h1>\n      <div style={{ display: 'flex' }}>\n        {grid}\n      </div>\n      <input \n        type=\"range\" \n        min=\"1000\" \n        max=\"20000\" \n        step=\"1000\" \n        value={speedBreak} \n        onChange={handleSpeedBreakChange} \n      />\n      <button onClick={handleClick}>Losuj liczby</button>\n      \n      \n    </div>\n  );\n};\n\nexport default Siatka;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}