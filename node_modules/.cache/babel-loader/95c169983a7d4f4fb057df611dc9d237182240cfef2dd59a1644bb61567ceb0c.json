{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Desktop\\\\WWW\\\\react\\\\skynet\\\\skynet\\\\src\\\\test\\\\test2.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test2 = () => {\n  _s();\n  const [divs, setDivs] = useState([1, 2, 3, 4, 5]);\n  const [nextNum, setNextNum] = useState(6);\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleButtonClick = () => {\n    const numDivsToProcess = parseInt(inputValue, 10);\n    if (!isNaN(numDivsToProcess)) {\n      for (let i = 0; i < numDivsToProcess; i++) {\n        setDivs(prevDivs => {\n          const newDivs = [...prevDivs];\n          newDivs.pop(); // usuwamy jeden div\n          newDivs.unshift(nextNum + i); // dodajemy nowy div na początek\n          return newDivs;\n        });\n        setNextNum(prevNum => prevNum + 1); // zwiększamy liczbę dla następnego diva\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: inputValue,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Usun\\u0105\\u0107 i doda\\u0107 div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), divs.map((num, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"50px\",\n        width: \"50px\",\n        backgroundColor: \"lightblue\",\n        margin: \"5px\"\n      },\n      children: num\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Test2, \"PWTW9k2WOsQ+V5Nj6LmgkJFmR5c=\");\n_c = Test2;\nexport default Test2;\nvar _c;\n$RefreshReg$(_c, \"Test2\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Test2","_s","divs","setDivs","nextNum","setNextNum","inputValue","setInputValue","handleInputChange","e","target","value","handleButtonClick","numDivsToProcess","parseInt","isNaN","i","prevDivs","newDivs","pop","unshift","prevNum","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","num","style","height","width","backgroundColor","margin","_c","$RefreshReg$"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/src/test/test2.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Test2 = () => {\n  const [divs, setDivs] = useState([1, 2, 3, 4, 5]);\n  const [nextNum, setNextNum] = useState(6);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleButtonClick = () => {\n    const numDivsToProcess = parseInt(inputValue, 10);\n\n    if (!isNaN(numDivsToProcess)) {\n      for (let i = 0; i < numDivsToProcess; i++) {\n        setDivs(prevDivs => {\n          const newDivs = [...prevDivs];\n          newDivs.pop(); // usuwamy jeden div\n          newDivs.unshift(nextNum + i); // dodajemy nowy div na początek\n          return newDivs;\n        });\n        setNextNum(prevNum => prevNum + 1); // zwiększamy liczbę dla następnego diva\n      }\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"number\" value={inputValue} onChange={handleInputChange} />\n      <button onClick={handleButtonClick}>Usunąć i dodać div</button>\n      {divs.map((num, i) => (\n        <div key={i} style={{ height: \"50px\", width: \"50px\", backgroundColor: \"lightblue\", margin: \"5px\" }}>\n          {num}\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default Test2;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACjD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMW,iBAAiB,GAAIC,CAAC,IAAK;IAC/BF,aAAa,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,gBAAgB,GAAGC,QAAQ,CAACR,UAAU,EAAE,EAAE,CAAC;IAEjD,IAAI,CAACS,KAAK,CAACF,gBAAgB,CAAC,EAAE;MAC5B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,gBAAgB,EAAEG,CAAC,EAAE,EAAE;QACzCb,OAAO,CAACc,QAAQ,IAAI;UAClB,MAAMC,OAAO,GAAG,CAAC,GAAGD,QAAQ,CAAC;UAC7BC,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;UACfD,OAAO,CAACE,OAAO,CAAChB,OAAO,GAAGY,CAAC,CAAC,CAAC,CAAC;UAC9B,OAAOE,OAAO;QAChB,CAAC,CAAC;QACFb,UAAU,CAACgB,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;MACtC;IACF;EACF,CAAC;;EAED,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAOwB,IAAI,EAAC,QAAQ;MAACZ,KAAK,EAAEL,UAAW;MAACkB,QAAQ,EAAEhB;IAAkB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvE7B,OAAA;MAAQ8B,OAAO,EAAEjB,iBAAkB;MAAAU,QAAA,EAAC;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC9D1B,IAAI,CAAC4B,GAAG,CAAC,CAACC,GAAG,EAAEf,CAAC,kBACfjB,OAAA;MAAaiC,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAE,MAAM;QAAEC,eAAe,EAAE,WAAW;QAAEC,MAAM,EAAE;MAAM,CAAE;MAAAd,QAAA,EAChGS;IAAG,GADIf,CAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CApCID,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AAqCX,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}