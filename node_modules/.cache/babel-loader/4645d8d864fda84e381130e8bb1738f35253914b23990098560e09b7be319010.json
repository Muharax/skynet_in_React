{"ast":null,"code":"// import React, { useRef, useEffect } from \"react\";\n// import * as THREE from \"three\";\n\n// function Webgl() {\n//   const refDiv = useRef(null);\n\n//   useEffect(() => {\n//     // Tworzenie sceny, kamery i renderera\n//     const scene = new THREE.Scene();\n//     const camera = new THREE.OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, 1, 1000);\n//     const renderer = new THREE.WebGLRenderer();\n\n//     // Dodawanie renderera do elementu div\n//     refDiv.current.appendChild(renderer.domElement);\n//     renderer.setSize(window.innerWidth, window.innerHeight);\n\n//     // Ustawienie kamery\n//     camera.position.set(2, 2, 2);\n//     camera.lookAt(scene.position);\n\n//     // Dodawanie kształtu i materiału\n//     const geometry = new THREE.BoxGeometry(1, 1, 1);\n//     const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n\n//     // Tworzenie siatki\n//     const grid = new THREE.Group();\n//     for(let i = -25; i < 25; i++) {\n//       for(let j = -25; j < 25; j++) {\n//         const cube = new THREE.Mesh(geometry, material);\n//         cube.position.set(i, 0, j);\n//         grid.add(cube);\n//       }\n//     }\n\n//     // Dodanie siatki do sceny\n//     scene.add(grid);\n\n//     // Funkcja animacji\n//     const animate = function () {\n//       requestAnimationFrame(animate);\n\n//       renderer.render(scene, camera);\n//     };\n\n//     animate();\n//   }, []);\n\n//   return <div ref={refDiv} />;\n// }\n\n// export default Webgl;","map":{"version":3,"names":[],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/src/test/test5-webgl.js"],"sourcesContent":["// import React, { useRef, useEffect } from \"react\";\n// import * as THREE from \"three\";\n\n// function Webgl() {\n//   const refDiv = useRef(null);\n\n//   useEffect(() => {\n//     // Tworzenie sceny, kamery i renderera\n//     const scene = new THREE.Scene();\n//     const camera = new THREE.OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, 1, 1000);\n//     const renderer = new THREE.WebGLRenderer();\n\n//     // Dodawanie renderera do elementu div\n//     refDiv.current.appendChild(renderer.domElement);\n//     renderer.setSize(window.innerWidth, window.innerHeight);\n\n//     // Ustawienie kamery\n//     camera.position.set(2, 2, 2);\n//     camera.lookAt(scene.position);\n\n//     // Dodawanie kształtu i materiału\n//     const geometry = new THREE.BoxGeometry(1, 1, 1);\n//     const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n\n//     // Tworzenie siatki\n//     const grid = new THREE.Group();\n//     for(let i = -25; i < 25; i++) {\n//       for(let j = -25; j < 25; j++) {\n//         const cube = new THREE.Mesh(geometry, material);\n//         cube.position.set(i, 0, j);\n//         grid.add(cube);\n//       }\n//     }\n\n//     // Dodanie siatki do sceny\n//     scene.add(grid);\n\n//     // Funkcja animacji\n//     const animate = function () {\n//       requestAnimationFrame(animate);\n\n//       renderer.render(scene, camera);\n//     };\n\n//     animate();\n//   }, []);\n\n//   return <div ref={refDiv} />;\n// }\n\n// export default Webgl;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}