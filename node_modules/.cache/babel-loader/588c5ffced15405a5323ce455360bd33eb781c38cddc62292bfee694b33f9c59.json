{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Desktop\\\\WWW\\\\react\\\\skynet\\\\skynet\\\\src\\\\test\\\\test5-webgl.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Webgl() {\n  _s();\n  const refDiv = useRef(null);\n  useEffect(() => {\n    // Tworzenie sceny, kamery i renderera\n    const scene = new THREE.Scene();\n    const camera = new THREE.OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, 1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n\n    // Dodawanie renderera do elementu div\n    refDiv.current.appendChild(renderer.domElement);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    // Ustawienie kamery\n    camera.position.set(2, 2, 2);\n    camera.lookAt(scene.position);\n\n    // Dodawanie kształtu i materiału\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n\n    // Tworzenie siatki\n    const grid = new THREE.Group();\n    for (let i = -25; i < 25; i++) {\n      for (let j = -25; j < 25; j++) {\n        const cube = new THREE.Mesh(geometry, material);\n        cube.position.set(i, 0, j);\n        grid.add(cube);\n      }\n    }\n\n    // Dodanie siatki do sceny\n    scene.add(grid);\n\n    // Funkcja animacji\n    const animate = function () {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n    animate();\n  }, []);\n\n  // return <div ref={refDiv} />;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"SIEM WEB GL\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n}\n_s(Webgl, \"B3AD5ycIj9qW7NfjEL05WYlk0+0=\");\n_c = Webgl;\nexport default Webgl;\nvar _c;\n$RefreshReg$(_c, \"Webgl\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","jsxDEV","_jsxDEV","Webgl","_s","refDiv","scene","Scene","camera","OrthographicCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","current","appendChild","domElement","setSize","position","set","lookAt","geometry","BoxGeometry","material","MeshBasicMaterial","color","grid","Group","i","j","cube","Mesh","add","animate","requestAnimationFrame","render","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/src/test/test5-webgl.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport * as THREE from \"three\";\n\nfunction Webgl() {\n  const refDiv = useRef(null);\n\n  useEffect(() => {\n    // Tworzenie sceny, kamery i renderera\n    const scene = new THREE.Scene();\n    const camera = new THREE.OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, 1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n\n    // Dodawanie renderera do elementu div\n    refDiv.current.appendChild(renderer.domElement);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    // Ustawienie kamery\n    camera.position.set(2, 2, 2);\n    camera.lookAt(scene.position);\n\n    // Dodawanie kształtu i materiału\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n\n    // Tworzenie siatki\n    const grid = new THREE.Group();\n    for(let i = -25; i < 25; i++) {\n      for(let j = -25; j < 25; j++) {\n        const cube = new THREE.Mesh(geometry, material);\n        cube.position.set(i, 0, j);\n        grid.add(cube);\n      }\n    }\n\n    // Dodanie siatki do sceny\n    scene.add(grid);\n\n    // Funkcja animacji\n    const animate = function () {\n      requestAnimationFrame(animate);\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }, []);\n\n  // return <div ref={refDiv} />;\n  return <div>SIEM WEB GL</div>;\n}\n\nexport default Webgl;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAMC,MAAM,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE3BC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,KAAK,GAAG,IAAIN,KAAK,CAACO,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIR,KAAK,CAACS,kBAAkB,CAACC,MAAM,CAACC,UAAU,GAAG,CAAC,CAAC,EAAED,MAAM,CAACC,UAAU,GAAG,CAAC,EAAED,MAAM,CAACE,WAAW,GAAG,CAAC,EAAEF,MAAM,CAACE,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IACpJ,MAAMC,QAAQ,GAAG,IAAIb,KAAK,CAACc,aAAa,CAAC,CAAC;;IAE1C;IACAT,MAAM,CAACU,OAAO,CAACC,WAAW,CAACH,QAAQ,CAACI,UAAU,CAAC;IAC/CJ,QAAQ,CAACK,OAAO,CAACR,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;;IAEvD;IACAJ,MAAM,CAACW,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5BZ,MAAM,CAACa,MAAM,CAACf,KAAK,CAACa,QAAQ,CAAC;;IAE7B;IACA,MAAMG,QAAQ,GAAG,IAAItB,KAAK,CAACuB,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/C,MAAMC,QAAQ,GAAG,IAAIxB,KAAK,CAACyB,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;;IAEjE;IACA,MAAMC,IAAI,GAAG,IAAI3B,KAAK,CAAC4B,KAAK,CAAC,CAAC;IAC9B,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5B,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC5B,MAAMC,IAAI,GAAG,IAAI/B,KAAK,CAACgC,IAAI,CAACV,QAAQ,EAAEE,QAAQ,CAAC;QAC/CO,IAAI,CAACZ,QAAQ,CAACC,GAAG,CAACS,CAAC,EAAE,CAAC,EAAEC,CAAC,CAAC;QAC1BH,IAAI,CAACM,GAAG,CAACF,IAAI,CAAC;MAChB;IACF;;IAEA;IACAzB,KAAK,CAAC2B,GAAG,CAACN,IAAI,CAAC;;IAEf;IACA,MAAMO,OAAO,GAAG,SAAAA,CAAA,EAAY;MAC1BC,qBAAqB,CAACD,OAAO,CAAC;MAE9BrB,QAAQ,CAACuB,MAAM,CAAC9B,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IAED0B,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBAAOhC,OAAA;IAAAmC,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC/B;AAACrC,EAAA,CA9CQD,KAAK;AAAAuC,EAAA,GAALvC,KAAK;AAgDd,eAAeA,KAAK;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}