{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Desktop\\\\WWW\\\\react\\\\skynet\\\\skynet\\\\src\\\\siatka\\\\losowanie \\u2014 kopia.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { gsap } from 'gsap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateShuffledNumbers = (min, max) => {\n  let numbers = Array.from({\n    length: max - min + 1\n  }, (_, i) => i + min);\n  for (let i = numbers.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [numbers[i], numbers[j]] = [numbers[j], numbers[i]];\n  }\n  return numbers;\n};\nconst Losowanie2 = () => {\n  _s();\n  const [displayedNumbers, setDisplayedNumbers] = useState(generateShuffledNumbers(1, 49));\n  const [currentNumberIndex, setCurrentNumberIndex] = useState(0);\n  const [numbersToDisplay, setNumbersToDisplay] = useState(10); // ile numerów jest jednocześnie widocznych\n  const [animationSpeed, setAnimationSpeed] = useState(1000); // szybkość animacji w milisekundach\n  const [isRunning, setIsRunning] = useState(false); // czy animacja jest uruchomiona\n\n  useEffect(() => {\n    let intervalId;\n    if (isRunning) {\n      intervalId = setInterval(() => {\n        setCurrentNumberIndex((currentNumberIndex + 1) % displayedNumbers.length);\n      }, animationSpeed);\n    }\n    return () => clearInterval(intervalId);\n  }, [currentNumberIndex, isRunning, animationSpeed, displayedNumbers]);\n  const startAnimation = () => {\n    setIsRunning(true);\n  };\n  const stopAnimation = () => {\n    setIsRunning(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startAnimation,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopAnimation,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: displayedNumbers.slice(currentNumberIndex, currentNumberIndex + numbersToDisplay).map(number => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 106\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Losowanie2, \"jfSt4Yce0jJ3U8BMDv7Ga3bf8OY=\");\n_c = Losowanie2;\nexport default Losowanie2;\nvar _c;\n$RefreshReg$(_c, \"Losowanie2\");","map":{"version":3,"names":["React","useState","useEffect","gsap","jsxDEV","_jsxDEV","generateShuffledNumbers","min","max","numbers","Array","from","length","_","i","j","Math","floor","random","Losowanie2","_s","displayedNumbers","setDisplayedNumbers","currentNumberIndex","setCurrentNumberIndex","numbersToDisplay","setNumbersToDisplay","animationSpeed","setAnimationSpeed","isRunning","setIsRunning","intervalId","setInterval","clearInterval","startAnimation","stopAnimation","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","number","_c","$RefreshReg$"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/src/siatka/losowanie — kopia.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport './App.css';\r\n\r\nconst generateShuffledNumbers = (min, max) => {\r\n  let numbers = Array.from({length: max - min + 1}, (_, i) => i + min);\r\n  for(let i = numbers.length - 1; i > 0; i--){\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [numbers[i], numbers[j]] = [numbers[j], numbers[i]];\r\n  }\r\n  return numbers;\r\n};\r\n\r\nconst Losowanie2 = () => {\r\n  const [displayedNumbers, setDisplayedNumbers] = useState(generateShuffledNumbers(1, 49));\r\n  const [currentNumberIndex, setCurrentNumberIndex] = useState(0);\r\n  const [numbersToDisplay, setNumbersToDisplay] = useState(10); // ile numerów jest jednocześnie widocznych\r\n  const [animationSpeed, setAnimationSpeed] = useState(1000); // szybkość animacji w milisekundach\r\n  const [isRunning, setIsRunning] = useState(false); // czy animacja jest uruchomiona\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    if(isRunning) {\r\n      intervalId = setInterval(() => {\r\n        setCurrentNumberIndex((currentNumberIndex + 1) % displayedNumbers.length);\r\n      }, animationSpeed);\r\n    }\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [currentNumberIndex, isRunning, animationSpeed, displayedNumbers]);\r\n\r\n  const startAnimation = () => {\r\n    setIsRunning(true);\r\n  };\r\n\r\n  const stopAnimation = () => {\r\n    setIsRunning(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={startAnimation}>Start</button>\r\n      <button onClick={stopAnimation}>Stop</button>\r\n      <div>\r\n        {displayedNumbers.slice(currentNumberIndex, currentNumberIndex + numbersToDisplay).map(number => <div key={number}>{number}</div>)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Losowanie2;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}