{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Desktop\\\\WWW\\\\react\\\\skynet\\\\skynet\\\\src\\\\siatka\\\\losowanie2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n// import './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateRandomNumbers(n, min, max) {\n  let arr = [];\n  for (let i = 0; i < n; i++) {\n    arr.push(Math.floor(Math.random() * (max - min + 1)) + min);\n  }\n  return arr;\n}\nlet randomNumbers = generateRandomNumbers(5, 1, 100); // generates 5 random numbers between 1 and 100\n// console.log(randomNumbers);\n\nfunction Losowanie2() {\n  _s();\n  const [numbers, setNumbers] = useState([[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 3, 4, 3, 4, 5, 6, 7, 8, 9], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]);\n  const [spin, setSpin] = useState(false);\n  const intervalId = useRef(null);\n  const spinColumn = columnIndex => {\n    setNumbers(prevNumbers => {\n      const newNumbers = [...prevNumbers];\n      newNumbers[columnIndex] = [...newNumbers[columnIndex].slice(1), Math.floor(Math.random() * 10)];\n      return newNumbers;\n    });\n  };\n  useEffect(() => {\n    if (spin) {\n      intervalId.current = setInterval(() => {\n        for (let i = 0; i < 3; i++) {\n          spinColumn(i);\n        }\n      }, 1000);\n    } else {\n      if (intervalId.current) clearInterval(intervalId.current);\n    }\n    return () => {\n      if (intervalId.current) clearInterval(intervalId.current);\n    };\n  }, [spin]);\n  const handleSpinClick = () => {\n    setSpin(!spin);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slot-machine\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSpinClick,\n      children: spin ? 'STOP' : 'SPIN'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"number-display\",\n      children: numbers.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number\",\n        children: column.map((number, numberIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `number-inner ${spin ? 'spin' : ''}`,\n          children: number\n        }, numberIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, columnIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Losowanie2, \"+hBoPC4bOgoiMULfL/pnJ4Rc/ys=\");\n_c = Losowanie2;\nexport default Losowanie2;\nvar _c;\n$RefreshReg$(_c, \"Losowanie2\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","generateRandomNumbers","n","min","max","arr","i","push","Math","floor","random","randomNumbers","Losowanie2","_s","numbers","setNumbers","spin","setSpin","intervalId","spinColumn","columnIndex","prevNumbers","newNumbers","slice","current","setInterval","clearInterval","handleSpinClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","column","number","numberIndex","_c","$RefreshReg$"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/src/siatka/losowanie2.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n// import './styles.css';\r\n\r\nfunction generateRandomNumbers(n, min, max) {\r\n  let arr = [];\r\n  for(let i = 0; i < n; i++) {\r\n      arr.push(Math.floor(Math.random() * (max - min + 1)) + min);\r\n  }\r\n  return arr;\r\n}\r\n\r\nlet randomNumbers = generateRandomNumbers(5, 1, 100); // generates 5 random numbers between 1 and 100\r\n// console.log(randomNumbers);\r\n\r\n\r\nfunction Losowanie2() {\r\n  const [numbers, setNumbers] = useState([\r\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n    [1, 3, 4, 3, 4, 5, 6, 7, 8, 9],\r\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n  ]);\r\n  const [spin, setSpin] = useState(false);\r\n  const intervalId = useRef(null);\r\n\r\n  const spinColumn = (columnIndex) => {\r\n    setNumbers(prevNumbers => {\r\n      const newNumbers = [...prevNumbers];\r\n      newNumbers[columnIndex] = [\r\n        ...newNumbers[columnIndex].slice(1), \r\n        Math.floor(Math.random() * 10) \r\n      ];\r\n      return newNumbers;\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (spin) {\r\n      intervalId.current = setInterval(() => {\r\n        for (let i = 0; i < 3; i++) {\r\n          spinColumn(i);\r\n        }\r\n      }, 1000); \r\n    } else {\r\n      if (intervalId.current) clearInterval(intervalId.current);\r\n    }\r\n\r\n    return () => {\r\n      if (intervalId.current) clearInterval(intervalId.current);\r\n    };\r\n  }, [spin]);\r\n\r\n  const handleSpinClick = () => {\r\n    setSpin(!spin);\r\n  };\r\n\r\n  return (\r\n    <div className='slot-machine'>\r\n      <button onClick={handleSpinClick}>{spin ? 'STOP' : 'SPIN'}</button>\r\n      <div className='number-display'>\r\n        {numbers.map((column, columnIndex) => (\r\n          <div key={columnIndex} className='number'>\r\n            {column.map((number, numberIndex) => (\r\n              <div key={numberIndex} className={`number-inner ${spin ? 'spin' : ''}`}>\r\n                {number}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Losowanie2;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}