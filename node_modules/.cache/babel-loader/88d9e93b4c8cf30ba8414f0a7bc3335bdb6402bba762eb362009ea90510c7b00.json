{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _get = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _defineProperty = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _mouse, _touch, _pointer;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Stage = exports.stages = void 0;\nvar Util_1 = require(\"./Util\");\nvar Factory_1 = require(\"./Factory\");\nvar Container_1 = require(\"./Container\");\nvar Global_1 = require(\"./Global\");\nvar Canvas_1 = require(\"./Canvas\");\nvar DragAndDrop_1 = require(\"./DragAndDrop\");\nvar Global_2 = require(\"./Global\");\nvar PointerEvents = require(\"./PointerEvents\");\nvar STAGE = 'Stage',\n  STRING = 'string',\n  PX = 'px',\n  MOUSEOUT = 'mouseout',\n  MOUSELEAVE = 'mouseleave',\n  MOUSEOVER = 'mouseover',\n  MOUSEENTER = 'mouseenter',\n  MOUSEMOVE = 'mousemove',\n  MOUSEDOWN = 'mousedown',\n  MOUSEUP = 'mouseup',\n  POINTERMOVE = 'pointermove',\n  POINTERDOWN = 'pointerdown',\n  POINTERUP = 'pointerup',\n  POINTERCANCEL = 'pointercancel',\n  LOSTPOINTERCAPTURE = 'lostpointercapture',\n  POINTEROUT = 'pointerout',\n  POINTERLEAVE = 'pointerleave',\n  POINTEROVER = 'pointerover',\n  POINTERENTER = 'pointerenter',\n  CONTEXTMENU = 'contextmenu',\n  TOUCHSTART = 'touchstart',\n  TOUCHEND = 'touchend',\n  TOUCHMOVE = 'touchmove',\n  TOUCHCANCEL = 'touchcancel',\n  WHEEL = 'wheel',\n  MAX_LAYERS_NUMBER = 5,\n  EVENTS = [[MOUSEENTER, '_pointerenter'], [MOUSEDOWN, '_pointerdown'], [MOUSEMOVE, '_pointermove'], [MOUSEUP, '_pointerup'], [MOUSELEAVE, '_pointerleave'], [TOUCHSTART, '_pointerdown'], [TOUCHMOVE, '_pointermove'], [TOUCHEND, '_pointerup'], [TOUCHCANCEL, '_pointercancel'], [MOUSEOVER, '_pointerover'], [WHEEL, '_wheel'], [CONTEXTMENU, '_contextmenu'], [POINTERDOWN, '_pointerdown'], [POINTERMOVE, '_pointermove'], [POINTERUP, '_pointerup'], [POINTERCANCEL, '_pointercancel'], [LOSTPOINTERCAPTURE, '_lostpointercapture']];\nvar EVENTS_MAP = {\n  mouse: (_mouse = {}, _defineProperty(_mouse, POINTEROUT, MOUSEOUT), _defineProperty(_mouse, POINTERLEAVE, MOUSELEAVE), _defineProperty(_mouse, POINTEROVER, MOUSEOVER), _defineProperty(_mouse, POINTERENTER, MOUSEENTER), _defineProperty(_mouse, POINTERMOVE, MOUSEMOVE), _defineProperty(_mouse, POINTERDOWN, MOUSEDOWN), _defineProperty(_mouse, POINTERUP, MOUSEUP), _defineProperty(_mouse, POINTERCANCEL, 'mousecancel'), _defineProperty(_mouse, \"pointerclick\", 'click'), _defineProperty(_mouse, \"pointerdblclick\", 'dblclick'), _mouse),\n  touch: (_touch = {}, _defineProperty(_touch, POINTEROUT, 'touchout'), _defineProperty(_touch, POINTERLEAVE, 'touchleave'), _defineProperty(_touch, POINTEROVER, 'touchover'), _defineProperty(_touch, POINTERENTER, 'touchenter'), _defineProperty(_touch, POINTERMOVE, TOUCHMOVE), _defineProperty(_touch, POINTERDOWN, TOUCHSTART), _defineProperty(_touch, POINTERUP, TOUCHEND), _defineProperty(_touch, POINTERCANCEL, TOUCHCANCEL), _defineProperty(_touch, \"pointerclick\", 'tap'), _defineProperty(_touch, \"pointerdblclick\", 'dbltap'), _touch),\n  pointer: (_pointer = {}, _defineProperty(_pointer, POINTEROUT, POINTEROUT), _defineProperty(_pointer, POINTERLEAVE, POINTERLEAVE), _defineProperty(_pointer, POINTEROVER, POINTEROVER), _defineProperty(_pointer, POINTERENTER, POINTERENTER), _defineProperty(_pointer, POINTERMOVE, POINTERMOVE), _defineProperty(_pointer, POINTERDOWN, POINTERDOWN), _defineProperty(_pointer, POINTERUP, POINTERUP), _defineProperty(_pointer, POINTERCANCEL, POINTERCANCEL), _defineProperty(_pointer, \"pointerclick\", 'pointerclick'), _defineProperty(_pointer, \"pointerdblclick\", 'pointerdblclick'), _pointer)\n};\nvar getEventType = function getEventType(type) {\n  if (type.indexOf('pointer') >= 0) {\n    return 'pointer';\n  }\n  if (type.indexOf('touch') >= 0) {\n    return 'touch';\n  }\n  return 'mouse';\n};\nvar getEventsMap = function getEventsMap(eventType) {\n  var type = getEventType(eventType);\n  if (type === 'pointer') {\n    return Global_1.Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n  }\n  if (type === 'touch') {\n    return EVENTS_MAP.touch;\n  }\n  if (type === 'mouse') {\n    return EVENTS_MAP.mouse;\n  }\n};\nfunction checkNoClip() {\n  var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n    Util_1.Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n  }\n  return attrs;\n}\nvar NO_POINTERS_MESSAGE = \"Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);\";\nexports.stages = [];\nvar Stage = /*#__PURE__*/function (_Container_1$Containe) {\n  _inherits(Stage, _Container_1$Containe);\n  var _super = _createSuper(Stage);\n  function Stage(config) {\n    var _this;\n    _classCallCheck(this, Stage);\n    _this = _super.call(this, checkNoClip(config));\n    _this._pointerPositions = [];\n    _this._changedPointerPositions = [];\n    _this._buildDOM();\n    _this._bindContentEvents();\n    exports.stages.push(_assertThisInitialized(_this));\n    _this.on('widthChange.konva heightChange.konva', _this._resizeDOM);\n    _this.on('visibleChange.konva', _this._checkVisibility);\n    _this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', function () {\n      checkNoClip(_this.attrs);\n    });\n    _this._checkVisibility();\n    return _this;\n  }\n  _createClass(Stage, [{\n    key: \"_validateAdd\",\n    value: function _validateAdd(child) {\n      var isLayer = child.getType() === 'Layer';\n      var isFastLayer = child.getType() === 'FastLayer';\n      var valid = isLayer || isFastLayer;\n      if (!valid) {\n        Util_1.Util.throw('You may only add layers to the stage.');\n      }\n    }\n  }, {\n    key: \"_checkVisibility\",\n    value: function _checkVisibility() {\n      if (!this.content) {\n        return;\n      }\n      var style = this.visible() ? '' : 'none';\n      this.content.style.display = style;\n    }\n  }, {\n    key: \"setContainer\",\n    value: function setContainer(container) {\n      if (typeof container === STRING) {\n        if (container.charAt(0) === '.') {\n          var className = container.slice(1);\n          container = document.getElementsByClassName(className)[0];\n        } else {\n          var id;\n          if (container.charAt(0) !== '#') {\n            id = container;\n          } else {\n            id = container.slice(1);\n          }\n          container = document.getElementById(id);\n        }\n        if (!container) {\n          throw 'Can not find container in document with id ' + id;\n        }\n      }\n      this._setAttr('container', container);\n      if (this.content) {\n        if (this.content.parentElement) {\n          this.content.parentElement.removeChild(this.content);\n        }\n        container.appendChild(this.content);\n      }\n      return this;\n    }\n  }, {\n    key: \"shouldDrawHit\",\n    value: function shouldDrawHit() {\n      return true;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var layers = this.children,\n        len = layers.length,\n        n;\n      for (n = 0; n < len; n++) {\n        layers[n].clear();\n      }\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(obj) {\n      if (!obj) {\n        obj = {};\n      }\n      obj.container = typeof document !== 'undefined' && document.createElement('div');\n      return Container_1.Container.prototype.clone.call(this, obj);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(Stage.prototype), \"destroy\", this).call(this);\n      var content = this.content;\n      if (content && Util_1.Util._isInDocument(content)) {\n        this.container().removeChild(content);\n      }\n      var index = exports.stages.indexOf(this);\n      if (index > -1) {\n        exports.stages.splice(index, 1);\n      }\n      Util_1.Util.releaseCanvas(this.bufferCanvas._canvas, this.bufferHitCanvas._canvas);\n      return this;\n    }\n  }, {\n    key: \"getPointerPosition\",\n    value: function getPointerPosition() {\n      var pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n      if (!pos) {\n        Util_1.Util.warn(NO_POINTERS_MESSAGE);\n        return null;\n      }\n      return {\n        x: pos.x,\n        y: pos.y\n      };\n    }\n  }, {\n    key: \"_getPointerById\",\n    value: function _getPointerById(id) {\n      return this._pointerPositions.find(function (p) {\n        return p.id === id;\n      });\n    }\n  }, {\n    key: \"getPointersPositions\",\n    value: function getPointersPositions() {\n      return this._pointerPositions;\n    }\n  }, {\n    key: \"getStage\",\n    value: function getStage() {\n      return this;\n    }\n  }, {\n    key: \"getContent\",\n    value: function getContent() {\n      return this.content;\n    }\n  }, {\n    key: \"_toKonvaCanvas\",\n    value: function _toKonvaCanvas(config) {\n      config = config || {};\n      config.x = config.x || 0;\n      config.y = config.y || 0;\n      config.width = config.width || this.width();\n      config.height = config.height || this.height();\n      var canvas = new Canvas_1.SceneCanvas({\n        width: config.width,\n        height: config.height,\n        pixelRatio: config.pixelRatio || 1\n      });\n      var _context = canvas.getContext()._context;\n      var layers = this.children;\n      if (config.x || config.y) {\n        _context.translate(-1 * config.x, -1 * config.y);\n      }\n      layers.forEach(function (layer) {\n        if (!layer.isVisible()) {\n          return;\n        }\n        var layerCanvas = layer._toKonvaCanvas(config);\n        _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n      });\n      return canvas;\n    }\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(pos) {\n      if (!pos) {\n        return null;\n      }\n      var layers = this.children,\n        len = layers.length,\n        end = len - 1,\n        n;\n      for (n = end; n >= 0; n--) {\n        var shape = layers[n].getIntersection(pos);\n        if (shape) {\n          return shape;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"_resizeDOM\",\n    value: function _resizeDOM() {\n      var width = this.width();\n      var height = this.height();\n      if (this.content) {\n        this.content.style.width = width + PX;\n        this.content.style.height = height + PX;\n      }\n      this.bufferCanvas.setSize(width, height);\n      this.bufferHitCanvas.setSize(width, height);\n      this.children.forEach(function (layer) {\n        layer.setSize({\n          width: width,\n          height: height\n        });\n        layer.draw();\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(layer) {\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n        return this;\n      }\n      _get(_getPrototypeOf(Stage.prototype), \"add\", this).call(this, layer);\n      var length = this.children.length;\n      if (length > MAX_LAYERS_NUMBER) {\n        Util_1.Util.warn('The stage has ' + length + ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n      }\n      layer.setSize({\n        width: this.width(),\n        height: this.height()\n      });\n      layer.draw();\n      if (Global_1.Konva.isBrowser) {\n        this.content.appendChild(layer.canvas._canvas);\n      }\n      return this;\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent() {\n      return null;\n    }\n  }, {\n    key: \"getLayer\",\n    value: function getLayer() {\n      return null;\n    }\n  }, {\n    key: \"hasPointerCapture\",\n    value: function hasPointerCapture(pointerId) {\n      return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n  }, {\n    key: \"setPointerCapture\",\n    value: function setPointerCapture(pointerId) {\n      PointerEvents.setPointerCapture(pointerId, this);\n    }\n  }, {\n    key: \"releaseCapture\",\n    value: function releaseCapture(pointerId) {\n      PointerEvents.releaseCapture(pointerId, this);\n    }\n  }, {\n    key: \"getLayers\",\n    value: function getLayers() {\n      return this.children;\n    }\n  }, {\n    key: \"_bindContentEvents\",\n    value: function _bindContentEvents() {\n      var _this2 = this;\n      if (!Global_1.Konva.isBrowser) {\n        return;\n      }\n      EVENTS.forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          event = _ref2[0],\n          methodName = _ref2[1];\n        _this2.content.addEventListener(event, function (evt) {\n          _this2[methodName](evt);\n        }, {\n          passive: false\n        });\n      });\n    }\n  }, {\n    key: \"_pointerenter\",\n    value: function _pointerenter(evt) {\n      this.setPointersPositions(evt);\n      var events = getEventsMap(evt.type);\n      this._fire(events.pointerenter, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }, {\n    key: \"_pointerover\",\n    value: function _pointerover(evt) {\n      this.setPointersPositions(evt);\n      var events = getEventsMap(evt.type);\n      this._fire(events.pointerover, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }, {\n    key: \"_getTargetShape\",\n    value: function _getTargetShape(evenType) {\n      var shape = this[evenType + 'targetShape'];\n      if (shape && !shape.getStage()) {\n        shape = null;\n      }\n      return shape;\n    }\n  }, {\n    key: \"_pointerleave\",\n    value: function _pointerleave(evt) {\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n      if (!events) {\n        return;\n      }\n      this.setPointersPositions(evt);\n      var targetShape = this._getTargetShape(eventType);\n      var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\n      if (targetShape && eventsEnabled) {\n        targetShape._fireAndBubble(events.pointerout, {\n          evt: evt\n        });\n        targetShape._fireAndBubble(events.pointerleave, {\n          evt: evt\n        });\n        this._fire(events.pointerleave, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n        this[eventType + 'targetShape'] = null;\n      } else if (eventsEnabled) {\n        this._fire(events.pointerleave, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n        this._fire(events.pointerout, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n      this.pointerPos = undefined;\n      this._pointerPositions = [];\n    }\n  }, {\n    key: \"_pointerdown\",\n    value: function _pointerdown(evt) {\n      var _this3 = this;\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n      if (!events) {\n        return;\n      }\n      this.setPointersPositions(evt);\n      var triggeredOnShape = false;\n      this._changedPointerPositions.forEach(function (pos) {\n        var shape = _this3.getIntersection(pos);\n        DragAndDrop_1.DD.justDragged = false;\n        Global_1.Konva['_' + eventType + 'ListenClick'] = true;\n        var hasShape = shape && shape.isListening();\n        if (!hasShape) {\n          return;\n        }\n        if (Global_1.Konva.capturePointerEventsEnabled) {\n          shape.setPointerCapture(pos.id);\n        }\n        _this3[eventType + 'ClickStartShape'] = shape;\n        shape._fireAndBubble(events.pointerdown, {\n          evt: evt,\n          pointerId: pos.id\n        });\n        triggeredOnShape = true;\n        var isTouch = evt.type.indexOf('touch') >= 0;\n        if (shape.preventDefault() && evt.cancelable && isTouch) {\n          evt.preventDefault();\n        }\n      });\n      if (!triggeredOnShape) {\n        this._fire(events.pointerdown, {\n          evt: evt,\n          target: this,\n          currentTarget: this,\n          pointerId: this._pointerPositions[0].id\n        });\n      }\n    }\n  }, {\n    key: \"_pointermove\",\n    value: function _pointermove(evt) {\n      var _this4 = this;\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n      if (!events) {\n        return;\n      }\n      if (DragAndDrop_1.DD.isDragging && DragAndDrop_1.DD.node.preventDefault() && evt.cancelable) {\n        evt.preventDefault();\n      }\n      this.setPointersPositions(evt);\n      var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\n      if (!eventsEnabled) {\n        return;\n      }\n      var processedShapesIds = {};\n      var triggeredOnShape = false;\n      var targetShape = this._getTargetShape(eventType);\n      this._changedPointerPositions.forEach(function (pos) {\n        var shape = PointerEvents.getCapturedShape(pos.id) || _this4.getIntersection(pos);\n        var pointerId = pos.id;\n        var event = {\n          evt: evt,\n          pointerId: pointerId\n        };\n        var differentTarget = targetShape !== shape;\n        if (differentTarget && targetShape) {\n          targetShape._fireAndBubble(events.pointerout, Object.assign({}, event), shape);\n          targetShape._fireAndBubble(events.pointerleave, Object.assign({}, event), shape);\n        }\n        if (shape) {\n          if (processedShapesIds[shape._id]) {\n            return;\n          }\n          processedShapesIds[shape._id] = true;\n        }\n        if (shape && shape.isListening()) {\n          triggeredOnShape = true;\n          if (differentTarget) {\n            shape._fireAndBubble(events.pointerover, Object.assign({}, event), targetShape);\n            shape._fireAndBubble(events.pointerenter, Object.assign({}, event), targetShape);\n            _this4[eventType + 'targetShape'] = shape;\n          }\n          shape._fireAndBubble(events.pointermove, Object.assign({}, event));\n        } else {\n          if (targetShape) {\n            _this4._fire(events.pointerover, {\n              evt: evt,\n              target: _this4,\n              currentTarget: _this4,\n              pointerId: pointerId\n            });\n            _this4[eventType + 'targetShape'] = null;\n          }\n        }\n      });\n      if (!triggeredOnShape) {\n        this._fire(events.pointermove, {\n          evt: evt,\n          target: this,\n          currentTarget: this,\n          pointerId: this._changedPointerPositions[0].id\n        });\n      }\n    }\n  }, {\n    key: \"_pointerup\",\n    value: function _pointerup(evt) {\n      var _this5 = this;\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n      if (!events) {\n        return;\n      }\n      this.setPointersPositions(evt);\n      var clickStartShape = this[eventType + 'ClickStartShape'];\n      var clickEndShape = this[eventType + 'ClickEndShape'];\n      var processedShapesIds = {};\n      var triggeredOnShape = false;\n      this._changedPointerPositions.forEach(function (pos) {\n        var shape = PointerEvents.getCapturedShape(pos.id) || _this5.getIntersection(pos);\n        if (shape) {\n          shape.releaseCapture(pos.id);\n          if (processedShapesIds[shape._id]) {\n            return;\n          }\n          processedShapesIds[shape._id] = true;\n        }\n        var pointerId = pos.id;\n        var event = {\n          evt: evt,\n          pointerId: pointerId\n        };\n        var fireDblClick = false;\n        if (Global_1.Konva['_' + eventType + 'InDblClickWindow']) {\n          fireDblClick = true;\n          clearTimeout(_this5[eventType + 'DblTimeout']);\n        } else if (!DragAndDrop_1.DD.justDragged) {\n          Global_1.Konva['_' + eventType + 'InDblClickWindow'] = true;\n          clearTimeout(_this5[eventType + 'DblTimeout']);\n        }\n        _this5[eventType + 'DblTimeout'] = setTimeout(function () {\n          Global_1.Konva['_' + eventType + 'InDblClickWindow'] = false;\n        }, Global_1.Konva.dblClickWindow);\n        if (shape && shape.isListening()) {\n          triggeredOnShape = true;\n          _this5[eventType + 'ClickEndShape'] = shape;\n          shape._fireAndBubble(events.pointerup, Object.assign({}, event));\n          if (Global_1.Konva['_' + eventType + 'ListenClick'] && clickStartShape && clickStartShape === shape) {\n            shape._fireAndBubble(events.pointerclick, Object.assign({}, event));\n            if (fireDblClick && clickEndShape && clickEndShape === shape) {\n              shape._fireAndBubble(events.pointerdblclick, Object.assign({}, event));\n            }\n          }\n        } else {\n          _this5[eventType + 'ClickEndShape'] = null;\n          if (Global_1.Konva['_' + eventType + 'ListenClick']) {\n            _this5._fire(events.pointerclick, {\n              evt: evt,\n              target: _this5,\n              currentTarget: _this5,\n              pointerId: pointerId\n            });\n          }\n          if (fireDblClick) {\n            _this5._fire(events.pointerdblclick, {\n              evt: evt,\n              target: _this5,\n              currentTarget: _this5,\n              pointerId: pointerId\n            });\n          }\n        }\n      });\n      if (!triggeredOnShape) {\n        this._fire(events.pointerup, {\n          evt: evt,\n          target: this,\n          currentTarget: this,\n          pointerId: this._changedPointerPositions[0].id\n        });\n      }\n      Global_1.Konva['_' + eventType + 'ListenClick'] = false;\n      if (evt.cancelable && eventType !== 'touch') {\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: \"_contextmenu\",\n    value: function _contextmenu(evt) {\n      this.setPointersPositions(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(CONTEXTMENU, {\n          evt: evt\n        });\n      } else {\n        this._fire(CONTEXTMENU, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n    }\n  }, {\n    key: \"_wheel\",\n    value: function _wheel(evt) {\n      this.setPointersPositions(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(WHEEL, {\n          evt: evt\n        });\n      } else {\n        this._fire(WHEEL, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n    }\n  }, {\n    key: \"_pointercancel\",\n    value: function _pointercancel(evt) {\n      this.setPointersPositions(evt);\n      var shape = PointerEvents.getCapturedShape(evt.pointerId) || this.getIntersection(this.getPointerPosition());\n      if (shape) {\n        shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n      }\n      PointerEvents.releaseCapture(evt.pointerId);\n    }\n  }, {\n    key: \"_lostpointercapture\",\n    value: function _lostpointercapture(evt) {\n      PointerEvents.releaseCapture(evt.pointerId);\n    }\n  }, {\n    key: \"setPointersPositions\",\n    value: function setPointersPositions(evt) {\n      var _this6 = this;\n      var contentPosition = this._getContentPosition(),\n        x = null,\n        y = null;\n      evt = evt ? evt : window.event;\n      if (evt.touches !== undefined) {\n        this._pointerPositions = [];\n        this._changedPointerPositions = [];\n        Array.prototype.forEach.call(evt.touches, function (touch) {\n          _this6._pointerPositions.push({\n            id: touch.identifier,\n            x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n            y: (touch.clientY - contentPosition.top) / contentPosition.scaleY\n          });\n        });\n        Array.prototype.forEach.call(evt.changedTouches || evt.touches, function (touch) {\n          _this6._changedPointerPositions.push({\n            id: touch.identifier,\n            x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n            y: (touch.clientY - contentPosition.top) / contentPosition.scaleY\n          });\n        });\n      } else {\n        x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n        y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n        this.pointerPos = {\n          x: x,\n          y: y\n        };\n        this._pointerPositions = [{\n          x: x,\n          y: y,\n          id: Util_1.Util._getFirstPointerId(evt)\n        }];\n        this._changedPointerPositions = [{\n          x: x,\n          y: y,\n          id: Util_1.Util._getFirstPointerId(evt)\n        }];\n      }\n    }\n  }, {\n    key: \"_setPointerPosition\",\n    value: function _setPointerPosition(evt) {\n      Util_1.Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n      this.setPointersPositions(evt);\n    }\n  }, {\n    key: \"_getContentPosition\",\n    value: function _getContentPosition() {\n      if (!this.content || !this.content.getBoundingClientRect) {\n        return {\n          top: 0,\n          left: 0,\n          scaleX: 1,\n          scaleY: 1\n        };\n      }\n      var rect = this.content.getBoundingClientRect();\n      return {\n        top: rect.top,\n        left: rect.left,\n        scaleX: rect.width / this.content.clientWidth || 1,\n        scaleY: rect.height / this.content.clientHeight || 1\n      };\n    }\n  }, {\n    key: \"_buildDOM\",\n    value: function _buildDOM() {\n      this.bufferCanvas = new Canvas_1.SceneCanvas({\n        width: this.width(),\n        height: this.height()\n      });\n      this.bufferHitCanvas = new Canvas_1.HitCanvas({\n        pixelRatio: 1,\n        width: this.width(),\n        height: this.height()\n      });\n      if (!Global_1.Konva.isBrowser) {\n        return;\n      }\n      var container = this.container();\n      if (!container) {\n        throw 'Stage has no container. A container is required.';\n      }\n      container.innerHTML = '';\n      this.content = document.createElement('div');\n      this.content.style.position = 'relative';\n      this.content.style.userSelect = 'none';\n      this.content.className = 'konvajs-content';\n      this.content.setAttribute('role', 'presentation');\n      container.appendChild(this.content);\n      this._resizeDOM();\n    }\n  }, {\n    key: \"cache\",\n    value: function cache() {\n      Util_1.Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n      return this;\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      return this;\n    }\n  }, {\n    key: \"batchDraw\",\n    value: function batchDraw() {\n      this.getChildren().forEach(function (layer) {\n        layer.batchDraw();\n      });\n      return this;\n    }\n  }]);\n  return Stage;\n}(Container_1.Container);\nexports.Stage = Stage;\nStage.prototype.nodeType = STAGE;\n(0, Global_2._registerNode)(Stage);\nFactory_1.Factory.addGetterSetter(Stage, 'container');","map":{"version":3,"names":["_slicedToArray","require","default","_classCallCheck","_createClass","_assertThisInitialized","_get","_getPrototypeOf","_inherits","_createSuper","_defineProperty","_mouse","_touch","_pointer","Object","defineProperty","exports","value","Stage","stages","Util_1","Factory_1","Container_1","Global_1","Canvas_1","DragAndDrop_1","Global_2","PointerEvents","STAGE","STRING","PX","MOUSEOUT","MOUSELEAVE","MOUSEOVER","MOUSEENTER","MOUSEMOVE","MOUSEDOWN","MOUSEUP","POINTERMOVE","POINTERDOWN","POINTERUP","POINTERCANCEL","LOSTPOINTERCAPTURE","POINTEROUT","POINTERLEAVE","POINTEROVER","POINTERENTER","CONTEXTMENU","TOUCHSTART","TOUCHEND","TOUCHMOVE","TOUCHCANCEL","WHEEL","MAX_LAYERS_NUMBER","EVENTS","EVENTS_MAP","mouse","touch","pointer","getEventType","type","indexOf","getEventsMap","eventType","Konva","pointerEventsEnabled","checkNoClip","attrs","arguments","length","undefined","clipFunc","clipWidth","clipHeight","Util","warn","NO_POINTERS_MESSAGE","_Container_1$Containe","_super","config","_this","call","_pointerPositions","_changedPointerPositions","_buildDOM","_bindContentEvents","push","on","_resizeDOM","_checkVisibility","key","_validateAdd","child","isLayer","getType","isFastLayer","valid","throw","content","style","visible","display","setContainer","container","charAt","className","slice","document","getElementsByClassName","id","getElementById","_setAttr","parentElement","removeChild","appendChild","shouldDrawHit","clear","layers","children","len","n","clone","obj","createElement","Container","prototype","destroy","_isInDocument","index","splice","releaseCanvas","bufferCanvas","_canvas","bufferHitCanvas","getPointerPosition","pos","x","y","_getPointerById","find","p","getPointersPositions","getStage","getContent","_toKonvaCanvas","width","height","canvas","SceneCanvas","pixelRatio","_context","getContext","translate","forEach","layer","isVisible","layerCanvas","drawImage","getWidth","getPixelRatio","getHeight","getIntersection","end","shape","setSize","draw","add","_len","rest","Array","_key","i","isBrowser","getParent","getLayer","hasPointerCapture","pointerId","setPointerCapture","releaseCapture","getLayers","_this2","_ref","_ref2","event","methodName","addEventListener","evt","passive","_pointerenter","setPointersPositions","events","_fire","pointerenter","target","currentTarget","_pointerover","pointerover","_getTargetShape","evenType","_pointerleave","targetShape","eventsEnabled","DD","isDragging","hitOnDragEnabled","_fireAndBubble","pointerout","pointerleave","pointerPos","_pointerdown","_this3","triggeredOnShape","justDragged","hasShape","isListening","capturePointerEventsEnabled","pointerdown","isTouch","preventDefault","cancelable","_pointermove","_this4","node","processedShapesIds","getCapturedShape","differentTarget","assign","_id","pointermove","_pointerup","_this5","clickStartShape","clickEndShape","fireDblClick","clearTimeout","setTimeout","dblClickWindow","pointerup","pointerclick","pointerdblclick","_contextmenu","_wheel","_pointercancel","createEvent","_lostpointercapture","_this6","contentPosition","_getContentPosition","window","touches","identifier","clientX","left","scaleX","clientY","top","scaleY","changedTouches","_getFirstPointerId","_setPointerPosition","getBoundingClientRect","rect","clientWidth","clientHeight","HitCanvas","innerHTML","position","userSelect","setAttribute","cache","clearCache","batchDraw","getChildren","nodeType","_registerNode","Factory","addGetterSetter"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/konva/lib/Stage.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Stage = exports.stages = void 0;\nconst Util_1 = require(\"./Util\");\nconst Factory_1 = require(\"./Factory\");\nconst Container_1 = require(\"./Container\");\nconst Global_1 = require(\"./Global\");\nconst Canvas_1 = require(\"./Canvas\");\nconst DragAndDrop_1 = require(\"./DragAndDrop\");\nconst Global_2 = require(\"./Global\");\nconst PointerEvents = require(\"./PointerEvents\");\nvar STAGE = 'Stage', STRING = 'string', PX = 'px', MOUSEOUT = 'mouseout', MOUSELEAVE = 'mouseleave', MOUSEOVER = 'mouseover', MOUSEENTER = 'mouseenter', MOUSEMOVE = 'mousemove', MOUSEDOWN = 'mousedown', MOUSEUP = 'mouseup', POINTERMOVE = 'pointermove', POINTERDOWN = 'pointerdown', POINTERUP = 'pointerup', POINTERCANCEL = 'pointercancel', LOSTPOINTERCAPTURE = 'lostpointercapture', POINTEROUT = 'pointerout', POINTERLEAVE = 'pointerleave', POINTEROVER = 'pointerover', POINTERENTER = 'pointerenter', CONTEXTMENU = 'contextmenu', TOUCHSTART = 'touchstart', TOUCHEND = 'touchend', TOUCHMOVE = 'touchmove', TOUCHCANCEL = 'touchcancel', WHEEL = 'wheel', MAX_LAYERS_NUMBER = 5, EVENTS = [\n    [MOUSEENTER, '_pointerenter'],\n    [MOUSEDOWN, '_pointerdown'],\n    [MOUSEMOVE, '_pointermove'],\n    [MOUSEUP, '_pointerup'],\n    [MOUSELEAVE, '_pointerleave'],\n    [TOUCHSTART, '_pointerdown'],\n    [TOUCHMOVE, '_pointermove'],\n    [TOUCHEND, '_pointerup'],\n    [TOUCHCANCEL, '_pointercancel'],\n    [MOUSEOVER, '_pointerover'],\n    [WHEEL, '_wheel'],\n    [CONTEXTMENU, '_contextmenu'],\n    [POINTERDOWN, '_pointerdown'],\n    [POINTERMOVE, '_pointermove'],\n    [POINTERUP, '_pointerup'],\n    [POINTERCANCEL, '_pointercancel'],\n    [LOSTPOINTERCAPTURE, '_lostpointercapture'],\n];\nconst EVENTS_MAP = {\n    mouse: {\n        [POINTEROUT]: MOUSEOUT,\n        [POINTERLEAVE]: MOUSELEAVE,\n        [POINTEROVER]: MOUSEOVER,\n        [POINTERENTER]: MOUSEENTER,\n        [POINTERMOVE]: MOUSEMOVE,\n        [POINTERDOWN]: MOUSEDOWN,\n        [POINTERUP]: MOUSEUP,\n        [POINTERCANCEL]: 'mousecancel',\n        pointerclick: 'click',\n        pointerdblclick: 'dblclick',\n    },\n    touch: {\n        [POINTEROUT]: 'touchout',\n        [POINTERLEAVE]: 'touchleave',\n        [POINTEROVER]: 'touchover',\n        [POINTERENTER]: 'touchenter',\n        [POINTERMOVE]: TOUCHMOVE,\n        [POINTERDOWN]: TOUCHSTART,\n        [POINTERUP]: TOUCHEND,\n        [POINTERCANCEL]: TOUCHCANCEL,\n        pointerclick: 'tap',\n        pointerdblclick: 'dbltap',\n    },\n    pointer: {\n        [POINTEROUT]: POINTEROUT,\n        [POINTERLEAVE]: POINTERLEAVE,\n        [POINTEROVER]: POINTEROVER,\n        [POINTERENTER]: POINTERENTER,\n        [POINTERMOVE]: POINTERMOVE,\n        [POINTERDOWN]: POINTERDOWN,\n        [POINTERUP]: POINTERUP,\n        [POINTERCANCEL]: POINTERCANCEL,\n        pointerclick: 'pointerclick',\n        pointerdblclick: 'pointerdblclick',\n    },\n};\nconst getEventType = (type) => {\n    if (type.indexOf('pointer') >= 0) {\n        return 'pointer';\n    }\n    if (type.indexOf('touch') >= 0) {\n        return 'touch';\n    }\n    return 'mouse';\n};\nconst getEventsMap = (eventType) => {\n    const type = getEventType(eventType);\n    if (type === 'pointer') {\n        return Global_1.Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n    }\n    if (type === 'touch') {\n        return EVENTS_MAP.touch;\n    }\n    if (type === 'mouse') {\n        return EVENTS_MAP.mouse;\n    }\n};\nfunction checkNoClip(attrs = {}) {\n    if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n        Util_1.Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n    }\n    return attrs;\n}\nconst NO_POINTERS_MESSAGE = `Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);`;\nexports.stages = [];\nclass Stage extends Container_1.Container {\n    constructor(config) {\n        super(checkNoClip(config));\n        this._pointerPositions = [];\n        this._changedPointerPositions = [];\n        this._buildDOM();\n        this._bindContentEvents();\n        exports.stages.push(this);\n        this.on('widthChange.konva heightChange.konva', this._resizeDOM);\n        this.on('visibleChange.konva', this._checkVisibility);\n        this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', () => {\n            checkNoClip(this.attrs);\n        });\n        this._checkVisibility();\n    }\n    _validateAdd(child) {\n        const isLayer = child.getType() === 'Layer';\n        const isFastLayer = child.getType() === 'FastLayer';\n        const valid = isLayer || isFastLayer;\n        if (!valid) {\n            Util_1.Util.throw('You may only add layers to the stage.');\n        }\n    }\n    _checkVisibility() {\n        if (!this.content) {\n            return;\n        }\n        const style = this.visible() ? '' : 'none';\n        this.content.style.display = style;\n    }\n    setContainer(container) {\n        if (typeof container === STRING) {\n            if (container.charAt(0) === '.') {\n                var className = container.slice(1);\n                container = document.getElementsByClassName(className)[0];\n            }\n            else {\n                var id;\n                if (container.charAt(0) !== '#') {\n                    id = container;\n                }\n                else {\n                    id = container.slice(1);\n                }\n                container = document.getElementById(id);\n            }\n            if (!container) {\n                throw 'Can not find container in document with id ' + id;\n            }\n        }\n        this._setAttr('container', container);\n        if (this.content) {\n            if (this.content.parentElement) {\n                this.content.parentElement.removeChild(this.content);\n            }\n            container.appendChild(this.content);\n        }\n        return this;\n    }\n    shouldDrawHit() {\n        return true;\n    }\n    clear() {\n        var layers = this.children, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            layers[n].clear();\n        }\n        return this;\n    }\n    clone(obj) {\n        if (!obj) {\n            obj = {};\n        }\n        obj.container =\n            typeof document !== 'undefined' && document.createElement('div');\n        return Container_1.Container.prototype.clone.call(this, obj);\n    }\n    destroy() {\n        super.destroy();\n        var content = this.content;\n        if (content && Util_1.Util._isInDocument(content)) {\n            this.container().removeChild(content);\n        }\n        var index = exports.stages.indexOf(this);\n        if (index > -1) {\n            exports.stages.splice(index, 1);\n        }\n        Util_1.Util.releaseCanvas(this.bufferCanvas._canvas, this.bufferHitCanvas._canvas);\n        return this;\n    }\n    getPointerPosition() {\n        const pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n        if (!pos) {\n            Util_1.Util.warn(NO_POINTERS_MESSAGE);\n            return null;\n        }\n        return {\n            x: pos.x,\n            y: pos.y,\n        };\n    }\n    _getPointerById(id) {\n        return this._pointerPositions.find((p) => p.id === id);\n    }\n    getPointersPositions() {\n        return this._pointerPositions;\n    }\n    getStage() {\n        return this;\n    }\n    getContent() {\n        return this.content;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.x = config.x || 0;\n        config.y = config.y || 0;\n        config.width = config.width || this.width();\n        config.height = config.height || this.height();\n        var canvas = new Canvas_1.SceneCanvas({\n            width: config.width,\n            height: config.height,\n            pixelRatio: config.pixelRatio || 1,\n        });\n        var _context = canvas.getContext()._context;\n        var layers = this.children;\n        if (config.x || config.y) {\n            _context.translate(-1 * config.x, -1 * config.y);\n        }\n        layers.forEach(function (layer) {\n            if (!layer.isVisible()) {\n                return;\n            }\n            var layerCanvas = layer._toKonvaCanvas(config);\n            _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n        });\n        return canvas;\n    }\n    getIntersection(pos) {\n        if (!pos) {\n            return null;\n        }\n        var layers = this.children, len = layers.length, end = len - 1, n;\n        for (n = end; n >= 0; n--) {\n            const shape = layers[n].getIntersection(pos);\n            if (shape) {\n                return shape;\n            }\n        }\n        return null;\n    }\n    _resizeDOM() {\n        var width = this.width();\n        var height = this.height();\n        if (this.content) {\n            this.content.style.width = width + PX;\n            this.content.style.height = height + PX;\n        }\n        this.bufferCanvas.setSize(width, height);\n        this.bufferHitCanvas.setSize(width, height);\n        this.children.forEach((layer) => {\n            layer.setSize({ width, height });\n            layer.draw();\n        });\n    }\n    add(layer, ...rest) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        super.add(layer);\n        var length = this.children.length;\n        if (length > MAX_LAYERS_NUMBER) {\n            Util_1.Util.warn('The stage has ' +\n                length +\n                ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n        }\n        layer.setSize({ width: this.width(), height: this.height() });\n        layer.draw();\n        if (Global_1.Konva.isBrowser) {\n            this.content.appendChild(layer.canvas._canvas);\n        }\n        return this;\n    }\n    getParent() {\n        return null;\n    }\n    getLayer() {\n        return null;\n    }\n    hasPointerCapture(pointerId) {\n        return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        PointerEvents.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        PointerEvents.releaseCapture(pointerId, this);\n    }\n    getLayers() {\n        return this.children;\n    }\n    _bindContentEvents() {\n        if (!Global_1.Konva.isBrowser) {\n            return;\n        }\n        EVENTS.forEach(([event, methodName]) => {\n            this.content.addEventListener(event, (evt) => {\n                this[methodName](evt);\n            }, { passive: false });\n        });\n    }\n    _pointerenter(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        this._fire(events.pointerenter, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n        });\n    }\n    _pointerover(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        this._fire(events.pointerover, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n        });\n    }\n    _getTargetShape(evenType) {\n        let shape = this[evenType + 'targetShape'];\n        if (shape && !shape.getStage()) {\n            shape = null;\n        }\n        return shape;\n    }\n    _pointerleave(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var targetShape = this._getTargetShape(eventType);\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\n        if (targetShape && eventsEnabled) {\n            targetShape._fireAndBubble(events.pointerout, { evt: evt });\n            targetShape._fireAndBubble(events.pointerleave, { evt: evt });\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this[eventType + 'targetShape'] = null;\n        }\n        else if (eventsEnabled) {\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this._fire(events.pointerout, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n        this.pointerPos = undefined;\n        this._pointerPositions = [];\n    }\n    _pointerdown(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            var shape = this.getIntersection(pos);\n            DragAndDrop_1.DD.justDragged = false;\n            Global_1.Konva['_' + eventType + 'ListenClick'] = true;\n            const hasShape = shape && shape.isListening();\n            if (!hasShape) {\n                return;\n            }\n            if (Global_1.Konva.capturePointerEventsEnabled) {\n                shape.setPointerCapture(pos.id);\n            }\n            this[eventType + 'ClickStartShape'] = shape;\n            shape._fireAndBubble(events.pointerdown, {\n                evt: evt,\n                pointerId: pos.id,\n            });\n            triggeredOnShape = true;\n            const isTouch = evt.type.indexOf('touch') >= 0;\n            if (shape.preventDefault() && evt.cancelable && isTouch) {\n                evt.preventDefault();\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerdown, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._pointerPositions[0].id,\n            });\n        }\n    }\n    _pointermove(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        if (DragAndDrop_1.DD.isDragging && DragAndDrop_1.DD.node.preventDefault() && evt.cancelable) {\n            evt.preventDefault();\n        }\n        this.setPointersPositions(evt);\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\n        if (!eventsEnabled) {\n            return;\n        }\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        var targetShape = this._getTargetShape(eventType);\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            var differentTarget = targetShape !== shape;\n            if (differentTarget && targetShape) {\n                targetShape._fireAndBubble(events.pointerout, Object.assign({}, event), shape);\n                targetShape._fireAndBubble(events.pointerleave, Object.assign({}, event), shape);\n            }\n            if (shape) {\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                if (differentTarget) {\n                    shape._fireAndBubble(events.pointerover, Object.assign({}, event), targetShape);\n                    shape._fireAndBubble(events.pointerenter, Object.assign({}, event), targetShape);\n                    this[eventType + 'targetShape'] = shape;\n                }\n                shape._fireAndBubble(events.pointermove, Object.assign({}, event));\n            }\n            else {\n                if (targetShape) {\n                    this._fire(events.pointerover, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                    this[eventType + 'targetShape'] = null;\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointermove, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n    }\n    _pointerup(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        const clickStartShape = this[eventType + 'ClickStartShape'];\n        const clickEndShape = this[eventType + 'ClickEndShape'];\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            if (shape) {\n                shape.releaseCapture(pos.id);\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            let fireDblClick = false;\n            if (Global_1.Konva['_' + eventType + 'InDblClickWindow']) {\n                fireDblClick = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            else if (!DragAndDrop_1.DD.justDragged) {\n                Global_1.Konva['_' + eventType + 'InDblClickWindow'] = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            this[eventType + 'DblTimeout'] = setTimeout(function () {\n                Global_1.Konva['_' + eventType + 'InDblClickWindow'] = false;\n            }, Global_1.Konva.dblClickWindow);\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                this[eventType + 'ClickEndShape'] = shape;\n                shape._fireAndBubble(events.pointerup, Object.assign({}, event));\n                if (Global_1.Konva['_' + eventType + 'ListenClick'] &&\n                    clickStartShape &&\n                    clickStartShape === shape) {\n                    shape._fireAndBubble(events.pointerclick, Object.assign({}, event));\n                    if (fireDblClick && clickEndShape && clickEndShape === shape) {\n                        shape._fireAndBubble(events.pointerdblclick, Object.assign({}, event));\n                    }\n                }\n            }\n            else {\n                this[eventType + 'ClickEndShape'] = null;\n                if (Global_1.Konva['_' + eventType + 'ListenClick']) {\n                    this._fire(events.pointerclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n                if (fireDblClick) {\n                    this._fire(events.pointerdblclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerup, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n        Global_1.Konva['_' + eventType + 'ListenClick'] = false;\n        if (evt.cancelable && eventType !== 'touch') {\n            evt.preventDefault();\n        }\n    }\n    _contextmenu(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(CONTEXTMENU, { evt: evt });\n        }\n        else {\n            this._fire(CONTEXTMENU, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _wheel(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(WHEEL, { evt: evt });\n        }\n        else {\n            this._fire(WHEEL, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _pointercancel(evt) {\n        this.setPointersPositions(evt);\n        const shape = PointerEvents.getCapturedShape(evt.pointerId) ||\n            this.getIntersection(this.getPointerPosition());\n        if (shape) {\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n        }\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    _lostpointercapture(evt) {\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    setPointersPositions(evt) {\n        var contentPosition = this._getContentPosition(), x = null, y = null;\n        evt = evt ? evt : window.event;\n        if (evt.touches !== undefined) {\n            this._pointerPositions = [];\n            this._changedPointerPositions = [];\n            Array.prototype.forEach.call(evt.touches, (touch) => {\n                this._pointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n            Array.prototype.forEach.call(evt.changedTouches || evt.touches, (touch) => {\n                this._changedPointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n        }\n        else {\n            x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n            y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n            this.pointerPos = {\n                x: x,\n                y: y,\n            };\n            this._pointerPositions = [{ x, y, id: Util_1.Util._getFirstPointerId(evt) }];\n            this._changedPointerPositions = [\n                { x, y, id: Util_1.Util._getFirstPointerId(evt) },\n            ];\n        }\n    }\n    _setPointerPosition(evt) {\n        Util_1.Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n        this.setPointersPositions(evt);\n    }\n    _getContentPosition() {\n        if (!this.content || !this.content.getBoundingClientRect) {\n            return {\n                top: 0,\n                left: 0,\n                scaleX: 1,\n                scaleY: 1,\n            };\n        }\n        var rect = this.content.getBoundingClientRect();\n        return {\n            top: rect.top,\n            left: rect.left,\n            scaleX: rect.width / this.content.clientWidth || 1,\n            scaleY: rect.height / this.content.clientHeight || 1,\n        };\n    }\n    _buildDOM() {\n        this.bufferCanvas = new Canvas_1.SceneCanvas({\n            width: this.width(),\n            height: this.height(),\n        });\n        this.bufferHitCanvas = new Canvas_1.HitCanvas({\n            pixelRatio: 1,\n            width: this.width(),\n            height: this.height(),\n        });\n        if (!Global_1.Konva.isBrowser) {\n            return;\n        }\n        var container = this.container();\n        if (!container) {\n            throw 'Stage has no container. A container is required.';\n        }\n        container.innerHTML = '';\n        this.content = document.createElement('div');\n        this.content.style.position = 'relative';\n        this.content.style.userSelect = 'none';\n        this.content.className = 'konvajs-content';\n        this.content.setAttribute('role', 'presentation');\n        container.appendChild(this.content);\n        this._resizeDOM();\n    }\n    cache() {\n        Util_1.Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n        return this;\n    }\n    clearCache() {\n        return this;\n    }\n    batchDraw() {\n        this.getChildren().forEach(function (layer) {\n            layer.batchDraw();\n        });\n        return this;\n    }\n}\nexports.Stage = Stage;\nStage.prototype.nodeType = STAGE;\n(0, Global_2._registerNode)(Stage);\nFactory_1.Factory.addGetterSetter(Stage, 'container');\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}