{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport logo from '../MainWindow/img/logo.png';\nimport jwt from 'jsonwebtoken'; // <-- Dodaj to\n\nconst URL = 'http://localhost:3001';\nfunction Logowanie({\n  handleLogin\n}) {\n  _s();\n  const [username, setUsername] = useState(\"ADMIN11\");\n  const [password, setPassword] = useState(\"admino\");\n  const [token, setToken] = useState(\"\");\n  const [serverMessage, setServerMessage] = useState(\"\");\n  useEffect(() => {\n    setToken(generateToken());\n  }, []);\n  const generateToken = () => {\n    return '_' + Math.random().toString(36).substr(2, 9);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`${URL}/logowanie`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          token\n        })\n      });\n      const data = await response.json();\n      setServerMessage(data.message);\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        handleLogin(data.message);\n\n        // Tutaj dekoduj token\n        const decodedToken = jwt.verify(data.token, 'tajny_klucz');\n        console.log(`Użytkownik: ${username}, Token: ${data.token}, Rola: ${decodedToken.role}`);\n      }\n    } catch (error) {\n      setServerMessage(`Niepoprawne dane logowania: ${error.message}`);\n    }\n  };\n\n  // Rest of your component...\n\n  // ...\n}\n_s(Logowanie, \"DMMBVyDlY+skiNgVT8WCtQKLmYM=\");\n_c = Logowanie;\nexport default Logowanie;\nvar _c;\n$RefreshReg$(_c, \"Logowanie\");","map":{"version":3,"names":["React","useState","useEffect","logo","jwt","URL","Logowanie","handleLogin","_s","username","setUsername","password","setPassword","token","setToken","serverMessage","setServerMessage","generateToken","Math","random","toString","substr","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","message","localStorage","setItem","decodedToken","verify","console","log","role","error","_c","$RefreshReg$"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/src/logowanie/logowanie.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport logo from '../MainWindow/img/logo.png';\r\nimport jwt from 'jsonwebtoken'; // <-- Dodaj to\r\n\r\nconst URL = 'http://localhost:3001';\r\n\r\nfunction Logowanie({ handleLogin }) {\r\n  const [username, setUsername] = useState(\"ADMIN11\");\r\n  const [password, setPassword] = useState(\"admino\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [serverMessage, setServerMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setToken(generateToken());\r\n  }, []);\r\n\r\n  const generateToken = () => {\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(`${URL}/logowanie`, {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password, token })\r\n      });\r\n\r\n      const data = await response.json();\r\n      setServerMessage(data.message);\r\n\r\n      if (data.token) {\r\n        localStorage.setItem('token', data.token);\r\n        handleLogin(data.message);\r\n\r\n        // Tutaj dekoduj token\r\n        const decodedToken = jwt.verify(data.token, 'tajny_klucz');\r\n        console.log(`Użytkownik: ${username}, Token: ${data.token}, Rola: ${decodedToken.role}`);\r\n      }\r\n    } catch (error) {\r\n      setServerMessage(`Niepoprawne dane logowania: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // Rest of your component...\r\n  \r\n  // ...\r\n}\r\n\r\nexport default Logowanie;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,GAAG,MAAM,cAAc,CAAC,CAAC;;AAEhC,MAAMC,GAAG,GAAG,uBAAuB;AAEnC,SAASC,SAASA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,SAAS,CAAC;EACnD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,QAAQ,CAAC;EAClD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdY,QAAQ,CAACG,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAGA,CAAA,KAAM;IAC1B,OAAO,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EACtD,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAErB,GAAI,YAAW,EAAE;QAC/CsB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEtB,QAAQ;UAAEE,QAAQ;UAAEE;QAAM,CAAC;MACpD,CAAC,CAAC;MAEF,MAAMmB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCjB,gBAAgB,CAACgB,IAAI,CAACE,OAAO,CAAC;MAE9B,IAAIF,IAAI,CAACnB,KAAK,EAAE;QACdsB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACnB,KAAK,CAAC;QACzCN,WAAW,CAACyB,IAAI,CAACE,OAAO,CAAC;;QAEzB;QACA,MAAMG,YAAY,GAAGjC,GAAG,CAACkC,MAAM,CAACN,IAAI,CAACnB,KAAK,EAAE,aAAa,CAAC;QAC1D0B,OAAO,CAACC,GAAG,CAAE,eAAc/B,QAAS,YAAWuB,IAAI,CAACnB,KAAM,WAAUwB,YAAY,CAACI,IAAK,EAAC,CAAC;MAC1F;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd1B,gBAAgB,CAAE,+BAA8B0B,KAAK,CAACR,OAAQ,EAAC,CAAC;IAClE;EACF,CAAC;;EAED;;EAEA;AACF;AAAC1B,EAAA,CA3CQF,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AA6ClB,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}