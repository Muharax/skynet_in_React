{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _get = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Transformer = void 0;\nvar Util_1 = require(\"../Util\");\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Shape_1 = require(\"../Shape\");\nvar Rect_1 = require(\"./Rect\");\nvar Group_1 = require(\"../Group\");\nvar Global_1 = require(\"../Global\");\nvar Validators_1 = require(\"../Validators\");\nvar Global_2 = require(\"../Global\");\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = ['resizeEnabledChange', 'rotateAnchorOffsetChange', 'rotateEnabledChange', 'enabledAnchorsChange', 'anchorSizeChange', 'borderEnabledChange', 'borderStrokeChange', 'borderStrokeWidthChange', 'borderDashChange', 'anchorStrokeChange', 'anchorStrokeWidthChange', 'anchorFillChange', 'anchorCornerRadiusChange', 'ignoreStrokeChange', 'anchorStyleFuncChange'].map(function (e) {\n  return e + \".\".concat(EVENTS_NAME);\n}).join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = ['widthChange', 'heightChange', 'scaleXChange', 'scaleYChange', 'skewXChange', 'skewYChange', 'rotationChange', 'offsetXChange', 'offsetYChange', 'transformsEnabledChange', 'strokeWidthChange'];\nvar ANGLES = {\n  'top-left': -45,\n  'top-center': 0,\n  'top-right': 45,\n  'middle-right': -90,\n  'middle-left': 90,\n  'bottom-left': -135,\n  'bottom-center': 180,\n  'bottom-right': 135\n};\nvar TOUCH_DEVICE = ('ontouchstart' in Global_1.Konva._global);\nfunction getCursor(anchorName, rad) {\n  if (anchorName === 'rotater') {\n    return 'crosshair';\n  }\n  rad += Util_1.Util.degToRad(ANGLES[anchorName] || 0);\n  var angle = (Util_1.Util.radToDeg(rad) % 360 + 360) % 360;\n  if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\n    return 'ns-resize';\n  } else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n    return 'nesw-resize';\n  } else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n    return 'ew-resize';\n  } else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n    return 'nwse-resize';\n  } else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n    return 'ns-resize';\n  } else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n    return 'nesw-resize';\n  } else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n    return 'ew-resize';\n  } else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n    return 'nwse-resize';\n  } else {\n    Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n    return 'pointer';\n  }\n}\nvar ANCHORS_NAMES = ['top-left', 'top-center', 'top-right', 'middle-right', 'middle-left', 'bottom-left', 'bottom-center', 'bottom-right'];\nvar MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n  return {\n    x: shape.x + shape.width / 2 * Math.cos(shape.rotation) + shape.height / 2 * Math.sin(-shape.rotation),\n    y: shape.y + shape.height / 2 * Math.cos(shape.rotation) + shape.width / 2 * Math.sin(shape.rotation)\n  };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n  var x = point.x + (shape.x - point.x) * Math.cos(angleRad) - (shape.y - point.y) * Math.sin(angleRad);\n  var y = point.y + (shape.x - point.x) * Math.sin(angleRad) + (shape.y - point.y) * Math.cos(angleRad);\n  return Object.assign(Object.assign({}, shape), {\n    rotation: shape.rotation + angleRad,\n    x: x,\n    y: y\n  });\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n  var center = getCenter(shape);\n  return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n  var snapped = newRotationRad;\n  for (var i = 0; i < snaps.length; i++) {\n    var angle = Global_1.Konva.getAngle(snaps[i]);\n    var absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n    var dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n    if (dif < tol) {\n      snapped = angle;\n    }\n  }\n  return snapped;\n}\nvar Transformer = /*#__PURE__*/function (_Group_1$Group) {\n  _inherits(Transformer, _Group_1$Group);\n  var _super = _createSuper(Transformer);\n  function Transformer(config) {\n    var _this;\n    _classCallCheck(this, Transformer);\n    _this = _super.call(this, config);\n    _this._transforming = false;\n    _this._createElements();\n    _this._handleMouseMove = _this._handleMouseMove.bind(_assertThisInitialized(_this));\n    _this._handleMouseUp = _this._handleMouseUp.bind(_assertThisInitialized(_this));\n    _this.update = _this.update.bind(_assertThisInitialized(_this));\n    _this.on(ATTR_CHANGE_LIST, _this.update);\n    if (_this.getNode()) {\n      _this.update();\n    }\n    return _this;\n  }\n  _createClass(Transformer, [{\n    key: \"attachTo\",\n    value: function attachTo(node) {\n      this.setNode(node);\n      return this;\n    }\n  }, {\n    key: \"setNode\",\n    value: function setNode(node) {\n      Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n      return this.setNodes([node]);\n    }\n  }, {\n    key: \"getNode\",\n    value: function getNode() {\n      return this._nodes && this._nodes[0];\n    }\n  }, {\n    key: \"_getEventNamespace\",\n    value: function _getEventNamespace() {\n      return EVENTS_NAME + this._id;\n    }\n  }, {\n    key: \"setNodes\",\n    value: function setNodes() {\n      var _this2 = this;\n      var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      if (this._nodes && this._nodes.length) {\n        this.detach();\n      }\n      var filteredNodes = nodes.filter(function (node) {\n        if (node.isAncestorOf(_this2)) {\n          Util_1.Util.error('Konva.Transformer cannot be an a child of the node you are trying to attach');\n          return false;\n        }\n        return true;\n      });\n      this._nodes = nodes = filteredNodes;\n      if (nodes.length === 1 && this.useSingleNodeRotation()) {\n        this.rotation(nodes[0].getAbsoluteRotation());\n      } else {\n        this.rotation(0);\n      }\n      this._nodes.forEach(function (node) {\n        var onChange = function onChange() {\n          if (_this2.nodes().length === 1 && _this2.useSingleNodeRotation()) {\n            _this2.rotation(_this2.nodes()[0].getAbsoluteRotation());\n          }\n          _this2._resetTransformCache();\n          if (!_this2._transforming && !_this2.isDragging()) {\n            _this2.update();\n          }\n        };\n        var additionalEvents = node._attrsAffectingSize.map(function (prop) {\n          return prop + 'Change.' + _this2._getEventNamespace();\n        }).join(' ');\n        node.on(additionalEvents, onChange);\n        node.on(TRANSFORM_CHANGE_STR.map(function (e) {\n          return e + \".\".concat(_this2._getEventNamespace());\n        }).join(' '), onChange);\n        node.on(\"absoluteTransformChange.\".concat(_this2._getEventNamespace()), onChange);\n        _this2._proxyDrag(node);\n      });\n      this._resetTransformCache();\n      var elementsCreated = !!this.findOne('.top-left');\n      if (elementsCreated) {\n        this.update();\n      }\n      return this;\n    }\n  }, {\n    key: \"_proxyDrag\",\n    value: function _proxyDrag(node) {\n      var _this3 = this;\n      var lastPos;\n      node.on(\"dragstart.\".concat(this._getEventNamespace()), function (e) {\n        lastPos = node.getAbsolutePosition();\n        if (!_this3.isDragging() && node !== _this3.findOne('.back')) {\n          _this3.startDrag(e, false);\n        }\n      });\n      node.on(\"dragmove.\".concat(this._getEventNamespace()), function (e) {\n        if (!lastPos) {\n          return;\n        }\n        var abs = node.getAbsolutePosition();\n        var dx = abs.x - lastPos.x;\n        var dy = abs.y - lastPos.y;\n        _this3.nodes().forEach(function (otherNode) {\n          if (otherNode === node) {\n            return;\n          }\n          if (otherNode.isDragging()) {\n            return;\n          }\n          var otherAbs = otherNode.getAbsolutePosition();\n          otherNode.setAbsolutePosition({\n            x: otherAbs.x + dx,\n            y: otherAbs.y + dy\n          });\n          otherNode.startDrag(e);\n        });\n        lastPos = null;\n      });\n    }\n  }, {\n    key: \"getNodes\",\n    value: function getNodes() {\n      return this._nodes || [];\n    }\n  }, {\n    key: \"getActiveAnchor\",\n    value: function getActiveAnchor() {\n      return this._movingAnchorName;\n    }\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      var _this4 = this;\n      if (this._nodes) {\n        this._nodes.forEach(function (node) {\n          node.off('.' + _this4._getEventNamespace());\n        });\n      }\n      this._nodes = [];\n      this._resetTransformCache();\n    }\n  }, {\n    key: \"_resetTransformCache\",\n    value: function _resetTransformCache() {\n      this._clearCache(NODES_RECT);\n      this._clearCache('transform');\n      this._clearSelfAndDescendantCache('absoluteTransform');\n    }\n  }, {\n    key: \"_getNodeRect\",\n    value: function _getNodeRect() {\n      return this._getCache(NODES_RECT, this.__getNodeRect);\n    }\n  }, {\n    key: \"__getNodeShape\",\n    value: function __getNodeShape(node) {\n      var rot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.rotation();\n      var relative = arguments.length > 2 ? arguments[2] : undefined;\n      var rect = node.getClientRect({\n        skipTransform: true,\n        skipShadow: true,\n        skipStroke: this.ignoreStroke()\n      });\n      var absScale = node.getAbsoluteScale(relative);\n      var absPos = node.getAbsolutePosition(relative);\n      var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n      var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n      var rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) % (Math.PI * 2);\n      var box = {\n        x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n        y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n        width: rect.width * absScale.x,\n        height: rect.height * absScale.y,\n        rotation: rotation\n      };\n      return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\n        x: 0,\n        y: 0\n      });\n    }\n  }, {\n    key: \"__getNodeRect\",\n    value: function __getNodeRect() {\n      var _this5 = this;\n      var node = this.getNode();\n      if (!node) {\n        return {\n          x: -MAX_SAFE_INTEGER,\n          y: -MAX_SAFE_INTEGER,\n          width: 0,\n          height: 0,\n          rotation: 0\n        };\n      }\n      var totalPoints = [];\n      this.nodes().map(function (node) {\n        var box = node.getClientRect({\n          skipTransform: true,\n          skipShadow: true,\n          skipStroke: _this5.ignoreStroke()\n        });\n        var points = [{\n          x: box.x,\n          y: box.y\n        }, {\n          x: box.x + box.width,\n          y: box.y\n        }, {\n          x: box.x + box.width,\n          y: box.y + box.height\n        }, {\n          x: box.x,\n          y: box.y + box.height\n        }];\n        var trans = node.getAbsoluteTransform();\n        points.forEach(function (point) {\n          var transformed = trans.point(point);\n          totalPoints.push(transformed);\n        });\n      });\n      var tr = new Util_1.Transform();\n      tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\n      var minX, minY, maxX, maxY;\n      totalPoints.forEach(function (point) {\n        var transformed = tr.point(point);\n        if (minX === undefined) {\n          minX = maxX = transformed.x;\n          minY = maxY = transformed.y;\n        }\n        minX = Math.min(minX, transformed.x);\n        minY = Math.min(minY, transformed.y);\n        maxX = Math.max(maxX, transformed.x);\n        maxY = Math.max(maxY, transformed.y);\n      });\n      tr.invert();\n      var p = tr.point({\n        x: minX,\n        y: minY\n      });\n      return {\n        x: p.x,\n        y: p.y,\n        width: maxX - minX,\n        height: maxY - minY,\n        rotation: Global_1.Konva.getAngle(this.rotation())\n      };\n    }\n  }, {\n    key: \"getX\",\n    value: function getX() {\n      return this._getNodeRect().x;\n    }\n  }, {\n    key: \"getY\",\n    value: function getY() {\n      return this._getNodeRect().y;\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this._getNodeRect().width;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this._getNodeRect().height;\n    }\n  }, {\n    key: \"_createElements\",\n    value: function _createElements() {\n      this._createBack();\n      ANCHORS_NAMES.forEach(function (name) {\n        this._createAnchor(name);\n      }.bind(this));\n      this._createAnchor('rotater');\n    }\n  }, {\n    key: \"_createAnchor\",\n    value: function _createAnchor(name) {\n      var _this6 = this;\n      var anchor = new Rect_1.Rect({\n        stroke: 'rgb(0, 161, 255)',\n        fill: 'white',\n        strokeWidth: 1,\n        name: name + ' _anchor',\n        dragDistance: 0,\n        draggable: true,\n        hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto'\n      });\n      var self = this;\n      anchor.on('mousedown touchstart', function (e) {\n        self._handleMouseDown(e);\n      });\n      anchor.on('dragstart', function (e) {\n        anchor.stopDrag();\n        e.cancelBubble = true;\n      });\n      anchor.on('dragend', function (e) {\n        e.cancelBubble = true;\n      });\n      anchor.on('mouseenter', function () {\n        var rad = Global_1.Konva.getAngle(_this6.rotation());\n        var cursor = getCursor(name, rad);\n        anchor.getStage().content && (anchor.getStage().content.style.cursor = cursor);\n        _this6._cursorChange = true;\n      });\n      anchor.on('mouseout', function () {\n        anchor.getStage().content && (anchor.getStage().content.style.cursor = '');\n        _this6._cursorChange = false;\n      });\n      this.add(anchor);\n    }\n  }, {\n    key: \"_createBack\",\n    value: function _createBack() {\n      var _this7 = this;\n      var back = new Shape_1.Shape({\n        name: 'back',\n        width: 0,\n        height: 0,\n        draggable: true,\n        sceneFunc: function sceneFunc(ctx) {\n          var tr = this.getParent();\n          var padding = tr.padding();\n          ctx.beginPath();\n          ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n          ctx.moveTo(this.width() / 2, -padding);\n          if (tr.rotateEnabled()) {\n            ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(this.height()) - padding);\n          }\n          ctx.fillStrokeShape(this);\n        },\n        hitFunc: function hitFunc(ctx, shape) {\n          if (!_this7.shouldOverdrawWholeArea()) {\n            return;\n          }\n          var padding = _this7.padding();\n          ctx.beginPath();\n          ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n          ctx.fillStrokeShape(shape);\n        }\n      });\n      this.add(back);\n      this._proxyDrag(back);\n      back.on('dragstart', function (e) {\n        e.cancelBubble = true;\n      });\n      back.on('dragmove', function (e) {\n        e.cancelBubble = true;\n      });\n      back.on('dragend', function (e) {\n        e.cancelBubble = true;\n      });\n      this.on('dragmove', function (e) {\n        _this7.update();\n      });\n    }\n  }, {\n    key: \"_handleMouseDown\",\n    value: function _handleMouseDown(e) {\n      this._movingAnchorName = e.target.name().split(' ')[0];\n      var attrs = this._getNodeRect();\n      var width = attrs.width;\n      var height = attrs.height;\n      var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n      this.sin = Math.abs(height / hypotenuse);\n      this.cos = Math.abs(width / hypotenuse);\n      if (typeof window !== 'undefined') {\n        window.addEventListener('mousemove', this._handleMouseMove);\n        window.addEventListener('touchmove', this._handleMouseMove);\n        window.addEventListener('mouseup', this._handleMouseUp, true);\n        window.addEventListener('touchend', this._handleMouseUp, true);\n      }\n      this._transforming = true;\n      var ap = e.target.getAbsolutePosition();\n      var pos = e.target.getStage().getPointerPosition();\n      this._anchorDragOffset = {\n        x: pos.x - ap.x,\n        y: pos.y - ap.y\n      };\n      this._fire('transformstart', {\n        evt: e.evt,\n        target: this.getNode()\n      });\n      this._nodes.forEach(function (target) {\n        target._fire('transformstart', {\n          evt: e.evt,\n          target: target\n        });\n      });\n    }\n  }, {\n    key: \"_handleMouseMove\",\n    value: function _handleMouseMove(e) {\n      var x, y, newHypotenuse;\n      var anchorNode = this.findOne('.' + this._movingAnchorName);\n      var stage = anchorNode.getStage();\n      stage.setPointersPositions(e);\n      var pp = stage.getPointerPosition();\n      var newNodePos = {\n        x: pp.x - this._anchorDragOffset.x,\n        y: pp.y - this._anchorDragOffset.y\n      };\n      var oldAbs = anchorNode.getAbsolutePosition();\n      if (this.anchorDragBoundFunc()) {\n        newNodePos = this.anchorDragBoundFunc()(oldAbs, newNodePos, e);\n      }\n      anchorNode.setAbsolutePosition(newNodePos);\n      var newAbs = anchorNode.getAbsolutePosition();\n      if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n        return;\n      }\n      if (this._movingAnchorName === 'rotater') {\n        var attrs = this._getNodeRect();\n        x = anchorNode.x() - attrs.width / 2;\n        y = -anchorNode.y() + attrs.height / 2;\n        var delta = Math.atan2(-y, x) + Math.PI / 2;\n        if (attrs.height < 0) {\n          delta -= Math.PI;\n        }\n        var oldRotation = Global_1.Konva.getAngle(this.rotation());\n        var newRotation = oldRotation + delta;\n        var tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\n        var snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n        var diff = snappedRot - attrs.rotation;\n        var shape = rotateAroundCenter(attrs, diff);\n        this._fitNodesInto(shape, e);\n        return;\n      }\n      var shiftBehavior = this.shiftBehavior();\n      var keepProportion;\n      if (shiftBehavior === 'inverted') {\n        keepProportion = this.keepRatio() && !e.shiftKey;\n      } else if (shiftBehavior === 'none') {\n        keepProportion = this.keepRatio();\n      } else {\n        keepProportion = this.keepRatio() || e.shiftKey;\n      }\n      var centeredScaling = this.centeredScaling() || e.altKey;\n      if (this._movingAnchorName === 'top-left') {\n        if (keepProportion) {\n          var comparePoint = centeredScaling ? {\n            x: this.width() / 2,\n            y: this.height() / 2\n          } : {\n            x: this.findOne('.bottom-right').x(),\n            y: this.findOne('.bottom-right').y()\n          };\n          newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) + Math.pow(comparePoint.y - anchorNode.y(), 2));\n          var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n          var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n          x = newHypotenuse * this.cos * reverseX;\n          y = newHypotenuse * this.sin * reverseY;\n          this.findOne('.top-left').x(comparePoint.x - x);\n          this.findOne('.top-left').y(comparePoint.y - y);\n        }\n      } else if (this._movingAnchorName === 'top-center') {\n        this.findOne('.top-left').y(anchorNode.y());\n      } else if (this._movingAnchorName === 'top-right') {\n        if (keepProportion) {\n          var comparePoint = centeredScaling ? {\n            x: this.width() / 2,\n            y: this.height() / 2\n          } : {\n            x: this.findOne('.bottom-left').x(),\n            y: this.findOne('.bottom-left').y()\n          };\n          newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) + Math.pow(comparePoint.y - anchorNode.y(), 2));\n          var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n          var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n          x = newHypotenuse * this.cos * reverseX;\n          y = newHypotenuse * this.sin * reverseY;\n          this.findOne('.top-right').x(comparePoint.x + x);\n          this.findOne('.top-right').y(comparePoint.y - y);\n        }\n        var pos = anchorNode.position();\n        this.findOne('.top-left').y(pos.y);\n        this.findOne('.bottom-right').x(pos.x);\n      } else if (this._movingAnchorName === 'middle-left') {\n        this.findOne('.top-left').x(anchorNode.x());\n      } else if (this._movingAnchorName === 'middle-right') {\n        this.findOne('.bottom-right').x(anchorNode.x());\n      } else if (this._movingAnchorName === 'bottom-left') {\n        if (keepProportion) {\n          var comparePoint = centeredScaling ? {\n            x: this.width() / 2,\n            y: this.height() / 2\n          } : {\n            x: this.findOne('.top-right').x(),\n            y: this.findOne('.top-right').y()\n          };\n          newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) + Math.pow(anchorNode.y() - comparePoint.y, 2));\n          var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n          var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n          x = newHypotenuse * this.cos * reverseX;\n          y = newHypotenuse * this.sin * reverseY;\n          anchorNode.x(comparePoint.x - x);\n          anchorNode.y(comparePoint.y + y);\n        }\n        pos = anchorNode.position();\n        this.findOne('.top-left').x(pos.x);\n        this.findOne('.bottom-right').y(pos.y);\n      } else if (this._movingAnchorName === 'bottom-center') {\n        this.findOne('.bottom-right').y(anchorNode.y());\n      } else if (this._movingAnchorName === 'bottom-right') {\n        if (keepProportion) {\n          var comparePoint = centeredScaling ? {\n            x: this.width() / 2,\n            y: this.height() / 2\n          } : {\n            x: this.findOne('.top-left').x(),\n            y: this.findOne('.top-left').y()\n          };\n          newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) + Math.pow(anchorNode.y() - comparePoint.y, 2));\n          var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n          var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n          x = newHypotenuse * this.cos * reverseX;\n          y = newHypotenuse * this.sin * reverseY;\n          this.findOne('.bottom-right').x(comparePoint.x + x);\n          this.findOne('.bottom-right').y(comparePoint.y + y);\n        }\n      } else {\n        console.error(new Error('Wrong position argument of selection resizer: ' + this._movingAnchorName));\n      }\n      var centeredScaling = this.centeredScaling() || e.altKey;\n      if (centeredScaling) {\n        var topLeft = this.findOne('.top-left');\n        var bottomRight = this.findOne('.bottom-right');\n        var topOffsetX = topLeft.x();\n        var topOffsetY = topLeft.y();\n        var bottomOffsetX = this.getWidth() - bottomRight.x();\n        var bottomOffsetY = this.getHeight() - bottomRight.y();\n        bottomRight.move({\n          x: -topOffsetX,\n          y: -topOffsetY\n        });\n        topLeft.move({\n          x: bottomOffsetX,\n          y: bottomOffsetY\n        });\n      }\n      var absPos = this.findOne('.top-left').getAbsolutePosition();\n      x = absPos.x;\n      y = absPos.y;\n      var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n      var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n      this._fitNodesInto({\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        rotation: Global_1.Konva.getAngle(this.rotation())\n      }, e);\n    }\n  }, {\n    key: \"_handleMouseUp\",\n    value: function _handleMouseUp(e) {\n      this._removeEvents(e);\n    }\n  }, {\n    key: \"getAbsoluteTransform\",\n    value: function getAbsoluteTransform() {\n      return this.getTransform();\n    }\n  }, {\n    key: \"_removeEvents\",\n    value: function _removeEvents(e) {\n      if (this._transforming) {\n        this._transforming = false;\n        if (typeof window !== 'undefined') {\n          window.removeEventListener('mousemove', this._handleMouseMove);\n          window.removeEventListener('touchmove', this._handleMouseMove);\n          window.removeEventListener('mouseup', this._handleMouseUp, true);\n          window.removeEventListener('touchend', this._handleMouseUp, true);\n        }\n        var node = this.getNode();\n        this._fire('transformend', {\n          evt: e,\n          target: node\n        });\n        if (node) {\n          this._nodes.forEach(function (target) {\n            target._fire('transformend', {\n              evt: e,\n              target: target\n            });\n          });\n        }\n        this._movingAnchorName = null;\n      }\n    }\n  }, {\n    key: \"_fitNodesInto\",\n    value: function _fitNodesInto(newAttrs, evt) {\n      var _this8 = this;\n      var oldAttrs = this._getNodeRect();\n      var minSize = 1;\n      if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n        this.update();\n        return;\n      }\n      if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n        this.update();\n        return;\n      }\n      var allowNegativeScale = this.flipEnabled();\n      var t = new Util_1.Transform();\n      t.rotate(Global_1.Konva.getAngle(this.rotation()));\n      if (this._movingAnchorName && newAttrs.width < 0 && this._movingAnchorName.indexOf('left') >= 0) {\n        var offset = t.point({\n          x: -this.padding() * 2,\n          y: 0\n        });\n        newAttrs.x += offset.x;\n        newAttrs.y += offset.y;\n        newAttrs.width += this.padding() * 2;\n        this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n        this._anchorDragOffset.x -= offset.x;\n        this._anchorDragOffset.y -= offset.y;\n        if (!allowNegativeScale) {\n          this.update();\n          return;\n        }\n      } else if (this._movingAnchorName && newAttrs.width < 0 && this._movingAnchorName.indexOf('right') >= 0) {\n        var _offset = t.point({\n          x: this.padding() * 2,\n          y: 0\n        });\n        this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n        this._anchorDragOffset.x -= _offset.x;\n        this._anchorDragOffset.y -= _offset.y;\n        newAttrs.width += this.padding() * 2;\n        if (!allowNegativeScale) {\n          this.update();\n          return;\n        }\n      }\n      if (this._movingAnchorName && newAttrs.height < 0 && this._movingAnchorName.indexOf('top') >= 0) {\n        var _offset2 = t.point({\n          x: 0,\n          y: -this.padding() * 2\n        });\n        newAttrs.x += _offset2.x;\n        newAttrs.y += _offset2.y;\n        this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n        this._anchorDragOffset.x -= _offset2.x;\n        this._anchorDragOffset.y -= _offset2.y;\n        newAttrs.height += this.padding() * 2;\n        if (!allowNegativeScale) {\n          this.update();\n          return;\n        }\n      } else if (this._movingAnchorName && newAttrs.height < 0 && this._movingAnchorName.indexOf('bottom') >= 0) {\n        var _offset3 = t.point({\n          x: 0,\n          y: this.padding() * 2\n        });\n        this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n        this._anchorDragOffset.x -= _offset3.x;\n        this._anchorDragOffset.y -= _offset3.y;\n        newAttrs.height += this.padding() * 2;\n        if (!allowNegativeScale) {\n          this.update();\n          return;\n        }\n      }\n      if (this.boundBoxFunc()) {\n        var bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n        if (bounded) {\n          newAttrs = bounded;\n        } else {\n          Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n        }\n      }\n      var baseSize = 10000000;\n      var oldTr = new Util_1.Transform();\n      oldTr.translate(oldAttrs.x, oldAttrs.y);\n      oldTr.rotate(oldAttrs.rotation);\n      oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n      var newTr = new Util_1.Transform();\n      newTr.translate(newAttrs.x, newAttrs.y);\n      newTr.rotate(newAttrs.rotation);\n      newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n      var delta = newTr.multiply(oldTr.invert());\n      this._nodes.forEach(function (node) {\n        var _a;\n        var parentTransform = node.getParent().getAbsoluteTransform();\n        var localTransform = node.getTransform().copy();\n        localTransform.translate(node.offsetX(), node.offsetY());\n        var newLocalTransform = new Util_1.Transform();\n        newLocalTransform.multiply(parentTransform.copy().invert()).multiply(delta).multiply(parentTransform).multiply(localTransform);\n        var attrs = newLocalTransform.decompose();\n        node.setAttrs(attrs);\n        _this8._fire('transform', {\n          evt: evt,\n          target: node\n        });\n        node._fire('transform', {\n          evt: evt,\n          target: node\n        });\n        (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n      });\n      this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\n      this._resetTransformCache();\n      this.update();\n      this.getLayer().batchDraw();\n    }\n  }, {\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      this._resetTransformCache();\n      this.update();\n    }\n  }, {\n    key: \"_batchChangeChild\",\n    value: function _batchChangeChild(selector, attrs) {\n      var anchor = this.findOne(selector);\n      anchor.setAttrs(attrs);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this9 = this;\n      var _a;\n      var attrs = this._getNodeRect();\n      this.rotation(Util_1.Util._getRotation(attrs.rotation));\n      var width = attrs.width;\n      var height = attrs.height;\n      var enabledAnchors = this.enabledAnchors();\n      var resizeEnabled = this.resizeEnabled();\n      var padding = this.padding();\n      var anchorSize = this.anchorSize();\n      var anchors = this.find('._anchor');\n      anchors.forEach(function (node) {\n        node.setAttrs({\n          width: anchorSize,\n          height: anchorSize,\n          offsetX: anchorSize / 2,\n          offsetY: anchorSize / 2,\n          stroke: _this9.anchorStroke(),\n          strokeWidth: _this9.anchorStrokeWidth(),\n          fill: _this9.anchorFill(),\n          cornerRadius: _this9.anchorCornerRadius()\n        });\n      });\n      this._batchChangeChild('.top-left', {\n        x: 0,\n        y: 0,\n        offsetX: anchorSize / 2 + padding,\n        offsetY: anchorSize / 2 + padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0\n      });\n      this._batchChangeChild('.top-center', {\n        x: width / 2,\n        y: 0,\n        offsetY: anchorSize / 2 + padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0\n      });\n      this._batchChangeChild('.top-right', {\n        x: width,\n        y: 0,\n        offsetX: anchorSize / 2 - padding,\n        offsetY: anchorSize / 2 + padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0\n      });\n      this._batchChangeChild('.middle-left', {\n        x: 0,\n        y: height / 2,\n        offsetX: anchorSize / 2 + padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0\n      });\n      this._batchChangeChild('.middle-right', {\n        x: width,\n        y: height / 2,\n        offsetX: anchorSize / 2 - padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0\n      });\n      this._batchChangeChild('.bottom-left', {\n        x: 0,\n        y: height,\n        offsetX: anchorSize / 2 + padding,\n        offsetY: anchorSize / 2 - padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0\n      });\n      this._batchChangeChild('.bottom-center', {\n        x: width / 2,\n        y: height,\n        offsetY: anchorSize / 2 - padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0\n      });\n      this._batchChangeChild('.bottom-right', {\n        x: width,\n        y: height,\n        offsetX: anchorSize / 2 - padding,\n        offsetY: anchorSize / 2 - padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0\n      });\n      this._batchChangeChild('.rotater', {\n        x: width / 2,\n        y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\n        visible: this.rotateEnabled()\n      });\n      this._batchChangeChild('.back', {\n        width: width,\n        height: height,\n        visible: this.borderEnabled(),\n        stroke: this.borderStroke(),\n        strokeWidth: this.borderStrokeWidth(),\n        dash: this.borderDash(),\n        x: 0,\n        y: 0\n      });\n      var styleFunc = this.anchorStyleFunc();\n      if (styleFunc) {\n        anchors.forEach(function (node) {\n          styleFunc(node);\n        });\n      }\n      (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    }\n  }, {\n    key: \"isTransforming\",\n    value: function isTransforming() {\n      return this._transforming;\n    }\n  }, {\n    key: \"stopTransform\",\n    value: function stopTransform() {\n      if (this._transforming) {\n        this._removeEvents();\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\n        if (anchorNode) {\n          anchorNode.stopDrag();\n        }\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.getStage() && this._cursorChange) {\n        this.getStage().content && (this.getStage().content.style.cursor = '');\n      }\n      Group_1.Group.prototype.destroy.call(this);\n      this.detach();\n      this._removeEvents();\n      return this;\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject() {\n      return Node_1.Node.prototype.toObject.call(this);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(obj) {\n      var node = Node_1.Node.prototype.clone.call(this, obj);\n      return node;\n    }\n  }, {\n    key: \"getClientRect\",\n    value: function getClientRect() {\n      if (this.nodes().length > 0) {\n        return _get(_getPrototypeOf(Transformer.prototype), \"getClientRect\", this).call(this);\n      } else {\n        return {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n    }\n  }]);\n  return Transformer;\n}(Group_1.Group);\nexports.Transformer = Transformer;\nfunction validateAnchors(val) {\n  if (!(val instanceof Array)) {\n    Util_1.Util.warn('enabledAnchors value should be an array');\n  }\n  if (val instanceof Array) {\n    val.forEach(function (name) {\n      if (ANCHORS_NAMES.indexOf(name) === -1) {\n        Util_1.Util.warn('Unknown anchor name: ' + name + '. Available names are: ' + ANCHORS_NAMES.join(', '));\n      }\n    });\n  }\n  return val || [];\n}\nTransformer.prototype.className = 'Transformer';\n(0, Global_2._registerNode)(Transformer);\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory_1.Factory.addGetterSetter(Transformer, 'flipEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'shiftBehavior', 'default');\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorDragBoundFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStyleFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'useSingleNodeRotation', true);\nFactory_1.Factory.backCompat(Transformer, {\n  lineEnabled: 'borderEnabled',\n  rotateHandlerOffset: 'rotateAnchorOffset',\n  enabledHandlers: 'enabledAnchors'\n});","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","_assertThisInitialized","_get","_getPrototypeOf","_inherits","_createSuper","Object","defineProperty","exports","value","Transformer","Util_1","Factory_1","Node_1","Shape_1","Rect_1","Group_1","Global_1","Validators_1","Global_2","EVENTS_NAME","ATTR_CHANGE_LIST","map","e","concat","join","NODES_RECT","TRANSFORM_CHANGE_STR","ANGLES","TOUCH_DEVICE","Konva","_global","getCursor","anchorName","rad","Util","degToRad","angle","radToDeg","_inRange","error","ANCHORS_NAMES","MAX_SAFE_INTEGER","getCenter","shape","x","width","Math","cos","rotation","height","sin","y","rotateAroundPoint","angleRad","point","assign","rotateAroundCenter","deltaRad","center","getSnap","snaps","newRotationRad","tol","snapped","i","length","getAngle","absDiff","abs","PI","dif","min","_Group_1$Group","_super","config","_this","call","_transforming","_createElements","_handleMouseMove","bind","_handleMouseUp","update","on","getNode","key","attachTo","node","setNode","warn","setNodes","_nodes","_getEventNamespace","_id","_this2","nodes","arguments","undefined","detach","filteredNodes","filter","isAncestorOf","useSingleNodeRotation","getAbsoluteRotation","forEach","onChange","_resetTransformCache","isDragging","additionalEvents","_attrsAffectingSize","prop","_proxyDrag","elementsCreated","findOne","_this3","lastPos","getAbsolutePosition","startDrag","dx","dy","otherNode","otherAbs","setAbsolutePosition","getNodes","getActiveAnchor","_movingAnchorName","_this4","off","_clearCache","_clearSelfAndDescendantCache","_getNodeRect","_getCache","__getNodeRect","__getNodeShape","rot","relative","rect","getClientRect","skipTransform","skipShadow","skipStroke","ignoreStroke","absScale","getAbsoluteScale","absPos","offsetX","offsetY","box","_this5","totalPoints","points","trans","getAbsoluteTransform","transformed","push","tr","Transform","rotate","minX","minY","maxX","maxY","max","invert","p","getX","getY","getWidth","getHeight","_createBack","name","_createAnchor","_this6","anchor","Rect","stroke","fill","strokeWidth","dragDistance","draggable","hitStrokeWidth","self","_handleMouseDown","stopDrag","cancelBubble","cursor","getStage","content","style","_cursorChange","add","_this7","back","Shape","sceneFunc","ctx","getParent","padding","beginPath","moveTo","rotateEnabled","lineTo","rotateAnchorOffset","_sign","fillStrokeShape","hitFunc","shouldOverdrawWholeArea","target","split","attrs","hypotenuse","sqrt","pow","window","addEventListener","ap","pos","getPointerPosition","_anchorDragOffset","_fire","evt","newHypotenuse","anchorNode","stage","setPointersPositions","pp","newNodePos","oldAbs","anchorDragBoundFunc","newAbs","delta","atan2","oldRotation","newRotation","rotationSnapTolerance","snappedRot","rotationSnaps","diff","_fitNodesInto","shiftBehavior","keepProportion","keepRatio","shiftKey","centeredScaling","altKey","comparePoint","reverseX","reverseY","position","console","Error","topLeft","bottomRight","topOffsetX","topOffsetY","bottomOffsetX","bottomOffsetY","move","_removeEvents","getTransform","removeEventListener","newAttrs","_this8","oldAttrs","minSize","allowNegativeScale","flipEnabled","t","indexOf","offset","replace","boundBoxFunc","bounded","baseSize","oldTr","translate","scale","newTr","multiply","_a","parentTransform","localTransform","copy","newLocalTransform","decompose","setAttrs","getLayer","batchDraw","_getRotation","forceUpdate","_batchChangeChild","selector","_this9","enabledAnchors","resizeEnabled","anchorSize","anchors","find","anchorStroke","anchorStrokeWidth","anchorFill","cornerRadius","anchorCornerRadius","visible","borderEnabled","borderStroke","borderStrokeWidth","dash","borderDash","styleFunc","anchorStyleFunc","isTransforming","stopTransform","destroy","Group","prototype","toObject","Node","clone","obj","validateAnchors","val","Array","className","_registerNode","Factory","addGetterSetter","getBooleanValidator","getNumberValidator","backCompat","lineEnabled","rotateHandlerOffset","enabledHandlers"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/konva/lib/shapes/Transformer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transformer = void 0;\nconst Util_1 = require(\"../Util\");\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Shape_1 = require(\"../Shape\");\nconst Rect_1 = require(\"./Rect\");\nconst Group_1 = require(\"../Group\");\nconst Global_1 = require(\"../Global\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_2 = require(\"../Global\");\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateAnchorOffsetChange',\n    'rotateEnabledChange',\n    'enabledAnchorsChange',\n    'anchorSizeChange',\n    'borderEnabledChange',\n    'borderStrokeChange',\n    'borderStrokeWidthChange',\n    'borderDashChange',\n    'anchorStrokeChange',\n    'anchorStrokeWidthChange',\n    'anchorFillChange',\n    'anchorCornerRadiusChange',\n    'ignoreStrokeChange',\n    'anchorStyleFuncChange',\n]\n    .map((e) => e + `.${EVENTS_NAME}`)\n    .join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = [\n    'widthChange',\n    'heightChange',\n    'scaleXChange',\n    'scaleYChange',\n    'skewXChange',\n    'skewYChange',\n    'rotationChange',\n    'offsetXChange',\n    'offsetYChange',\n    'transformsEnabledChange',\n    'strokeWidthChange',\n];\nvar ANGLES = {\n    'top-left': -45,\n    'top-center': 0,\n    'top-right': 45,\n    'middle-right': -90,\n    'middle-left': 90,\n    'bottom-left': -135,\n    'bottom-center': 180,\n    'bottom-right': 135,\n};\nconst TOUCH_DEVICE = 'ontouchstart' in Global_1.Konva._global;\nfunction getCursor(anchorName, rad) {\n    if (anchorName === 'rotater') {\n        return 'crosshair';\n    }\n    rad += Util_1.Util.degToRad(ANGLES[anchorName] || 0);\n    var angle = ((Util_1.Util.radToDeg(rad) % 360) + 360) % 360;\n    if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else {\n        Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n        return 'pointer';\n    }\n}\nvar ANCHORS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right',\n];\nvar MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n    return {\n        x: shape.x +\n            (shape.width / 2) * Math.cos(shape.rotation) +\n            (shape.height / 2) * Math.sin(-shape.rotation),\n        y: shape.y +\n            (shape.height / 2) * Math.cos(shape.rotation) +\n            (shape.width / 2) * Math.sin(shape.rotation),\n    };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n    const x = point.x +\n        (shape.x - point.x) * Math.cos(angleRad) -\n        (shape.y - point.y) * Math.sin(angleRad);\n    const y = point.y +\n        (shape.x - point.x) * Math.sin(angleRad) +\n        (shape.y - point.y) * Math.cos(angleRad);\n    return Object.assign(Object.assign({}, shape), { rotation: shape.rotation + angleRad, x,\n        y });\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n    const center = getCenter(shape);\n    return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n    let snapped = newRotationRad;\n    for (let i = 0; i < snaps.length; i++) {\n        const angle = Global_1.Konva.getAngle(snaps[i]);\n        const absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n        const dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n        if (dif < tol) {\n            snapped = angle;\n        }\n    }\n    return snapped;\n}\nclass Transformer extends Group_1.Group {\n    constructor(config) {\n        super(config);\n        this._transforming = false;\n        this._createElements();\n        this._handleMouseMove = this._handleMouseMove.bind(this);\n        this._handleMouseUp = this._handleMouseUp.bind(this);\n        this.update = this.update.bind(this);\n        this.on(ATTR_CHANGE_LIST, this.update);\n        if (this.getNode()) {\n            this.update();\n        }\n    }\n    attachTo(node) {\n        this.setNode(node);\n        return this;\n    }\n    setNode(node) {\n        Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n        return this.setNodes([node]);\n    }\n    getNode() {\n        return this._nodes && this._nodes[0];\n    }\n    _getEventNamespace() {\n        return EVENTS_NAME + this._id;\n    }\n    setNodes(nodes = []) {\n        if (this._nodes && this._nodes.length) {\n            this.detach();\n        }\n        const filteredNodes = nodes.filter((node) => {\n            if (node.isAncestorOf(this)) {\n                Util_1.Util.error('Konva.Transformer cannot be an a child of the node you are trying to attach');\n                return false;\n            }\n            return true;\n        });\n        this._nodes = nodes = filteredNodes;\n        if (nodes.length === 1 && this.useSingleNodeRotation()) {\n            this.rotation(nodes[0].getAbsoluteRotation());\n        }\n        else {\n            this.rotation(0);\n        }\n        this._nodes.forEach((node) => {\n            const onChange = () => {\n                if (this.nodes().length === 1 && this.useSingleNodeRotation()) {\n                    this.rotation(this.nodes()[0].getAbsoluteRotation());\n                }\n                this._resetTransformCache();\n                if (!this._transforming && !this.isDragging()) {\n                    this.update();\n                }\n            };\n            const additionalEvents = node._attrsAffectingSize\n                .map((prop) => prop + 'Change.' + this._getEventNamespace())\n                .join(' ');\n            node.on(additionalEvents, onChange);\n            node.on(TRANSFORM_CHANGE_STR.map((e) => e + `.${this._getEventNamespace()}`).join(' '), onChange);\n            node.on(`absoluteTransformChange.${this._getEventNamespace()}`, onChange);\n            this._proxyDrag(node);\n        });\n        this._resetTransformCache();\n        var elementsCreated = !!this.findOne('.top-left');\n        if (elementsCreated) {\n            this.update();\n        }\n        return this;\n    }\n    _proxyDrag(node) {\n        let lastPos;\n        node.on(`dragstart.${this._getEventNamespace()}`, (e) => {\n            lastPos = node.getAbsolutePosition();\n            if (!this.isDragging() && node !== this.findOne('.back')) {\n                this.startDrag(e, false);\n            }\n        });\n        node.on(`dragmove.${this._getEventNamespace()}`, (e) => {\n            if (!lastPos) {\n                return;\n            }\n            const abs = node.getAbsolutePosition();\n            const dx = abs.x - lastPos.x;\n            const dy = abs.y - lastPos.y;\n            this.nodes().forEach((otherNode) => {\n                if (otherNode === node) {\n                    return;\n                }\n                if (otherNode.isDragging()) {\n                    return;\n                }\n                const otherAbs = otherNode.getAbsolutePosition();\n                otherNode.setAbsolutePosition({\n                    x: otherAbs.x + dx,\n                    y: otherAbs.y + dy,\n                });\n                otherNode.startDrag(e);\n            });\n            lastPos = null;\n        });\n    }\n    getNodes() {\n        return this._nodes || [];\n    }\n    getActiveAnchor() {\n        return this._movingAnchorName;\n    }\n    detach() {\n        if (this._nodes) {\n            this._nodes.forEach((node) => {\n                node.off('.' + this._getEventNamespace());\n            });\n        }\n        this._nodes = [];\n        this._resetTransformCache();\n    }\n    _resetTransformCache() {\n        this._clearCache(NODES_RECT);\n        this._clearCache('transform');\n        this._clearSelfAndDescendantCache('absoluteTransform');\n    }\n    _getNodeRect() {\n        return this._getCache(NODES_RECT, this.__getNodeRect);\n    }\n    __getNodeShape(node, rot = this.rotation(), relative) {\n        var rect = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke(),\n        });\n        var absScale = node.getAbsoluteScale(relative);\n        var absPos = node.getAbsolutePosition(relative);\n        var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n        var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n        const rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) %\n            (Math.PI * 2);\n        const box = {\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n            width: rect.width * absScale.x,\n            height: rect.height * absScale.y,\n            rotation: rotation,\n        };\n        return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\n            x: 0,\n            y: 0,\n        });\n    }\n    __getNodeRect() {\n        var node = this.getNode();\n        if (!node) {\n            return {\n                x: -MAX_SAFE_INTEGER,\n                y: -MAX_SAFE_INTEGER,\n                width: 0,\n                height: 0,\n                rotation: 0,\n            };\n        }\n        const totalPoints = [];\n        this.nodes().map((node) => {\n            const box = node.getClientRect({\n                skipTransform: true,\n                skipShadow: true,\n                skipStroke: this.ignoreStroke(),\n            });\n            var points = [\n                { x: box.x, y: box.y },\n                { x: box.x + box.width, y: box.y },\n                { x: box.x + box.width, y: box.y + box.height },\n                { x: box.x, y: box.y + box.height },\n            ];\n            var trans = node.getAbsoluteTransform();\n            points.forEach(function (point) {\n                var transformed = trans.point(point);\n                totalPoints.push(transformed);\n            });\n        });\n        const tr = new Util_1.Transform();\n        tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\n        var minX, minY, maxX, maxY;\n        totalPoints.forEach(function (point) {\n            var transformed = tr.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        tr.invert();\n        const p = tr.point({ x: minX, y: minY });\n        return {\n            x: p.x,\n            y: p.y,\n            width: maxX - minX,\n            height: maxY - minY,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        };\n    }\n    getX() {\n        return this._getNodeRect().x;\n    }\n    getY() {\n        return this._getNodeRect().y;\n    }\n    getWidth() {\n        return this._getNodeRect().width;\n    }\n    getHeight() {\n        return this._getNodeRect().height;\n    }\n    _createElements() {\n        this._createBack();\n        ANCHORS_NAMES.forEach(function (name) {\n            this._createAnchor(name);\n        }.bind(this));\n        this._createAnchor('rotater');\n    }\n    _createAnchor(name) {\n        var anchor = new Rect_1.Rect({\n            stroke: 'rgb(0, 161, 255)',\n            fill: 'white',\n            strokeWidth: 1,\n            name: name + ' _anchor',\n            dragDistance: 0,\n            draggable: true,\n            hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto',\n        });\n        var self = this;\n        anchor.on('mousedown touchstart', function (e) {\n            self._handleMouseDown(e);\n        });\n        anchor.on('dragstart', (e) => {\n            anchor.stopDrag();\n            e.cancelBubble = true;\n        });\n        anchor.on('dragend', (e) => {\n            e.cancelBubble = true;\n        });\n        anchor.on('mouseenter', () => {\n            var rad = Global_1.Konva.getAngle(this.rotation());\n            var cursor = getCursor(name, rad);\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = cursor);\n            this._cursorChange = true;\n        });\n        anchor.on('mouseout', () => {\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = '');\n            this._cursorChange = false;\n        });\n        this.add(anchor);\n    }\n    _createBack() {\n        var back = new Shape_1.Shape({\n            name: 'back',\n            width: 0,\n            height: 0,\n            draggable: true,\n            sceneFunc(ctx) {\n                var tr = this.getParent();\n                var padding = tr.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n                ctx.moveTo(this.width() / 2, -padding);\n                if (tr.rotateEnabled()) {\n                    ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(this.height()) - padding);\n                }\n                ctx.fillStrokeShape(this);\n            },\n            hitFunc: (ctx, shape) => {\n                if (!this.shouldOverdrawWholeArea()) {\n                    return;\n                }\n                var padding = this.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.fillStrokeShape(shape);\n            },\n        });\n        this.add(back);\n        this._proxyDrag(back);\n        back.on('dragstart', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on('dragmove', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on('dragend', (e) => {\n            e.cancelBubble = true;\n        });\n        this.on('dragmove', (e) => {\n            this.update();\n        });\n    }\n    _handleMouseDown(e) {\n        this._movingAnchorName = e.target.name().split(' ')[0];\n        var attrs = this._getNodeRect();\n        var width = attrs.width;\n        var height = attrs.height;\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.sin = Math.abs(height / hypotenuse);\n        this.cos = Math.abs(width / hypotenuse);\n        if (typeof window !== 'undefined') {\n            window.addEventListener('mousemove', this._handleMouseMove);\n            window.addEventListener('touchmove', this._handleMouseMove);\n            window.addEventListener('mouseup', this._handleMouseUp, true);\n            window.addEventListener('touchend', this._handleMouseUp, true);\n        }\n        this._transforming = true;\n        var ap = e.target.getAbsolutePosition();\n        var pos = e.target.getStage().getPointerPosition();\n        this._anchorDragOffset = {\n            x: pos.x - ap.x,\n            y: pos.y - ap.y,\n        };\n        this._fire('transformstart', { evt: e.evt, target: this.getNode() });\n        this._nodes.forEach((target) => {\n            target._fire('transformstart', { evt: e.evt, target });\n        });\n    }\n    _handleMouseMove(e) {\n        var x, y, newHypotenuse;\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\n        var stage = anchorNode.getStage();\n        stage.setPointersPositions(e);\n        const pp = stage.getPointerPosition();\n        let newNodePos = {\n            x: pp.x - this._anchorDragOffset.x,\n            y: pp.y - this._anchorDragOffset.y,\n        };\n        const oldAbs = anchorNode.getAbsolutePosition();\n        if (this.anchorDragBoundFunc()) {\n            newNodePos = this.anchorDragBoundFunc()(oldAbs, newNodePos, e);\n        }\n        anchorNode.setAbsolutePosition(newNodePos);\n        const newAbs = anchorNode.getAbsolutePosition();\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n            return;\n        }\n        if (this._movingAnchorName === 'rotater') {\n            var attrs = this._getNodeRect();\n            x = anchorNode.x() - attrs.width / 2;\n            y = -anchorNode.y() + attrs.height / 2;\n            let delta = Math.atan2(-y, x) + Math.PI / 2;\n            if (attrs.height < 0) {\n                delta -= Math.PI;\n            }\n            var oldRotation = Global_1.Konva.getAngle(this.rotation());\n            const newRotation = oldRotation + delta;\n            const tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\n            const snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n            const diff = snappedRot - attrs.rotation;\n            const shape = rotateAroundCenter(attrs, diff);\n            this._fitNodesInto(shape, e);\n            return;\n        }\n        var shiftBehavior = this.shiftBehavior();\n        var keepProportion;\n        if (shiftBehavior === 'inverted') {\n            keepProportion = this.keepRatio() && !e.shiftKey;\n        }\n        else if (shiftBehavior === 'none') {\n            keepProportion = this.keepRatio();\n        }\n        else {\n            keepProportion = this.keepRatio() || e.shiftKey;\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (this._movingAnchorName === 'top-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-right').x(),\n                        y: this.findOne('.bottom-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-left').x(comparePoint.x - x);\n                this.findOne('.top-left').y(comparePoint.y - y);\n            }\n        }\n        else if (this._movingAnchorName === 'top-center') {\n            this.findOne('.top-left').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'top-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-left').x(),\n                        y: this.findOne('.bottom-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-right').x(comparePoint.x + x);\n                this.findOne('.top-right').y(comparePoint.y - y);\n            }\n            var pos = anchorNode.position();\n            this.findOne('.top-left').y(pos.y);\n            this.findOne('.bottom-right').x(pos.x);\n        }\n        else if (this._movingAnchorName === 'middle-left') {\n            this.findOne('.top-left').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'middle-right') {\n            this.findOne('.bottom-right').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'bottom-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-right').x(),\n                        y: this.findOne('.top-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n                var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                anchorNode.x(comparePoint.x - x);\n                anchorNode.y(comparePoint.y + y);\n            }\n            pos = anchorNode.position();\n            this.findOne('.top-left').x(pos.x);\n            this.findOne('.bottom-right').y(pos.y);\n        }\n        else if (this._movingAnchorName === 'bottom-center') {\n            this.findOne('.bottom-right').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'bottom-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-left').x(),\n                        y: this.findOne('.top-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.bottom-right').x(comparePoint.x + x);\n                this.findOne('.bottom-right').y(comparePoint.y + y);\n            }\n        }\n        else {\n            console.error(new Error('Wrong position argument of selection resizer: ' +\n                this._movingAnchorName));\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (centeredScaling) {\n            var topLeft = this.findOne('.top-left');\n            var bottomRight = this.findOne('.bottom-right');\n            var topOffsetX = topLeft.x();\n            var topOffsetY = topLeft.y();\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\n            bottomRight.move({\n                x: -topOffsetX,\n                y: -topOffsetY,\n            });\n            topLeft.move({\n                x: bottomOffsetX,\n                y: bottomOffsetY,\n            });\n        }\n        var absPos = this.findOne('.top-left').getAbsolutePosition();\n        x = absPos.x;\n        y = absPos.y;\n        var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n        var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n        this._fitNodesInto({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        }, e);\n    }\n    _handleMouseUp(e) {\n        this._removeEvents(e);\n    }\n    getAbsoluteTransform() {\n        return this.getTransform();\n    }\n    _removeEvents(e) {\n        if (this._transforming) {\n            this._transforming = false;\n            if (typeof window !== 'undefined') {\n                window.removeEventListener('mousemove', this._handleMouseMove);\n                window.removeEventListener('touchmove', this._handleMouseMove);\n                window.removeEventListener('mouseup', this._handleMouseUp, true);\n                window.removeEventListener('touchend', this._handleMouseUp, true);\n            }\n            var node = this.getNode();\n            this._fire('transformend', { evt: e, target: node });\n            if (node) {\n                this._nodes.forEach((target) => {\n                    target._fire('transformend', { evt: e, target });\n                });\n            }\n            this._movingAnchorName = null;\n        }\n    }\n    _fitNodesInto(newAttrs, evt) {\n        var oldAttrs = this._getNodeRect();\n        const minSize = 1;\n        if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        const allowNegativeScale = this.flipEnabled();\n        var t = new Util_1.Transform();\n        t.rotate(Global_1.Konva.getAngle(this.rotation()));\n        if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('left') >= 0) {\n            const offset = t.point({\n                x: -this.padding() * 2,\n                y: 0,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            newAttrs.width += this.padding() * 2;\n            this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('right') >= 0) {\n            const offset = t.point({\n                x: this.padding() * 2,\n                y: 0,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.width += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('top') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: -this.padding() * 2,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('bottom') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: this.padding() * 2,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this.boundBoxFunc()) {\n            const bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n            if (bounded) {\n                newAttrs = bounded;\n            }\n            else {\n                Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n            }\n        }\n        const baseSize = 10000000;\n        const oldTr = new Util_1.Transform();\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\n        oldTr.rotate(oldAttrs.rotation);\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n        const newTr = new Util_1.Transform();\n        newTr.translate(newAttrs.x, newAttrs.y);\n        newTr.rotate(newAttrs.rotation);\n        newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n        const delta = newTr.multiply(oldTr.invert());\n        this._nodes.forEach((node) => {\n            var _a;\n            const parentTransform = node.getParent().getAbsoluteTransform();\n            const localTransform = node.getTransform().copy();\n            localTransform.translate(node.offsetX(), node.offsetY());\n            const newLocalTransform = new Util_1.Transform();\n            newLocalTransform\n                .multiply(parentTransform.copy().invert())\n                .multiply(delta)\n                .multiply(parentTransform)\n                .multiply(localTransform);\n            const attrs = newLocalTransform.decompose();\n            node.setAttrs(attrs);\n            this._fire('transform', { evt: evt, target: node });\n            node._fire('transform', { evt: evt, target: node });\n            (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n        });\n        this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\n        this._resetTransformCache();\n        this.update();\n        this.getLayer().batchDraw();\n    }\n    forceUpdate() {\n        this._resetTransformCache();\n        this.update();\n    }\n    _batchChangeChild(selector, attrs) {\n        const anchor = this.findOne(selector);\n        anchor.setAttrs(attrs);\n    }\n    update() {\n        var _a;\n        var attrs = this._getNodeRect();\n        this.rotation(Util_1.Util._getRotation(attrs.rotation));\n        var width = attrs.width;\n        var height = attrs.height;\n        var enabledAnchors = this.enabledAnchors();\n        var resizeEnabled = this.resizeEnabled();\n        var padding = this.padding();\n        var anchorSize = this.anchorSize();\n        const anchors = this.find('._anchor');\n        anchors.forEach((node) => {\n            node.setAttrs({\n                width: anchorSize,\n                height: anchorSize,\n                offsetX: anchorSize / 2,\n                offsetY: anchorSize / 2,\n                stroke: this.anchorStroke(),\n                strokeWidth: this.anchorStrokeWidth(),\n                fill: this.anchorFill(),\n                cornerRadius: this.anchorCornerRadius(),\n            });\n        });\n        this._batchChangeChild('.top-left', {\n            x: 0,\n            y: 0,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0,\n        });\n        this._batchChangeChild('.top-center', {\n            x: width / 2,\n            y: 0,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0,\n        });\n        this._batchChangeChild('.top-right', {\n            x: width,\n            y: 0,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0,\n        });\n        this._batchChangeChild('.middle-left', {\n            x: 0,\n            y: height / 2,\n            offsetX: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0,\n        });\n        this._batchChangeChild('.middle-right', {\n            x: width,\n            y: height / 2,\n            offsetX: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0,\n        });\n        this._batchChangeChild('.bottom-left', {\n            x: 0,\n            y: height,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0,\n        });\n        this._batchChangeChild('.bottom-center', {\n            x: width / 2,\n            y: height,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0,\n        });\n        this._batchChangeChild('.bottom-right', {\n            x: width,\n            y: height,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0,\n        });\n        this._batchChangeChild('.rotater', {\n            x: width / 2,\n            y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\n            visible: this.rotateEnabled(),\n        });\n        this._batchChangeChild('.back', {\n            width: width,\n            height: height,\n            visible: this.borderEnabled(),\n            stroke: this.borderStroke(),\n            strokeWidth: this.borderStrokeWidth(),\n            dash: this.borderDash(),\n            x: 0,\n            y: 0,\n        });\n        const styleFunc = this.anchorStyleFunc();\n        if (styleFunc) {\n            anchors.forEach((node) => {\n                styleFunc(node);\n            });\n        }\n        (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    }\n    isTransforming() {\n        return this._transforming;\n    }\n    stopTransform() {\n        if (this._transforming) {\n            this._removeEvents();\n            var anchorNode = this.findOne('.' + this._movingAnchorName);\n            if (anchorNode) {\n                anchorNode.stopDrag();\n            }\n        }\n    }\n    destroy() {\n        if (this.getStage() && this._cursorChange) {\n            this.getStage().content && (this.getStage().content.style.cursor = '');\n        }\n        Group_1.Group.prototype.destroy.call(this);\n        this.detach();\n        this._removeEvents();\n        return this;\n    }\n    toObject() {\n        return Node_1.Node.prototype.toObject.call(this);\n    }\n    clone(obj) {\n        var node = Node_1.Node.prototype.clone.call(this, obj);\n        return node;\n    }\n    getClientRect() {\n        if (this.nodes().length > 0) {\n            return super.getClientRect();\n        }\n        else {\n            return { x: 0, y: 0, width: 0, height: 0 };\n        }\n    }\n}\nexports.Transformer = Transformer;\nfunction validateAnchors(val) {\n    if (!(val instanceof Array)) {\n        Util_1.Util.warn('enabledAnchors value should be an array');\n    }\n    if (val instanceof Array) {\n        val.forEach(function (name) {\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\n                Util_1.Util.warn('Unknown anchor name: ' +\n                    name +\n                    '. Available names are: ' +\n                    ANCHORS_NAMES.join(', '));\n            }\n        });\n    }\n    return val || [];\n}\nTransformer.prototype.className = 'Transformer';\n(0, Global_2._registerNode)(Transformer);\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory_1.Factory.addGetterSetter(Transformer, 'flipEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'shiftBehavior', 'default');\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorDragBoundFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStyleFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'useSingleNodeRotation', true);\nFactory_1.Factory.backCompat(Transformer, {\n    lineEnabled: 'borderEnabled',\n    rotateHandlerOffset: 'rotateAnchorOffset',\n    enabledHandlers: 'enabledAnchors',\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}