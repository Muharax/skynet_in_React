{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Desktop\\\\WWW\\\\react\\\\skynet\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Component } from \"react\";\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loggedIn: false\n    };\n    this.handleLogin = () => {\n      // tu powinna być logika logowania, np. zapytanie do API\n      this.setState({\n        loggedIn: true\n      });\n    };\n    this.handleLogout = () => {\n      // tu powinna być logika wylogowywania, np. usunięcie tokena\n      this.setState({\n        loggedIn: false\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: this.state.loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: this.handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          children: this.state.loggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {\n            handleLogout: this.handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Login","Dashboard","BrowserRouter","Router","Route","Redirect","jsxDEV","_jsxDEV","App","constructor","args","state","loggedIn","handleLogin","setState","handleLogout","render","children","exact","path","to","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { Component } from \"react\";\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    loggedIn: false,\n  };\n\n  handleLogin = () => {\n    // tu powinna być logika logowania, np. zapytanie do API\n    this.setState({ loggedIn: true });\n  };\n\n  handleLogout = () => {\n    // tu powinna być logika wylogowywania, np. usunięcie tokena\n    this.setState({ loggedIn: false });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path=\"/\">\n            {this.state.loggedIn ? (\n              <Redirect to=\"/dashboard\" />\n            ) : (\n              <Login handleLogin={this.handleLogin} />\n            )}\n          </Route>\n          <Route path=\"/dashboard\">\n            {this.state.loggedIn ? (\n              <Dashboard handleLogout={this.handleLogout} />\n            ) : (\n              <Redirect to=\"/\" />\n            )}\n          </Route>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,GAAG,SAAST,SAAS,CAAC;EAAAU,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC1BC,KAAK,GAAG;MACNC,QAAQ,EAAE;IACZ,CAAC;IAAA,KAEDC,WAAW,GAAG,MAAM;MAClB;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEF,QAAQ,EAAE;MAAK,CAAC,CAAC;IACnC,CAAC;IAAA,KAEDG,YAAY,GAAG,MAAM;MACnB;MACA,IAAI,CAACD,QAAQ,CAAC;QAAEF,QAAQ,EAAE;MAAM,CAAC,CAAC;IACpC,CAAC;EAAA;EAEDI,MAAMA,CAAA,EAAG;IACP,oBACET,OAAA,CAACJ,MAAM;MAAAc,QAAA,eACLV,OAAA;QAAAU,QAAA,gBACEV,OAAA,CAACH,KAAK;UAACc,KAAK;UAACC,IAAI,EAAC,GAAG;UAAAF,QAAA,EAClB,IAAI,CAACN,KAAK,CAACC,QAAQ,gBAClBL,OAAA,CAACF,QAAQ;YAACe,EAAE,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAE5BjB,OAAA,CAACP,KAAK;YAACa,WAAW,EAAE,IAAI,CAACA;UAAY;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QACxC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACRjB,OAAA,CAACH,KAAK;UAACe,IAAI,EAAC,YAAY;UAAAF,QAAA,EACrB,IAAI,CAACN,KAAK,CAACC,QAAQ,gBAClBL,OAAA,CAACN,SAAS;YAACc,YAAY,EAAE,IAAI,CAACA;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAE9CjB,OAAA,CAACF,QAAQ;YAACe,EAAE,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QACnB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAEb;AACF;AAEA,eAAehB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}