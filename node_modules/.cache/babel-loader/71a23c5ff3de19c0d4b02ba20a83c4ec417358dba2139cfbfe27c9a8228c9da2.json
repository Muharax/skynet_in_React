{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Desktop\\\\WWW\\\\react\\\\skynet\\\\skynet\\\\src\\\\test\\\\test5-webgl.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  node\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handleToggle,\n      children: [node.name, isOpen && node.children && node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: node.children.map(childNode => /*#__PURE__*/_jsxDEV(TreeNode, {\n          node: childNode\n        }, childNode.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeNode, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = TreeNode;\nconst Tree = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: data.map(node => /*#__PURE__*/_jsxDEV(TreeNode, {\n    node: node\n  }, node.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this);\n_c2 = Tree;\nconst Webgl = () => {\n  const treeData = [{\n    id: 1,\n    name: 'Root 1',\n    children: [{\n      id: 2,\n      name: 'Child 1'\n    }, {\n      id: 3,\n      name: 'Child 2',\n      children: [{\n        id: 4,\n        name: 'Grandchild'\n      }]\n    }]\n  }, {\n    id: 5,\n    name: 'Root 2'\n  }];\n  return /*#__PURE__*/_jsxDEV(Tree, {\n    data: treeData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n};\n_c3 = Webgl;\nexport default Webgl;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"Tree\");\n$RefreshReg$(_c3, \"Webgl\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeNode","node","_s","isOpen","setIsOpen","handleToggle","children","onClick","name","length","map","childNode","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","Tree","data","_c2","Webgl","treeData","_c3","$RefreshReg$"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/src/test/test5-webgl.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst TreeNode = ({ node }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  }\n\n  return (\n    <ul>\n      <li onClick={handleToggle}>\n        {node.name}\n        {isOpen && node.children && node.children.length > 0 && (\n          <ul>\n            {node.children.map(childNode => (\n              <TreeNode key={childNode.id} node={childNode} />\n            ))}\n          </ul>\n        )}\n      </li>\n    </ul>\n  );\n};\n\nconst Tree = ({ data }) => (\n  <div>\n    {data.map(node => (\n      <TreeNode key={node.id} node={node} />\n    ))}\n  </div>\n);\n\nconst Webgl = () => {\n  const treeData = [\n    {\n      id: 1,\n      name: 'Root 1',\n      children: [\n        {\n          id: 2,\n          name: 'Child 1',\n        },\n        {\n          id: 3,\n          name: 'Child 2',\n          children: [\n            {\n              id: 4,\n              name: 'Grandchild',\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 5,\n      name: 'Root 2',\n    },\n  ];\n\n  return <Tree data={treeData} />;\n};\n\nexport default Webgl;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEJ,OAAA;IAAAO,QAAA,eACEP,OAAA;MAAIQ,OAAO,EAAEF,YAAa;MAAAC,QAAA,GACvBL,IAAI,CAACO,IAAI,EACTL,MAAM,IAAIF,IAAI,CAACK,QAAQ,IAAIL,IAAI,CAACK,QAAQ,CAACG,MAAM,GAAG,CAAC,iBAClDV,OAAA;QAAAO,QAAA,EACGL,IAAI,CAACK,QAAQ,CAACI,GAAG,CAACC,SAAS,iBAC1BZ,OAAA,CAACC,QAAQ;UAAoBC,IAAI,EAAEU;QAAU,GAA9BA,SAAS,CAACC,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CAChD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAET,CAAC;AAACd,EAAA,CArBIF,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AAuBd,MAAMkB,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,kBACpBpB,OAAA;EAAAO,QAAA,EACGa,IAAI,CAACT,GAAG,CAACT,IAAI,iBACZF,OAAA,CAACC,QAAQ;IAAeC,IAAI,EAAEA;EAAK,GAApBA,IAAI,CAACW,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAe,CACtC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACN;AAACI,GAAA,GANIF,IAAI;AAQV,MAAMG,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAMC,QAAQ,GAAG,CACf;IACEV,EAAE,EAAE,CAAC;IACLJ,IAAI,EAAE,QAAQ;IACdF,QAAQ,EAAE,CACR;MACEM,EAAE,EAAE,CAAC;MACLJ,IAAI,EAAE;IACR,CAAC,EACD;MACEI,EAAE,EAAE,CAAC;MACLJ,IAAI,EAAE,SAAS;MACfF,QAAQ,EAAE,CACR;QACEM,EAAE,EAAE,CAAC;QACLJ,IAAI,EAAE;MACR,CAAC;IAEL,CAAC;EAEL,CAAC,EACD;IACEI,EAAE,EAAE,CAAC;IACLJ,IAAI,EAAE;EACR,CAAC,CACF;EAED,oBAAOT,OAAA,CAACmB,IAAI;IAACC,IAAI,EAAEG;EAAS;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjC,CAAC;AAACO,GAAA,GA7BIF,KAAK;AA+BX,eAAeA,KAAK;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}