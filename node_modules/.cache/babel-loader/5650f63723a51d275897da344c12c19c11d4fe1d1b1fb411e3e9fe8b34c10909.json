{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RegularPolygon = void 0;\nvar Factory_1 = require(\"../Factory\");\nvar Shape_1 = require(\"../Shape\");\nvar Validators_1 = require(\"../Validators\");\nvar Global_1 = require(\"../Global\");\nvar RegularPolygon = /*#__PURE__*/function (_Shape_1$Shape) {\n  _inherits(RegularPolygon, _Shape_1$Shape);\n  var _super = _createSuper(RegularPolygon);\n  function RegularPolygon() {\n    _classCallCheck(this, RegularPolygon);\n    return _super.apply(this, arguments);\n  }\n  _createClass(RegularPolygon, [{\n    key: \"_sceneFunc\",\n    value: function _sceneFunc(context) {\n      var points = this._getPoints();\n      context.beginPath();\n      context.moveTo(points[0].x, points[0].y);\n      for (var n = 1; n < points.length; n++) {\n        context.lineTo(points[n].x, points[n].y);\n      }\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n  }, {\n    key: \"_getPoints\",\n    value: function _getPoints() {\n      var sides = this.attrs.sides;\n      var radius = this.attrs.radius || 0;\n      var points = [];\n      for (var n = 0; n < sides; n++) {\n        points.push({\n          x: radius * Math.sin(n * 2 * Math.PI / sides),\n          y: -1 * radius * Math.cos(n * 2 * Math.PI / sides)\n        });\n      }\n      return points;\n    }\n  }, {\n    key: \"getSelfRect\",\n    value: function getSelfRect() {\n      var points = this._getPoints();\n      var minX = points[0].x;\n      var maxX = points[0].y;\n      var minY = points[0].x;\n      var maxY = points[0].y;\n      points.forEach(function (point) {\n        minX = Math.min(minX, point.x);\n        maxX = Math.max(maxX, point.x);\n        minY = Math.min(minY, point.y);\n        maxY = Math.max(maxY, point.y);\n      });\n      return {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.radius() * 2;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.radius() * 2;\n    }\n  }, {\n    key: \"setWidth\",\n    value: function setWidth(width) {\n      this.radius(width / 2);\n    }\n  }, {\n    key: \"setHeight\",\n    value: function setHeight(height) {\n      this.radius(height / 2);\n    }\n  }]);\n  return RegularPolygon;\n}(Shape_1.Shape);\nexports.RegularPolygon = RegularPolygon;\nRegularPolygon.prototype.className = 'RegularPolygon';\nRegularPolygon.prototype._centroid = true;\nRegularPolygon.prototype._attrsAffectingSize = ['radius'];\n(0, Global_1._registerNode)(RegularPolygon);\nFactory_1.Factory.addGetterSetter(RegularPolygon, 'radius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(RegularPolygon, 'sides', 0, (0, Validators_1.getNumberValidator)());","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","_inherits","_createSuper","Object","defineProperty","exports","value","RegularPolygon","Factory_1","Shape_1","Validators_1","Global_1","_Shape_1$Shape","_super","apply","arguments","key","_sceneFunc","context","points","_getPoints","beginPath","moveTo","x","y","n","length","lineTo","closePath","fillStrokeShape","sides","attrs","radius","push","Math","sin","PI","cos","getSelfRect","minX","maxX","minY","maxY","forEach","point","min","max","width","height","getWidth","getHeight","setWidth","setHeight","Shape","prototype","className","_centroid","_attrsAffectingSize","_registerNode","Factory","addGetterSetter","getNumberValidator"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/konva/lib/shapes/RegularPolygon.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegularPolygon = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nclass RegularPolygon extends Shape_1.Shape {\n    _sceneFunc(context) {\n        const points = this._getPoints();\n        context.beginPath();\n        context.moveTo(points[0].x, points[0].y);\n        for (var n = 1; n < points.length; n++) {\n            context.lineTo(points[n].x, points[n].y);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    _getPoints() {\n        const sides = this.attrs.sides;\n        const radius = this.attrs.radius || 0;\n        const points = [];\n        for (var n = 0; n < sides; n++) {\n            points.push({\n                x: radius * Math.sin((n * 2 * Math.PI) / sides),\n                y: -1 * radius * Math.cos((n * 2 * Math.PI) / sides),\n            });\n        }\n        return points;\n    }\n    getSelfRect() {\n        const points = this._getPoints();\n        var minX = points[0].x;\n        var maxX = points[0].y;\n        var minY = points[0].x;\n        var maxY = points[0].y;\n        points.forEach((point) => {\n            minX = Math.min(minX, point.x);\n            maxX = Math.max(maxX, point.x);\n            minY = Math.min(minY, point.y);\n            maxY = Math.max(maxY, point.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\nexports.RegularPolygon = RegularPolygon;\nRegularPolygon.prototype.className = 'RegularPolygon';\nRegularPolygon.prototype._centroid = true;\nRegularPolygon.prototype._attrsAffectingSize = ['radius'];\n(0, Global_1._registerNode)(RegularPolygon);\nFactory_1.Factory.addGetterSetter(RegularPolygon, 'radius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(RegularPolygon, 'sides', 0, (0, Validators_1.getNumberValidator)());\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}