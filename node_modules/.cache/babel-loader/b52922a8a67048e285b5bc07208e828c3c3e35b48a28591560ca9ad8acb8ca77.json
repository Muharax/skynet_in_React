{"ast":null,"code":"\"use strict\";\n\nvar _inherits = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _classCallCheck = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HitContext = exports.SceneContext = exports.Context = void 0;\nvar Util_1 = require(\"./Util\");\nvar Global_1 = require(\"./Global\");\nfunction simplifyArray(arr) {\n  var retArr = [],\n    len = arr.length,\n    util = Util_1.Util,\n    n,\n    val;\n  for (n = 0; n < len; n++) {\n    val = arr[n];\n    if (util._isNumber(val)) {\n      val = Math.round(val * 1000) / 1000;\n    } else if (!util._isString(val)) {\n      val = val + '';\n    }\n    retArr.push(val);\n  }\n  return retArr;\n}\nvar COMMA = ',',\n  OPEN_PAREN = '(',\n  CLOSE_PAREN = ')',\n  OPEN_PAREN_BRACKET = '([',\n  CLOSE_BRACKET_PAREN = '])',\n  SEMICOLON = ';',\n  DOUBLE_PAREN = '()',\n  EQUALS = '=',\n  CONTEXT_METHODS = ['arc', 'arcTo', 'beginPath', 'bezierCurveTo', 'clearRect', 'clip', 'closePath', 'createLinearGradient', 'createPattern', 'createRadialGradient', 'drawImage', 'ellipse', 'fill', 'fillText', 'getImageData', 'createImageData', 'lineTo', 'moveTo', 'putImageData', 'quadraticCurveTo', 'rect', 'restore', 'rotate', 'save', 'scale', 'setLineDash', 'setTransform', 'stroke', 'strokeText', 'transform', 'translate'];\nvar CONTEXT_PROPERTIES = ['fillStyle', 'strokeStyle', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'lineCap', 'lineDashOffset', 'lineJoin', 'lineWidth', 'miterLimit', 'font', 'textAlign', 'textBaseline', 'globalAlpha', 'globalCompositeOperation', 'imageSmoothingEnabled'];\nvar traceArrMax = 100;\nvar Context = /*#__PURE__*/function () {\n  function Context(canvas) {\n    _classCallCheck(this, Context);\n    this.canvas = canvas;\n    if (Global_1.Konva.enableTrace) {\n      this.traceArr = [];\n      this._enableTrace();\n    }\n  }\n  _createClass(Context, [{\n    key: \"fillShape\",\n    value: function fillShape(shape) {\n      if (shape.fillEnabled()) {\n        this._fill(shape);\n      }\n    }\n  }, {\n    key: \"_fill\",\n    value: function _fill(shape) {}\n  }, {\n    key: \"strokeShape\",\n    value: function strokeShape(shape) {\n      if (shape.hasStroke()) {\n        this._stroke(shape);\n      }\n    }\n  }, {\n    key: \"_stroke\",\n    value: function _stroke(shape) {}\n  }, {\n    key: \"fillStrokeShape\",\n    value: function fillStrokeShape(shape) {\n      if (shape.attrs.fillAfterStrokeEnabled) {\n        this.strokeShape(shape);\n        this.fillShape(shape);\n      } else {\n        this.fillShape(shape);\n        this.strokeShape(shape);\n      }\n    }\n  }, {\n    key: \"getTrace\",\n    value: function getTrace(relaxed, rounded) {\n      var traceArr = this.traceArr,\n        len = traceArr.length,\n        str = '',\n        n,\n        trace,\n        method,\n        args;\n      for (n = 0; n < len; n++) {\n        trace = traceArr[n];\n        method = trace.method;\n        if (method) {\n          args = trace.args;\n          str += method;\n          if (relaxed) {\n            str += DOUBLE_PAREN;\n          } else {\n            if (Util_1.Util._isArray(args[0])) {\n              str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n            } else {\n              if (rounded) {\n                args = args.map(function (a) {\n                  return typeof a === 'number' ? Math.floor(a) : a;\n                });\n              }\n              str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n            }\n          }\n        } else {\n          str += trace.property;\n          if (!relaxed) {\n            str += EQUALS + trace.val;\n          }\n        }\n        str += SEMICOLON;\n      }\n      return str;\n    }\n  }, {\n    key: \"clearTrace\",\n    value: function clearTrace() {\n      this.traceArr = [];\n    }\n  }, {\n    key: \"_trace\",\n    value: function _trace(str) {\n      var traceArr = this.traceArr,\n        len;\n      traceArr.push(str);\n      len = traceArr.length;\n      if (len >= traceArrMax) {\n        traceArr.shift();\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var pixelRatio = this.getCanvas().getPixelRatio();\n      this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n  }, {\n    key: \"getCanvas\",\n    value: function getCanvas() {\n      return this.canvas;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(bounds) {\n      var canvas = this.getCanvas();\n      if (bounds) {\n        this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n      } else {\n        this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n      }\n    }\n  }, {\n    key: \"_applyLineCap\",\n    value: function _applyLineCap(shape) {\n      var lineCap = shape.attrs.lineCap;\n      if (lineCap) {\n        this.setAttr('lineCap', lineCap);\n      }\n    }\n  }, {\n    key: \"_applyOpacity\",\n    value: function _applyOpacity(shape) {\n      var absOpacity = shape.getAbsoluteOpacity();\n      if (absOpacity !== 1) {\n        this.setAttr('globalAlpha', absOpacity);\n      }\n    }\n  }, {\n    key: \"_applyLineJoin\",\n    value: function _applyLineJoin(shape) {\n      var lineJoin = shape.attrs.lineJoin;\n      if (lineJoin) {\n        this.setAttr('lineJoin', lineJoin);\n      }\n    }\n  }, {\n    key: \"setAttr\",\n    value: function setAttr(attr, val) {\n      this._context[attr] = val;\n    }\n  }, {\n    key: \"arc\",\n    value: function arc(a0, a1, a2, a3, a4, a5) {\n      this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"arcTo\",\n    value: function arcTo(a0, a1, a2, a3, a4) {\n      this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n  }, {\n    key: \"beginPath\",\n    value: function beginPath() {\n      this._context.beginPath();\n    }\n  }, {\n    key: \"bezierCurveTo\",\n    value: function bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n      this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"clearRect\",\n    value: function clearRect(a0, a1, a2, a3) {\n      this._context.clearRect(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"clip\",\n    value: function clip() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._context.clip.apply(this._context, args);\n    }\n  }, {\n    key: \"closePath\",\n    value: function closePath() {\n      this._context.closePath();\n    }\n  }, {\n    key: \"createImageData\",\n    value: function createImageData(a0, a1) {\n      var a = arguments;\n      if (a.length === 2) {\n        return this._context.createImageData(a0, a1);\n      } else if (a.length === 1) {\n        return this._context.createImageData(a0);\n      }\n    }\n  }, {\n    key: \"createLinearGradient\",\n    value: function createLinearGradient(a0, a1, a2, a3) {\n      return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"createPattern\",\n    value: function createPattern(a0, a1) {\n      return this._context.createPattern(a0, a1);\n    }\n  }, {\n    key: \"createRadialGradient\",\n    value: function createRadialGradient(a0, a1, a2, a3, a4, a5) {\n      return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"drawImage\",\n    value: function drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var a = arguments,\n        _context = this._context;\n      if (a.length === 3) {\n        _context.drawImage(a0, a1, a2);\n      } else if (a.length === 5) {\n        _context.drawImage(a0, a1, a2, a3, a4);\n      } else if (a.length === 9) {\n        _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      }\n    }\n  }, {\n    key: \"ellipse\",\n    value: function ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n      this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n  }, {\n    key: \"isPointInPath\",\n    value: function isPointInPath(x, y, path, fillRule) {\n      if (path) {\n        return this._context.isPointInPath(path, x, y, fillRule);\n      }\n      return this._context.isPointInPath(x, y, fillRule);\n    }\n  }, {\n    key: \"fill\",\n    value: function fill() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._context.fill.apply(this._context, args);\n    }\n  }, {\n    key: \"fillRect\",\n    value: function fillRect(x, y, width, height) {\n      this._context.fillRect(x, y, width, height);\n    }\n  }, {\n    key: \"strokeRect\",\n    value: function strokeRect(x, y, width, height) {\n      this._context.strokeRect(x, y, width, height);\n    }\n  }, {\n    key: \"fillText\",\n    value: function fillText(text, x, y, maxWidth) {\n      if (maxWidth) {\n        this._context.fillText(text, x, y, maxWidth);\n      } else {\n        this._context.fillText(text, x, y);\n      }\n    }\n  }, {\n    key: \"measureText\",\n    value: function measureText(text) {\n      return this._context.measureText(text);\n    }\n  }, {\n    key: \"getImageData\",\n    value: function getImageData(a0, a1, a2, a3) {\n      return this._context.getImageData(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"lineTo\",\n    value: function lineTo(a0, a1) {\n      this._context.lineTo(a0, a1);\n    }\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(a0, a1) {\n      this._context.moveTo(a0, a1);\n    }\n  }, {\n    key: \"rect\",\n    value: function rect(a0, a1, a2, a3) {\n      this._context.rect(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"putImageData\",\n    value: function putImageData(a0, a1, a2) {\n      this._context.putImageData(a0, a1, a2);\n    }\n  }, {\n    key: \"quadraticCurveTo\",\n    value: function quadraticCurveTo(a0, a1, a2, a3) {\n      this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"restore\",\n    value: function restore() {\n      this._context.restore();\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(a0) {\n      this._context.rotate(a0);\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      this._context.save();\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(a0, a1) {\n      this._context.scale(a0, a1);\n    }\n  }, {\n    key: \"setLineDash\",\n    value: function setLineDash(a0) {\n      if (this._context.setLineDash) {\n        this._context.setLineDash(a0);\n      } else if ('mozDash' in this._context) {\n        this._context['mozDash'] = a0;\n      } else if ('webkitLineDash' in this._context) {\n        this._context['webkitLineDash'] = a0;\n      }\n    }\n  }, {\n    key: \"getLineDash\",\n    value: function getLineDash() {\n      return this._context.getLineDash();\n    }\n  }, {\n    key: \"setTransform\",\n    value: function setTransform(a0, a1, a2, a3, a4, a5) {\n      this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"stroke\",\n    value: function stroke(path2d) {\n      if (path2d) {\n        this._context.stroke(path2d);\n      } else {\n        this._context.stroke();\n      }\n    }\n  }, {\n    key: \"strokeText\",\n    value: function strokeText(a0, a1, a2, a3) {\n      this._context.strokeText(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(a0, a1, a2, a3, a4, a5) {\n      this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(a0, a1) {\n      this._context.translate(a0, a1);\n    }\n  }, {\n    key: \"_enableTrace\",\n    value: function _enableTrace() {\n      var that = this,\n        len = CONTEXT_METHODS.length,\n        origSetter = this.setAttr,\n        n,\n        args;\n      var func = function func(methodName) {\n        var origMethod = that[methodName],\n          ret;\n        that[methodName] = function () {\n          args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n          ret = origMethod.apply(that, arguments);\n          that._trace({\n            method: methodName,\n            args: args\n          });\n          return ret;\n        };\n      };\n      for (n = 0; n < len; n++) {\n        func(CONTEXT_METHODS[n]);\n      }\n      that.setAttr = function () {\n        origSetter.apply(that, arguments);\n        var prop = arguments[0];\n        var val = arguments[1];\n        if (prop === 'shadowOffsetX' || prop === 'shadowOffsetY' || prop === 'shadowBlur') {\n          val = val / this.canvas.getPixelRatio();\n        }\n        that._trace({\n          property: prop,\n          val: val\n        });\n      };\n    }\n  }, {\n    key: \"_applyGlobalCompositeOperation\",\n    value: function _applyGlobalCompositeOperation(node) {\n      var op = node.attrs.globalCompositeOperation;\n      var def = !op || op === 'source-over';\n      if (!def) {\n        this.setAttr('globalCompositeOperation', op);\n      }\n    }\n  }]);\n  return Context;\n}();\nexports.Context = Context;\nCONTEXT_PROPERTIES.forEach(function (prop) {\n  Object.defineProperty(Context.prototype, prop, {\n    get: function get() {\n      return this._context[prop];\n    },\n    set: function set(val) {\n      this._context[prop] = val;\n    }\n  });\n});\nvar SceneContext = /*#__PURE__*/function (_Context) {\n  _inherits(SceneContext, _Context);\n  var _super = _createSuper(SceneContext);\n  function SceneContext(canvas) {\n    var _this;\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$willReadFrequent = _ref.willReadFrequently,\n      willReadFrequently = _ref$willReadFrequent === void 0 ? false : _ref$willReadFrequent;\n    _classCallCheck(this, SceneContext);\n    _this = _super.call(this, canvas);\n    _this._context = canvas._canvas.getContext('2d', {\n      willReadFrequently: willReadFrequently\n    });\n    return _this;\n  }\n  _createClass(SceneContext, [{\n    key: \"_fillColor\",\n    value: function _fillColor(shape) {\n      var fill = shape.fill();\n      this.setAttr('fillStyle', fill);\n      shape._fillFunc(this);\n    }\n  }, {\n    key: \"_fillPattern\",\n    value: function _fillPattern(shape) {\n      this.setAttr('fillStyle', shape._getFillPattern());\n      shape._fillFunc(this);\n    }\n  }, {\n    key: \"_fillLinearGradient\",\n    value: function _fillLinearGradient(shape) {\n      var grd = shape._getLinearGradient();\n      if (grd) {\n        this.setAttr('fillStyle', grd);\n        shape._fillFunc(this);\n      }\n    }\n  }, {\n    key: \"_fillRadialGradient\",\n    value: function _fillRadialGradient(shape) {\n      var grd = shape._getRadialGradient();\n      if (grd) {\n        this.setAttr('fillStyle', grd);\n        shape._fillFunc(this);\n      }\n    }\n  }, {\n    key: \"_fill\",\n    value: function _fill(shape) {\n      var hasColor = shape.fill(),\n        fillPriority = shape.getFillPriority();\n      if (hasColor && fillPriority === 'color') {\n        this._fillColor(shape);\n        return;\n      }\n      var hasPattern = shape.getFillPatternImage();\n      if (hasPattern && fillPriority === 'pattern') {\n        this._fillPattern(shape);\n        return;\n      }\n      var hasLinearGradient = shape.getFillLinearGradientColorStops();\n      if (hasLinearGradient && fillPriority === 'linear-gradient') {\n        this._fillLinearGradient(shape);\n        return;\n      }\n      var hasRadialGradient = shape.getFillRadialGradientColorStops();\n      if (hasRadialGradient && fillPriority === 'radial-gradient') {\n        this._fillRadialGradient(shape);\n        return;\n      }\n      if (hasColor) {\n        this._fillColor(shape);\n      } else if (hasPattern) {\n        this._fillPattern(shape);\n      } else if (hasLinearGradient) {\n        this._fillLinearGradient(shape);\n      } else if (hasRadialGradient) {\n        this._fillRadialGradient(shape);\n      }\n    }\n  }, {\n    key: \"_strokeLinearGradient\",\n    value: function _strokeLinearGradient(shape) {\n      var start = shape.getStrokeLinearGradientStartPoint(),\n        end = shape.getStrokeLinearGradientEndPoint(),\n        colorStops = shape.getStrokeLinearGradientColorStops(),\n        grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n      if (colorStops) {\n        for (var n = 0; n < colorStops.length; n += 2) {\n          grd.addColorStop(colorStops[n], colorStops[n + 1]);\n        }\n        this.setAttr('strokeStyle', grd);\n      }\n    }\n  }, {\n    key: \"_stroke\",\n    value: function _stroke(shape) {\n      var dash = shape.dash(),\n        strokeScaleEnabled = shape.getStrokeScaleEnabled();\n      if (shape.hasStroke()) {\n        if (!strokeScaleEnabled) {\n          this.save();\n          var pixelRatio = this.getCanvas().getPixelRatio();\n          this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        }\n        this._applyLineCap(shape);\n        if (dash && shape.dashEnabled()) {\n          this.setLineDash(dash);\n          this.setAttr('lineDashOffset', shape.dashOffset());\n        }\n        this.setAttr('lineWidth', shape.strokeWidth());\n        if (!shape.getShadowForStrokeEnabled()) {\n          this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n        }\n        var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n        if (hasLinearGradient) {\n          this._strokeLinearGradient(shape);\n        } else {\n          this.setAttr('strokeStyle', shape.stroke());\n        }\n        shape._strokeFunc(this);\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    }\n  }, {\n    key: \"_applyShadow\",\n    value: function _applyShadow(shape) {\n      var _a, _b, _c;\n      var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black',\n        blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5,\n        offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n          x: 0,\n          y: 0\n        },\n        scale = shape.getAbsoluteScale(),\n        ratio = this.canvas.getPixelRatio(),\n        scaleX = scale.x * ratio,\n        scaleY = scale.y * ratio;\n      this.setAttr('shadowColor', color);\n      this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n      this.setAttr('shadowOffsetX', offset.x * scaleX);\n      this.setAttr('shadowOffsetY', offset.y * scaleY);\n    }\n  }]);\n  return SceneContext;\n}(Context);\nexports.SceneContext = SceneContext;\nvar HitContext = /*#__PURE__*/function (_Context2) {\n  _inherits(HitContext, _Context2);\n  var _super2 = _createSuper(HitContext);\n  function HitContext(canvas) {\n    var _this2;\n    _classCallCheck(this, HitContext);\n    _this2 = _super2.call(this, canvas);\n    _this2._context = canvas._canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    return _this2;\n  }\n  _createClass(HitContext, [{\n    key: \"_fill\",\n    value: function _fill(shape) {\n      this.save();\n      this.setAttr('fillStyle', shape.colorKey);\n      shape._fillFuncHit(this);\n      this.restore();\n    }\n  }, {\n    key: \"strokeShape\",\n    value: function strokeShape(shape) {\n      if (shape.hasHitStroke()) {\n        this._stroke(shape);\n      }\n    }\n  }, {\n    key: \"_stroke\",\n    value: function _stroke(shape) {\n      if (shape.hasHitStroke()) {\n        var strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (!strokeScaleEnabled) {\n          this.save();\n          var pixelRatio = this.getCanvas().getPixelRatio();\n          this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        }\n        this._applyLineCap(shape);\n        var hitStrokeWidth = shape.hitStrokeWidth();\n        var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n        this.setAttr('lineWidth', strokeWidth);\n        this.setAttr('strokeStyle', shape.colorKey);\n        shape._strokeFuncHit(this);\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    }\n  }]);\n  return HitContext;\n}(Context);\nexports.HitContext = HitContext;","map":{"version":3,"names":["_inherits","require","default","_createSuper","_classCallCheck","_createClass","Object","defineProperty","exports","value","HitContext","SceneContext","Context","Util_1","Global_1","simplifyArray","arr","retArr","len","length","util","Util","n","val","_isNumber","Math","round","_isString","push","COMMA","OPEN_PAREN","CLOSE_PAREN","OPEN_PAREN_BRACKET","CLOSE_BRACKET_PAREN","SEMICOLON","DOUBLE_PAREN","EQUALS","CONTEXT_METHODS","CONTEXT_PROPERTIES","traceArrMax","canvas","Konva","enableTrace","traceArr","_enableTrace","key","fillShape","shape","fillEnabled","_fill","strokeShape","hasStroke","_stroke","fillStrokeShape","attrs","fillAfterStrokeEnabled","getTrace","relaxed","rounded","str","trace","method","args","_isArray","join","map","a","floor","property","clearTrace","_trace","shift","reset","pixelRatio","getCanvas","getPixelRatio","setTransform","clear","bounds","clearRect","x","y","width","height","getWidth","getHeight","_applyLineCap","lineCap","setAttr","_applyOpacity","absOpacity","getAbsoluteOpacity","_applyLineJoin","lineJoin","attr","_context","arc","a0","a1","a2","a3","a4","a5","arcTo","beginPath","bezierCurveTo","clip","_len","arguments","Array","_key","apply","closePath","createImageData","createLinearGradient","createPattern","createRadialGradient","drawImage","a6","a7","a8","ellipse","isPointInPath","path","fillRule","fill","_len2","_key2","fillRect","strokeRect","fillText","text","maxWidth","measureText","getImageData","lineTo","moveTo","rect","putImageData","quadraticCurveTo","restore","rotate","save","scale","setLineDash","getLineDash","stroke","path2d","strokeText","transform","translate","that","origSetter","func","methodName","origMethod","ret","prototype","slice","call","prop","_applyGlobalCompositeOperation","node","op","globalCompositeOperation","def","forEach","get","set","_Context","_super","_this","_ref","undefined","_ref$willReadFrequent","willReadFrequently","_canvas","getContext","_fillColor","_fillFunc","_fillPattern","_getFillPattern","_fillLinearGradient","grd","_getLinearGradient","_fillRadialGradient","_getRadialGradient","hasColor","fillPriority","getFillPriority","hasPattern","getFillPatternImage","hasLinearGradient","getFillLinearGradientColorStops","hasRadialGradient","getFillRadialGradientColorStops","_strokeLinearGradient","start","getStrokeLinearGradientStartPoint","end","getStrokeLinearGradientEndPoint","colorStops","getStrokeLinearGradientColorStops","addColorStop","dash","strokeScaleEnabled","getStrokeScaleEnabled","dashEnabled","dashOffset","strokeWidth","getShadowForStrokeEnabled","_strokeFunc","_applyShadow","_a","_b","_c","color","getShadowRGBA","blur","getShadowBlur","offset","getShadowOffset","getAbsoluteScale","ratio","scaleX","scaleY","min","abs","_Context2","_super2","_this2","colorKey","_fillFuncHit","hasHitStroke","hitStrokeWidth","_strokeFuncHit"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/konva/lib/Context.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HitContext = exports.SceneContext = exports.Context = void 0;\nconst Util_1 = require(\"./Util\");\nconst Global_1 = require(\"./Global\");\nfunction simplifyArray(arr) {\n    var retArr = [], len = arr.length, util = Util_1.Util, n, val;\n    for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n            val = Math.round(val * 1000) / 1000;\n        }\n        else if (!util._isString(val)) {\n            val = val + '';\n        }\n        retArr.push(val);\n    }\n    return retArr;\n}\nvar COMMA = ',', OPEN_PAREN = '(', CLOSE_PAREN = ')', OPEN_PAREN_BRACKET = '([', CLOSE_BRACKET_PAREN = '])', SEMICOLON = ';', DOUBLE_PAREN = '()', EQUALS = '=', CONTEXT_METHODS = [\n    'arc',\n    'arcTo',\n    'beginPath',\n    'bezierCurveTo',\n    'clearRect',\n    'clip',\n    'closePath',\n    'createLinearGradient',\n    'createPattern',\n    'createRadialGradient',\n    'drawImage',\n    'ellipse',\n    'fill',\n    'fillText',\n    'getImageData',\n    'createImageData',\n    'lineTo',\n    'moveTo',\n    'putImageData',\n    'quadraticCurveTo',\n    'rect',\n    'restore',\n    'rotate',\n    'save',\n    'scale',\n    'setLineDash',\n    'setTransform',\n    'stroke',\n    'strokeText',\n    'transform',\n    'translate',\n];\nvar CONTEXT_PROPERTIES = [\n    'fillStyle',\n    'strokeStyle',\n    'shadowColor',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'font',\n    'textAlign',\n    'textBaseline',\n    'globalAlpha',\n    'globalCompositeOperation',\n    'imageSmoothingEnabled',\n];\nconst traceArrMax = 100;\nclass Context {\n    constructor(canvas) {\n        this.canvas = canvas;\n        if (Global_1.Konva.enableTrace) {\n            this.traceArr = [];\n            this._enableTrace();\n        }\n    }\n    fillShape(shape) {\n        if (shape.fillEnabled()) {\n            this._fill(shape);\n        }\n    }\n    _fill(shape) {\n    }\n    strokeShape(shape) {\n        if (shape.hasStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n    }\n    fillStrokeShape(shape) {\n        if (shape.attrs.fillAfterStrokeEnabled) {\n            this.strokeShape(shape);\n            this.fillShape(shape);\n        }\n        else {\n            this.fillShape(shape);\n            this.strokeShape(shape);\n        }\n    }\n    getTrace(relaxed, rounded) {\n        var traceArr = this.traceArr, len = traceArr.length, str = '', n, trace, method, args;\n        for (n = 0; n < len; n++) {\n            trace = traceArr[n];\n            method = trace.method;\n            if (method) {\n                args = trace.args;\n                str += method;\n                if (relaxed) {\n                    str += DOUBLE_PAREN;\n                }\n                else {\n                    if (Util_1.Util._isArray(args[0])) {\n                        str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n                    }\n                    else {\n                        if (rounded) {\n                            args = args.map((a) => typeof a === 'number' ? Math.floor(a) : a);\n                        }\n                        str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n                    }\n                }\n            }\n            else {\n                str += trace.property;\n                if (!relaxed) {\n                    str += EQUALS + trace.val;\n                }\n            }\n            str += SEMICOLON;\n        }\n        return str;\n    }\n    clearTrace() {\n        this.traceArr = [];\n    }\n    _trace(str) {\n        var traceArr = this.traceArr, len;\n        traceArr.push(str);\n        len = traceArr.length;\n        if (len >= traceArrMax) {\n            traceArr.shift();\n        }\n    }\n    reset() {\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    clear(bounds) {\n        var canvas = this.getCanvas();\n        if (bounds) {\n            this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n        }\n        else {\n            this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n        }\n    }\n    _applyLineCap(shape) {\n        const lineCap = shape.attrs.lineCap;\n        if (lineCap) {\n            this.setAttr('lineCap', lineCap);\n        }\n    }\n    _applyOpacity(shape) {\n        var absOpacity = shape.getAbsoluteOpacity();\n        if (absOpacity !== 1) {\n            this.setAttr('globalAlpha', absOpacity);\n        }\n    }\n    _applyLineJoin(shape) {\n        const lineJoin = shape.attrs.lineJoin;\n        if (lineJoin) {\n            this.setAttr('lineJoin', lineJoin);\n        }\n    }\n    setAttr(attr, val) {\n        this._context[attr] = val;\n    }\n    arc(a0, a1, a2, a3, a4, a5) {\n        this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n    arcTo(a0, a1, a2, a3, a4) {\n        this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n    beginPath() {\n        this._context.beginPath();\n    }\n    bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n        this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n    clearRect(a0, a1, a2, a3) {\n        this._context.clearRect(a0, a1, a2, a3);\n    }\n    clip(...args) {\n        this._context.clip.apply(this._context, args);\n    }\n    closePath() {\n        this._context.closePath();\n    }\n    createImageData(a0, a1) {\n        var a = arguments;\n        if (a.length === 2) {\n            return this._context.createImageData(a0, a1);\n        }\n        else if (a.length === 1) {\n            return this._context.createImageData(a0);\n        }\n    }\n    createLinearGradient(a0, a1, a2, a3) {\n        return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n    createPattern(a0, a1) {\n        return this._context.createPattern(a0, a1);\n    }\n    createRadialGradient(a0, a1, a2, a3, a4, a5) {\n        return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n    drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        var a = arguments, _context = this._context;\n        if (a.length === 3) {\n            _context.drawImage(a0, a1, a2);\n        }\n        else if (a.length === 5) {\n            _context.drawImage(a0, a1, a2, a3, a4);\n        }\n        else if (a.length === 9) {\n            _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n        }\n    }\n    ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n        this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n    isPointInPath(x, y, path, fillRule) {\n        if (path) {\n            return this._context.isPointInPath(path, x, y, fillRule);\n        }\n        return this._context.isPointInPath(x, y, fillRule);\n    }\n    fill(...args) {\n        this._context.fill.apply(this._context, args);\n    }\n    fillRect(x, y, width, height) {\n        this._context.fillRect(x, y, width, height);\n    }\n    strokeRect(x, y, width, height) {\n        this._context.strokeRect(x, y, width, height);\n    }\n    fillText(text, x, y, maxWidth) {\n        if (maxWidth) {\n            this._context.fillText(text, x, y, maxWidth);\n        }\n        else {\n            this._context.fillText(text, x, y);\n        }\n    }\n    measureText(text) {\n        return this._context.measureText(text);\n    }\n    getImageData(a0, a1, a2, a3) {\n        return this._context.getImageData(a0, a1, a2, a3);\n    }\n    lineTo(a0, a1) {\n        this._context.lineTo(a0, a1);\n    }\n    moveTo(a0, a1) {\n        this._context.moveTo(a0, a1);\n    }\n    rect(a0, a1, a2, a3) {\n        this._context.rect(a0, a1, a2, a3);\n    }\n    putImageData(a0, a1, a2) {\n        this._context.putImageData(a0, a1, a2);\n    }\n    quadraticCurveTo(a0, a1, a2, a3) {\n        this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n    restore() {\n        this._context.restore();\n    }\n    rotate(a0) {\n        this._context.rotate(a0);\n    }\n    save() {\n        this._context.save();\n    }\n    scale(a0, a1) {\n        this._context.scale(a0, a1);\n    }\n    setLineDash(a0) {\n        if (this._context.setLineDash) {\n            this._context.setLineDash(a0);\n        }\n        else if ('mozDash' in this._context) {\n            this._context['mozDash'] = a0;\n        }\n        else if ('webkitLineDash' in this._context) {\n            this._context['webkitLineDash'] = a0;\n        }\n    }\n    getLineDash() {\n        return this._context.getLineDash();\n    }\n    setTransform(a0, a1, a2, a3, a4, a5) {\n        this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n    stroke(path2d) {\n        if (path2d) {\n            this._context.stroke(path2d);\n        }\n        else {\n            this._context.stroke();\n        }\n    }\n    strokeText(a0, a1, a2, a3) {\n        this._context.strokeText(a0, a1, a2, a3);\n    }\n    transform(a0, a1, a2, a3, a4, a5) {\n        this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n    translate(a0, a1) {\n        this._context.translate(a0, a1);\n    }\n    _enableTrace() {\n        var that = this, len = CONTEXT_METHODS.length, origSetter = this.setAttr, n, args;\n        var func = function (methodName) {\n            var origMethod = that[methodName], ret;\n            that[methodName] = function () {\n                args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n                ret = origMethod.apply(that, arguments);\n                that._trace({\n                    method: methodName,\n                    args: args,\n                });\n                return ret;\n            };\n        };\n        for (n = 0; n < len; n++) {\n            func(CONTEXT_METHODS[n]);\n        }\n        that.setAttr = function () {\n            origSetter.apply(that, arguments);\n            var prop = arguments[0];\n            var val = arguments[1];\n            if (prop === 'shadowOffsetX' ||\n                prop === 'shadowOffsetY' ||\n                prop === 'shadowBlur') {\n                val = val / this.canvas.getPixelRatio();\n            }\n            that._trace({\n                property: prop,\n                val: val,\n            });\n        };\n    }\n    _applyGlobalCompositeOperation(node) {\n        const op = node.attrs.globalCompositeOperation;\n        var def = !op || op === 'source-over';\n        if (!def) {\n            this.setAttr('globalCompositeOperation', op);\n        }\n    }\n}\nexports.Context = Context;\nCONTEXT_PROPERTIES.forEach(function (prop) {\n    Object.defineProperty(Context.prototype, prop, {\n        get() {\n            return this._context[prop];\n        },\n        set(val) {\n            this._context[prop] = val;\n        },\n    });\n});\nclass SceneContext extends Context {\n    constructor(canvas, { willReadFrequently = false } = {}) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d', {\n            willReadFrequently,\n        });\n    }\n    _fillColor(shape) {\n        var fill = shape.fill();\n        this.setAttr('fillStyle', fill);\n        shape._fillFunc(this);\n    }\n    _fillPattern(shape) {\n        this.setAttr('fillStyle', shape._getFillPattern());\n        shape._fillFunc(this);\n    }\n    _fillLinearGradient(shape) {\n        var grd = shape._getLinearGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fillRadialGradient(shape) {\n        const grd = shape._getRadialGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fill(shape) {\n        const hasColor = shape.fill(), fillPriority = shape.getFillPriority();\n        if (hasColor && fillPriority === 'color') {\n            this._fillColor(shape);\n            return;\n        }\n        const hasPattern = shape.getFillPatternImage();\n        if (hasPattern && fillPriority === 'pattern') {\n            this._fillPattern(shape);\n            return;\n        }\n        const hasLinearGradient = shape.getFillLinearGradientColorStops();\n        if (hasLinearGradient && fillPriority === 'linear-gradient') {\n            this._fillLinearGradient(shape);\n            return;\n        }\n        const hasRadialGradient = shape.getFillRadialGradientColorStops();\n        if (hasRadialGradient && fillPriority === 'radial-gradient') {\n            this._fillRadialGradient(shape);\n            return;\n        }\n        if (hasColor) {\n            this._fillColor(shape);\n        }\n        else if (hasPattern) {\n            this._fillPattern(shape);\n        }\n        else if (hasLinearGradient) {\n            this._fillLinearGradient(shape);\n        }\n        else if (hasRadialGradient) {\n            this._fillRadialGradient(shape);\n        }\n    }\n    _strokeLinearGradient(shape) {\n        const start = shape.getStrokeLinearGradientStartPoint(), end = shape.getStrokeLinearGradientEndPoint(), colorStops = shape.getStrokeLinearGradientColorStops(), grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n        if (colorStops) {\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            this.setAttr('strokeStyle', grd);\n        }\n    }\n    _stroke(shape) {\n        var dash = shape.dash(), strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (shape.hasStroke()) {\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            if (dash && shape.dashEnabled()) {\n                this.setLineDash(dash);\n                this.setAttr('lineDashOffset', shape.dashOffset());\n            }\n            this.setAttr('lineWidth', shape.strokeWidth());\n            if (!shape.getShadowForStrokeEnabled()) {\n                this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n            }\n            var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n            if (hasLinearGradient) {\n                this._strokeLinearGradient(shape);\n            }\n            else {\n                this.setAttr('strokeStyle', shape.stroke());\n            }\n            shape._strokeFunc(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n    _applyShadow(shape) {\n        var _a, _b, _c;\n        var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black', blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5, offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n            x: 0,\n            y: 0,\n        }, scale = shape.getAbsoluteScale(), ratio = this.canvas.getPixelRatio(), scaleX = scale.x * ratio, scaleY = scale.y * ratio;\n        this.setAttr('shadowColor', color);\n        this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n        this.setAttr('shadowOffsetX', offset.x * scaleX);\n        this.setAttr('shadowOffsetY', offset.y * scaleY);\n    }\n}\nexports.SceneContext = SceneContext;\nclass HitContext extends Context {\n    constructor(canvas) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d', {\n            willReadFrequently: true,\n        });\n    }\n    _fill(shape) {\n        this.save();\n        this.setAttr('fillStyle', shape.colorKey);\n        shape._fillFuncHit(this);\n        this.restore();\n    }\n    strokeShape(shape) {\n        if (shape.hasHitStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n        if (shape.hasHitStroke()) {\n            const strokeScaleEnabled = shape.getStrokeScaleEnabled();\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            var hitStrokeWidth = shape.hitStrokeWidth();\n            var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n            this.setAttr('lineWidth', strokeWidth);\n            this.setAttr('strokeStyle', shape.colorKey);\n            shape._strokeFuncHit(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n}\nexports.HitContext = HitContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}