{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Desktop\\\\WWW\\\\react\\\\skynet\\\\skynet\\\\src\\\\test\\\\siatka-izometryczna.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 20;\nconst TILE_WIDTH = 24; // szerokość kafelka\nconst TILE_HEIGHT = TILE_WIDTH / 2; // wysokość kafelka\n\nfunction Tile({\n  gridX,\n  gridY\n}) {\n  _s();\n  const [isHovered, setIsHovered] = useState(false);\n  const isoX = (gridX - gridY) * TILE_WIDTH / 2;\n  const isoY = (gridX + gridY) * TILE_HEIGHT / 2;\n  const points = [isoX, isoY, isoX + TILE_WIDTH / 2, isoY + TILE_HEIGHT / 2, isoX, isoY + TILE_HEIGHT, isoX - TILE_WIDTH / 2, isoY + TILE_HEIGHT / 2];\n  return /*#__PURE__*/_jsxDEV(Line, {\n    points: points,\n    fill: isHovered ? '#f00' : (gridX + gridY) % 2 === 0 ? '#ccc' : '#999',\n    closed: true,\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Tile, \"FPQn8a98tPjpohC7NUYORQR8GJE=\");\n_c = Tile;\nfunction CanvasComponent() {\n  const tiles = [];\n  for (let i = 0; i < GRID_SIZE; i++) {\n    for (let j = 0; j < GRID_SIZE; j++) {\n      tiles.push( /*#__PURE__*/_jsxDEV(Tile, {\n        gridX: i,\n        gridY: j\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: GRID_SIZE * TILE_WIDTH,\n    height: GRID_SIZE * TILE_HEIGHT,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: tiles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c2 = CanvasComponent;\nexport default CanvasComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"Tile\");\n$RefreshReg$(_c2, \"CanvasComponent\");","map":{"version":3,"names":["React","useState","Stage","Layer","Line","jsxDEV","_jsxDEV","GRID_SIZE","TILE_WIDTH","TILE_HEIGHT","Tile","gridX","gridY","_s","isHovered","setIsHovered","isoX","isoY","points","fill","closed","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","_c","CanvasComponent","tiles","i","j","push","width","height","children","_c2","$RefreshReg$"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/src/test/siatka-izometryczna.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\n\nconst GRID_SIZE = 20;\nconst TILE_WIDTH = 24;  // szerokość kafelka\nconst TILE_HEIGHT = TILE_WIDTH / 2;  // wysokość kafelka\n\nfunction Tile({ gridX, gridY }) {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const isoX = (gridX - gridY) * TILE_WIDTH / 2;\n  const isoY = (gridX + gridY) * TILE_HEIGHT / 2;\n\n  const points = [\n    isoX, isoY,\n    isoX + TILE_WIDTH / 2, isoY + TILE_HEIGHT / 2,\n    isoX, isoY + TILE_HEIGHT,\n    isoX - TILE_WIDTH / 2, isoY + TILE_HEIGHT / 2,\n  ];\n\n  return (\n    <Line\n      points={points}\n      fill={isHovered ? '#f00' : ((gridX + gridY) % 2 === 0 ? '#ccc' : '#999')}\n      closed\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    />\n  );\n}\n\nfunction CanvasComponent() {\n  const tiles = [];\n  for (let i = 0; i < GRID_SIZE; i++) {\n    for (let j = 0; j < GRID_SIZE; j++) {\n      tiles.push(<Tile gridX={i} gridY={j} key={`${i}-${j}`} />);\n    }\n  }\n\n  return (\n    <Stage width={GRID_SIZE * TILE_WIDTH} height={GRID_SIZE * TILE_HEIGHT}>\n      <Layer>\n        {tiles}\n      </Layer>\n    </Stage>\n  );\n}\n\nexport default CanvasComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAE;AACxB,MAAMC,WAAW,GAAGD,UAAU,GAAG,CAAC,CAAC,CAAE;;AAErC,SAASE,IAAIA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMe,IAAI,GAAG,CAACL,KAAK,GAAGC,KAAK,IAAIJ,UAAU,GAAG,CAAC;EAC7C,MAAMS,IAAI,GAAG,CAACN,KAAK,GAAGC,KAAK,IAAIH,WAAW,GAAG,CAAC;EAE9C,MAAMS,MAAM,GAAG,CACbF,IAAI,EAAEC,IAAI,EACVD,IAAI,GAAGR,UAAU,GAAG,CAAC,EAAES,IAAI,GAAGR,WAAW,GAAG,CAAC,EAC7CO,IAAI,EAAEC,IAAI,GAAGR,WAAW,EACxBO,IAAI,GAAGR,UAAU,GAAG,CAAC,EAAES,IAAI,GAAGR,WAAW,GAAG,CAAC,CAC9C;EAED,oBACEH,OAAA,CAACF,IAAI;IACHc,MAAM,EAAEA,MAAO;IACfC,IAAI,EAAEL,SAAS,GAAG,MAAM,GAAI,CAACH,KAAK,GAAGC,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG,MAAQ;IACzEQ,MAAM;IACNC,YAAY,EAAEA,CAAA,KAAMN,YAAY,CAAC,IAAI,CAAE;IACvCO,YAAY,EAAEA,CAAA,KAAMP,YAAY,CAAC,KAAK;EAAE;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEN;AAACb,EAAA,CAtBQH,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAwBb,SAASkB,eAAeA,CAAA,EAAG;EACzB,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,SAAS,EAAEuB,CAAC,EAAE,EAAE;IAClC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,SAAS,EAAEwB,CAAC,EAAE,EAAE;MAClCF,KAAK,CAACG,IAAI,eAAC1B,OAAA,CAACI,IAAI;QAACC,KAAK,EAAEmB,CAAE;QAAClB,KAAK,EAAEmB;MAAE,GAAO,GAAED,CAAE,IAAGC,CAAE,EAAC;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAC;IAC5D;EACF;EAEA,oBACEpB,OAAA,CAACJ,KAAK;IAAC+B,KAAK,EAAE1B,SAAS,GAAGC,UAAW;IAAC0B,MAAM,EAAE3B,SAAS,GAAGE,WAAY;IAAA0B,QAAA,eACpE7B,OAAA,CAACH,KAAK;MAAAgC,QAAA,EACHN;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACU,GAAA,GAfQR,eAAe;AAiBxB,eAAeA,eAAe;AAAC,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}