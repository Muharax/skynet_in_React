{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Desktop\\\\WWW\\\\react\\\\skynet\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Component } from \"react\";\nimport Login from \"./login.js\";\nimport Dashboard from \"./dashboard.js\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loggedIn: false\n    };\n    this.handleLogin = () => {\n      // tu powinna być logika logowania, np. zapytanie do API\n      this.setState({\n        loggedIn: true\n      });\n    };\n    this.handleLogout = () => {\n      // tu powinna być logika wylogowywania, np. usunięcie tokena\n      this.setState({\n        loggedIn: false\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Login","Dashboard","BrowserRouter","Router","Route","jsxDEV","_jsxDEV","App","constructor","args","state","loggedIn","handleLogin","setState","handleLogout","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { Component } from \"react\";\nimport Login from \"./login.js\";\nimport Dashboard from \"./dashboard.js\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    loggedIn: false,\n  };\n\n  handleLogin = () => {\n    // tu powinna być logika logowania, np. zapytanie do API\n    this.setState({ loggedIn: true });\n  };\n\n  handleLogout = () => {\n    // tu powinna być logika wylogowywania, np. usunięcie tokena\n    this.setState({ loggedIn: false });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div>\n       \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,SAAS,MAAM,gBAAgB;AACtC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,GAAG,SAASR,SAAS,CAAC;EAAAS,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC1BC,KAAK,GAAG;MACNC,QAAQ,EAAE;IACZ,CAAC;IAAA,KAEDC,WAAW,GAAG,MAAM;MAClB;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEF,QAAQ,EAAE;MAAK,CAAC,CAAC;IACnC,CAAC;IAAA,KAEDG,YAAY,GAAG,MAAM;MACnB;MACA,IAAI,CAACD,QAAQ,CAAC;QAAEF,QAAQ,EAAE;MAAM,CAAC,CAAC;IACpC,CAAC;EAAA;EAEDI,MAAMA,CAAA,EAAG;IACP,oBACET,OAAA,CAACH,MAAM;MAAAa,QAAA,eACLV,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAEb;AACF;AAEA,eAAeb,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}