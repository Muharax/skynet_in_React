{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Desktop\\\\WWW\\\\react\\\\skynet\\\\skynet\\\\src\\\\test\\\\siatka-izometryczna.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Stage, Layer, Rect } from 'react-konva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 30;\nconst TILE_SIZE = 30;\nfunction Tile({\n  x,\n  y\n}) {\n  _s();\n  const [isHovered, setIsHovered] = useState(false);\n  const posX = (x - y) * TILE_SIZE;\n  const posY = (x + y) * TILE_SIZE / 2;\n  return /*#__PURE__*/_jsxDEV(Rect, {\n    x: posX,\n    y: posY,\n    width: TILE_SIZE,\n    height: TILE_SIZE,\n    fill: isHovered ? '#f00' : (x + y) % 2 === 0 ? '#ccc' : '#999',\n    rotation: 45,\n    offsetX: TILE_SIZE / 2,\n    offsetY: TILE_SIZE / 2,\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Tile, \"FPQn8a98tPjpohC7NUYORQR8GJE=\");\n_c = Tile;\nfunction CanvasComponent() {\n  const tiles = [];\n  for (let i = 0; i < GRID_SIZE; i++) {\n    for (let j = 0; j < GRID_SIZE; j++) {\n      tiles.push( /*#__PURE__*/_jsxDEV(Tile, {\n        x: i,\n        y: j\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: GRID_SIZE * TILE_SIZE * 2,\n    height: GRID_SIZE * TILE_SIZE * 2,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: tiles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c2 = CanvasComponent;\nexport default CanvasComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"Tile\");\n$RefreshReg$(_c2, \"CanvasComponent\");","map":{"version":3,"names":["React","useState","Stage","Layer","Rect","jsxDEV","_jsxDEV","GRID_SIZE","TILE_SIZE","Tile","x","y","_s","isHovered","setIsHovered","posX","posY","width","height","fill","rotation","offsetX","offsetY","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","_c","CanvasComponent","tiles","i","j","push","children","_c2","$RefreshReg$"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/src/test/siatka-izometryczna.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Stage, Layer, Rect } from 'react-konva';\n\nconst GRID_SIZE = 30;\nconst TILE_SIZE = 30;\n\nfunction Tile({ x, y }) {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const posX = (x - y) * TILE_SIZE;\n  const posY = (x + y) * TILE_SIZE / 2;\n\n  return (\n    <Rect\n      x={posX}\n      y={posY}\n      width={TILE_SIZE}\n      height={TILE_SIZE}\n      fill={isHovered ? '#f00' : ((x + y) % 2 === 0 ? '#ccc' : '#999')}\n      rotation={45}\n      offsetX={TILE_SIZE / 2}\n      offsetY={TILE_SIZE / 2}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    />\n  );\n}\n\nfunction CanvasComponent() {\n  const tiles = [];\n  for (let i = 0; i < GRID_SIZE; i++) {\n    for (let j = 0; j < GRID_SIZE; j++) {\n      tiles.push(<Tile x={i} y={j} key={`${i}-${j}`} />);\n    }\n  }\n\n  return (\n    <Stage width={GRID_SIZE * TILE_SIZE * 2} height={GRID_SIZE * TILE_SIZE * 2}>\n      <Layer>\n        {tiles}\n      </Layer>\n    </Stage>\n  );\n}\n\nexport default CanvasComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,SAAS,GAAG,EAAE;AAEpB,SAASC,IAAIA,CAAC;EAAEC,CAAC;EAAEC;AAAE,CAAC,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMc,IAAI,GAAG,CAACL,CAAC,GAAGC,CAAC,IAAIH,SAAS;EAChC,MAAMQ,IAAI,GAAG,CAACN,CAAC,GAAGC,CAAC,IAAIH,SAAS,GAAG,CAAC;EAEpC,oBACEF,OAAA,CAACF,IAAI;IACHM,CAAC,EAAEK,IAAK;IACRJ,CAAC,EAAEK,IAAK;IACRC,KAAK,EAAET,SAAU;IACjBU,MAAM,EAAEV,SAAU;IAClBW,IAAI,EAAEN,SAAS,GAAG,MAAM,GAAI,CAACH,CAAC,GAAGC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG,MAAQ;IACjES,QAAQ,EAAE,EAAG;IACbC,OAAO,EAAEb,SAAS,GAAG,CAAE;IACvBc,OAAO,EAAEd,SAAS,GAAG,CAAE;IACvBe,YAAY,EAAEA,CAAA,KAAMT,YAAY,CAAC,IAAI,CAAE;IACvCU,YAAY,EAAEA,CAAA,KAAMV,YAAY,CAAC,KAAK;EAAE;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEN;AAAChB,EAAA,CApBQH,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAsBb,SAASqB,eAAeA,CAAA,EAAG;EACzB,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzB,SAAS,EAAEyB,CAAC,EAAE,EAAE;IAClC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1B,SAAS,EAAE0B,CAAC,EAAE,EAAE;MAClCF,KAAK,CAACG,IAAI,eAAC5B,OAAA,CAACG,IAAI;QAACC,CAAC,EAAEsB,CAAE;QAACrB,CAAC,EAAEsB;MAAE,GAAO,GAAED,CAAE,IAAGC,CAAE,EAAC;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAC;IACpD;EACF;EAEA,oBACEtB,OAAA,CAACJ,KAAK;IAACe,KAAK,EAAEV,SAAS,GAAGC,SAAS,GAAG,CAAE;IAACU,MAAM,EAAEX,SAAS,GAAGC,SAAS,GAAG,CAAE;IAAA2B,QAAA,eACzE7B,OAAA,CAACH,KAAK;MAAAgC,QAAA,EACHJ;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACQ,GAAA,GAfQN,eAAe;AAiBxB,eAAeA,eAAe;AAAC,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}