{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Desktop\\\\WWW\\\\react\\\\skynet\\\\skynet\\\\src\\\\siatka\\\\losowanie.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Losowanie2() {\n  _s();\n  const [numbers, setNumbers] = useState(new Set());\n  const [isRunning, setIsRunning] = useState(false); // Nowy stan do obsługi stanu generowania\n  let intervalId; // Zmienna do przechowywania identyfikatora interwału\n\n  const generateRandomNumber = () => {\n    // Wygeneruj losową liczbę od 1 do 5\n    const randomNumber = Math.floor(Math.random() * 5) + 1;\n    if (numbers.has(randomNumber)) {\n      // Jeśli liczba już istnieje, wywołaj funkcję ponownie\n      generateRandomNumber();\n      return;\n    }\n    let newNumbers = new Set(numbers);\n    if (numbers.size === 3) {\n      // Usuń pierwszy element tablicy i dodaj nową liczbę na końcu\n      const firstNumber = Array.from(newNumbers)[0];\n      newNumbers.delete(firstNumber);\n    }\n    newNumbers.add(randomNumber);\n    setNumbers(newNumbers);\n  };\n  const handleButtonClick = () => {\n    setIsRunning(!isRunning);\n    if (!isRunning) {\n      // Jeśli generowanie nie jest uruchomione, rozpocznij generowanie\n      intervalId = setInterval(generateRandomNumber, 1000); // Generuj liczbę co sekundę\n    } else {\n      // Jeśli generowanie jest uruchomione, zatrzymaj generowanie\n      clearInterval(intervalId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: isRunning ? 'STOP' : 'START'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), Array.from(numbers).map((number, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: number\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Losowanie2, \"oKKji3lt6lE3G8RfMecqwjF2crQ=\");\n_c = Losowanie2;\nexport default Losowanie2;\nvar _c;\n$RefreshReg$(_c, \"Losowanie2\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Losowanie2","_s","numbers","setNumbers","Set","isRunning","setIsRunning","intervalId","generateRandomNumber","randomNumber","Math","floor","random","has","newNumbers","size","firstNumber","Array","from","delete","add","handleButtonClick","setInterval","clearInterval","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","number","index","_c","$RefreshReg$"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/src/siatka/losowanie.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Losowanie2() {\r\n  const [numbers, setNumbers] = useState(new Set());\r\n  const [isRunning, setIsRunning] = useState(false); // Nowy stan do obsługi stanu generowania\r\n  let intervalId; // Zmienna do przechowywania identyfikatora interwału\r\n\r\n  const generateRandomNumber = () => {\r\n    // Wygeneruj losową liczbę od 1 do 5\r\n    const randomNumber = Math.floor(Math.random() * 5) + 1;\r\n    if (numbers.has(randomNumber)) {\r\n      // Jeśli liczba już istnieje, wywołaj funkcję ponownie\r\n      generateRandomNumber();\r\n      return;\r\n    }\r\n    \r\n    let newNumbers = new Set(numbers);\r\n    if (numbers.size === 3) {\r\n      // Usuń pierwszy element tablicy i dodaj nową liczbę na końcu\r\n      const firstNumber = Array.from(newNumbers)[0];\r\n      newNumbers.delete(firstNumber);\r\n    }\r\n    newNumbers.add(randomNumber);\r\n    setNumbers(newNumbers);\r\n  }\r\n\r\n  const handleButtonClick = () => {\r\n    setIsRunning(!isRunning);\r\n    if (!isRunning) {\r\n      // Jeśli generowanie nie jest uruchomione, rozpocznij generowanie\r\n      intervalId = setInterval(generateRandomNumber, 1000); // Generuj liczbę co sekundę\r\n    } else {\r\n      // Jeśli generowanie jest uruchomione, zatrzymaj generowanie\r\n      clearInterval(intervalId);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleButtonClick}>{isRunning ? 'STOP' : 'START'}</button>\r\n      {Array.from(numbers).map((number, index) => (\r\n        <div key={index}>{number}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Losowanie2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAIO,GAAG,CAAC,CAAC,CAAC;EACjD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,IAAIU,UAAU,CAAC,CAAC;;EAEhB,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC;IACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACtD,IAAIV,OAAO,CAACW,GAAG,CAACJ,YAAY,CAAC,EAAE;MAC7B;MACAD,oBAAoB,CAAC,CAAC;MACtB;IACF;IAEA,IAAIM,UAAU,GAAG,IAAIV,GAAG,CAACF,OAAO,CAAC;IACjC,IAAIA,OAAO,CAACa,IAAI,KAAK,CAAC,EAAE;MACtB;MACA,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAACJ,UAAU,CAAC,CAAC,CAAC,CAAC;MAC7CA,UAAU,CAACK,MAAM,CAACH,WAAW,CAAC;IAChC;IACAF,UAAU,CAACM,GAAG,CAACX,YAAY,CAAC;IAC5BN,UAAU,CAACW,UAAU,CAAC;EACxB,CAAC;EAED,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9Bf,YAAY,CAAC,CAACD,SAAS,CAAC;IACxB,IAAI,CAACA,SAAS,EAAE;MACd;MACAE,UAAU,GAAGe,WAAW,CAACd,oBAAoB,EAAE,IAAI,CAAC,CAAC,CAAC;IACxD,CAAC,MAAM;MACL;MACAe,aAAa,CAAChB,UAAU,CAAC;IAC3B;EACF,CAAC;EAED,oBACER,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAQ0B,OAAO,EAAEJ,iBAAkB;MAAAG,QAAA,EAAEnB,SAAS,GAAG,MAAM,GAAG;IAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EAC1EZ,KAAK,CAACC,IAAI,CAAChB,OAAO,CAAC,CAAC4B,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACrCjC,OAAA;MAAAyB,QAAA,EAAkBO;IAAM,GAAdC,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC5B,EAAA,CA3CQD,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AA6CnB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}