{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Shape = exports.shapes = void 0;\nvar Global_1 = require(\"./Global\");\nvar Util_1 = require(\"./Util\");\nvar Factory_1 = require(\"./Factory\");\nvar Node_1 = require(\"./Node\");\nvar Validators_1 = require(\"./Validators\");\nvar Global_2 = require(\"./Global\");\nvar PointerEvents = require(\"./PointerEvents\");\nvar HAS_SHADOW = 'hasShadow';\nvar SHADOW_RGBA = 'shadowRGBA';\nvar patternImage = 'patternImage';\nvar linearGradient = 'linearGradient';\nvar radialGradient = 'radialGradient';\nvar dummyContext;\nfunction getDummyContext() {\n  if (dummyContext) {\n    return dummyContext;\n  }\n  dummyContext = Util_1.Util.createCanvasElement().getContext('2d');\n  return dummyContext;\n}\nexports.shapes = {};\nfunction _fillFunc(context) {\n  var fillRule = this.attrs.fillRule;\n  if (fillRule) {\n    context.fill(fillRule);\n  } else {\n    context.fill();\n  }\n}\nfunction _strokeFunc(context) {\n  context.stroke();\n}\nfunction _fillFuncHit(context) {\n  context.fill();\n}\nfunction _strokeFuncHit(context) {\n  context.stroke();\n}\nfunction _clearHasShadowCache() {\n  this._clearCache(HAS_SHADOW);\n}\nfunction _clearGetShadowRGBACache() {\n  this._clearCache(SHADOW_RGBA);\n}\nfunction _clearFillPatternCache() {\n  this._clearCache(patternImage);\n}\nfunction _clearLinearGradientCache() {\n  this._clearCache(linearGradient);\n}\nfunction _clearRadialGradientCache() {\n  this._clearCache(radialGradient);\n}\nvar Shape = /*#__PURE__*/function (_Node_1$Node) {\n  _inherits(Shape, _Node_1$Node);\n  var _super = _createSuper(Shape);\n  function Shape(config) {\n    var _this;\n    _classCallCheck(this, Shape);\n    _this = _super.call(this, config);\n    var key;\n    while (true) {\n      key = Util_1.Util.getRandomColor();\n      if (key && !(key in exports.shapes)) {\n        break;\n      }\n    }\n    _this.colorKey = key;\n    exports.shapes[key] = _assertThisInitialized(_this);\n    return _this;\n  }\n  _createClass(Shape, [{\n    key: \"getContext\",\n    value: function getContext() {\n      Util_1.Util.warn('shape.getContext() method is deprecated. Please do not use it.');\n      return this.getLayer().getContext();\n    }\n  }, {\n    key: \"getCanvas\",\n    value: function getCanvas() {\n      Util_1.Util.warn('shape.getCanvas() method is deprecated. Please do not use it.');\n      return this.getLayer().getCanvas();\n    }\n  }, {\n    key: \"getSceneFunc\",\n    value: function getSceneFunc() {\n      return this.attrs.sceneFunc || this['_sceneFunc'];\n    }\n  }, {\n    key: \"getHitFunc\",\n    value: function getHitFunc() {\n      return this.attrs.hitFunc || this['_hitFunc'];\n    }\n  }, {\n    key: \"hasShadow\",\n    value: function hasShadow() {\n      return this._getCache(HAS_SHADOW, this._hasShadow);\n    }\n  }, {\n    key: \"_hasShadow\",\n    value: function _hasShadow() {\n      return this.shadowEnabled() && this.shadowOpacity() !== 0 && !!(this.shadowColor() || this.shadowBlur() || this.shadowOffsetX() || this.shadowOffsetY());\n    }\n  }, {\n    key: \"_getFillPattern\",\n    value: function _getFillPattern() {\n      return this._getCache(patternImage, this.__getFillPattern);\n    }\n  }, {\n    key: \"__getFillPattern\",\n    value: function __getFillPattern() {\n      if (this.fillPatternImage()) {\n        var ctx = getDummyContext();\n        var pattern = ctx.createPattern(this.fillPatternImage(), this.fillPatternRepeat() || 'repeat');\n        if (pattern && pattern.setTransform) {\n          var tr = new Util_1.Transform();\n          tr.translate(this.fillPatternX(), this.fillPatternY());\n          tr.rotate(Global_1.Konva.getAngle(this.fillPatternRotation()));\n          tr.scale(this.fillPatternScaleX(), this.fillPatternScaleY());\n          tr.translate(-1 * this.fillPatternOffsetX(), -1 * this.fillPatternOffsetY());\n          var m = tr.getMatrix();\n          var matrix = typeof DOMMatrix === 'undefined' ? {\n            a: m[0],\n            b: m[1],\n            c: m[2],\n            d: m[3],\n            e: m[4],\n            f: m[5]\n          } : new DOMMatrix(m);\n          pattern.setTransform(matrix);\n        }\n        return pattern;\n      }\n    }\n  }, {\n    key: \"_getLinearGradient\",\n    value: function _getLinearGradient() {\n      return this._getCache(linearGradient, this.__getLinearGradient);\n    }\n  }, {\n    key: \"__getLinearGradient\",\n    value: function __getLinearGradient() {\n      var colorStops = this.fillLinearGradientColorStops();\n      if (colorStops) {\n        var ctx = getDummyContext();\n        var start = this.fillLinearGradientStartPoint();\n        var end = this.fillLinearGradientEndPoint();\n        var grd = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n        for (var n = 0; n < colorStops.length; n += 2) {\n          grd.addColorStop(colorStops[n], colorStops[n + 1]);\n        }\n        return grd;\n      }\n    }\n  }, {\n    key: \"_getRadialGradient\",\n    value: function _getRadialGradient() {\n      return this._getCache(radialGradient, this.__getRadialGradient);\n    }\n  }, {\n    key: \"__getRadialGradient\",\n    value: function __getRadialGradient() {\n      var colorStops = this.fillRadialGradientColorStops();\n      if (colorStops) {\n        var ctx = getDummyContext();\n        var start = this.fillRadialGradientStartPoint();\n        var end = this.fillRadialGradientEndPoint();\n        var grd = ctx.createRadialGradient(start.x, start.y, this.fillRadialGradientStartRadius(), end.x, end.y, this.fillRadialGradientEndRadius());\n        for (var n = 0; n < colorStops.length; n += 2) {\n          grd.addColorStop(colorStops[n], colorStops[n + 1]);\n        }\n        return grd;\n      }\n    }\n  }, {\n    key: \"getShadowRGBA\",\n    value: function getShadowRGBA() {\n      return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n    }\n  }, {\n    key: \"_getShadowRGBA\",\n    value: function _getShadowRGBA() {\n      if (!this.hasShadow()) {\n        return;\n      }\n      var rgba = Util_1.Util.colorToRGBA(this.shadowColor());\n      if (rgba) {\n        return 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' + rgba.a * (this.shadowOpacity() || 1) + ')';\n      }\n    }\n  }, {\n    key: \"hasFill\",\n    value: function hasFill() {\n      var _this2 = this;\n      return this._calculate('hasFill', ['fillEnabled', 'fill', 'fillPatternImage', 'fillLinearGradientColorStops', 'fillRadialGradientColorStops'], function () {\n        return _this2.fillEnabled() && !!(_this2.fill() || _this2.fillPatternImage() || _this2.fillLinearGradientColorStops() || _this2.fillRadialGradientColorStops());\n      });\n    }\n  }, {\n    key: \"hasStroke\",\n    value: function hasStroke() {\n      var _this3 = this;\n      return this._calculate('hasStroke', ['strokeEnabled', 'strokeWidth', 'stroke', 'strokeLinearGradientColorStops'], function () {\n        return _this3.strokeEnabled() && _this3.strokeWidth() && !!(_this3.stroke() || _this3.strokeLinearGradientColorStops());\n      });\n    }\n  }, {\n    key: \"hasHitStroke\",\n    value: function hasHitStroke() {\n      var width = this.hitStrokeWidth();\n      if (width === 'auto') {\n        return this.hasStroke();\n      }\n      return this.strokeEnabled() && !!width;\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(point) {\n      var stage = this.getStage(),\n        bufferHitCanvas = stage.bufferHitCanvas,\n        p;\n      bufferHitCanvas.getContext().clear();\n      this.drawHit(bufferHitCanvas, null, true);\n      p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;\n      return p[3] > 0;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      Node_1.Node.prototype.destroy.call(this);\n      delete exports.shapes[this.colorKey];\n      delete this.colorKey;\n      return this;\n    }\n  }, {\n    key: \"_useBufferCanvas\",\n    value: function _useBufferCanvas(forceFill) {\n      var _a;\n      if (!this.getStage()) {\n        return false;\n      }\n      var perfectDrawEnabled = (_a = this.attrs.perfectDrawEnabled) !== null && _a !== void 0 ? _a : true;\n      if (!perfectDrawEnabled) {\n        return false;\n      }\n      var hasFill = forceFill || this.hasFill();\n      var hasStroke = this.hasStroke();\n      var isTransparent = this.getAbsoluteOpacity() !== 1;\n      if (hasFill && hasStroke && isTransparent) {\n        return true;\n      }\n      var hasShadow = this.hasShadow();\n      var strokeForShadow = this.shadowForStrokeEnabled();\n      if (hasFill && hasStroke && hasShadow && strokeForShadow) {\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"setStrokeHitEnabled\",\n    value: function setStrokeHitEnabled(val) {\n      Util_1.Util.warn('strokeHitEnabled property is deprecated. Please use hitStrokeWidth instead.');\n      if (val) {\n        this.hitStrokeWidth('auto');\n      } else {\n        this.hitStrokeWidth(0);\n      }\n    }\n  }, {\n    key: \"getStrokeHitEnabled\",\n    value: function getStrokeHitEnabled() {\n      if (this.hitStrokeWidth() === 0) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"getSelfRect\",\n    value: function getSelfRect() {\n      var size = this.size();\n      return {\n        x: this._centroid ? -size.width / 2 : 0,\n        y: this._centroid ? -size.height / 2 : 0,\n        width: size.width,\n        height: size.height\n      };\n    }\n  }, {\n    key: \"getClientRect\",\n    value: function getClientRect() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var skipTransform = config.skipTransform;\n      var relativeTo = config.relativeTo;\n      var fillRect = this.getSelfRect();\n      var applyStroke = !config.skipStroke && this.hasStroke();\n      var strokeWidth = applyStroke && this.strokeWidth() || 0;\n      var fillAndStrokeWidth = fillRect.width + strokeWidth;\n      var fillAndStrokeHeight = fillRect.height + strokeWidth;\n      var applyShadow = !config.skipShadow && this.hasShadow();\n      var shadowOffsetX = applyShadow ? this.shadowOffsetX() : 0;\n      var shadowOffsetY = applyShadow ? this.shadowOffsetY() : 0;\n      var preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n      var preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n      var blurRadius = applyShadow && this.shadowBlur() || 0;\n      var width = preWidth + blurRadius * 2;\n      var height = preHeight + blurRadius * 2;\n      var rect = {\n        width: width,\n        height: height,\n        x: -(strokeWidth / 2 + blurRadius) + Math.min(shadowOffsetX, 0) + fillRect.x,\n        y: -(strokeWidth / 2 + blurRadius) + Math.min(shadowOffsetY, 0) + fillRect.y\n      };\n      if (!skipTransform) {\n        return this._transformedRect(rect, relativeTo);\n      }\n      return rect;\n    }\n  }, {\n    key: \"drawScene\",\n    value: function drawScene(can, top) {\n      var layer = this.getLayer(),\n        canvas = can || layer.getCanvas(),\n        context = canvas.getContext(),\n        cachedCanvas = this._getCanvasCache(),\n        drawFunc = this.getSceneFunc(),\n        hasShadow = this.hasShadow(),\n        stage,\n        bufferCanvas,\n        bufferContext;\n      var skipBuffer = canvas.isCache;\n      var cachingSelf = top === this;\n      if (!this.isVisible() && !cachingSelf) {\n        return this;\n      }\n      if (cachedCanvas) {\n        context.save();\n        var m = this.getAbsoluteTransform(top).getMatrix();\n        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        this._drawCachedSceneCanvas(context);\n        context.restore();\n        return this;\n      }\n      if (!drawFunc) {\n        return this;\n      }\n      context.save();\n      if (this._useBufferCanvas() && !skipBuffer) {\n        stage = this.getStage();\n        bufferCanvas = stage.bufferCanvas;\n        bufferContext = bufferCanvas.getContext();\n        bufferContext.clear();\n        bufferContext.save();\n        bufferContext._applyLineJoin(this);\n        var o = this.getAbsoluteTransform(top).getMatrix();\n        bufferContext.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n        drawFunc.call(this, bufferContext, this);\n        bufferContext.restore();\n        var ratio = bufferCanvas.pixelRatio;\n        if (hasShadow) {\n          context._applyShadow(this);\n        }\n        context._applyOpacity(this);\n        context._applyGlobalCompositeOperation(this);\n        context.drawImage(bufferCanvas._canvas, 0, 0, bufferCanvas.width / ratio, bufferCanvas.height / ratio);\n      } else {\n        context._applyLineJoin(this);\n        if (!cachingSelf) {\n          var o = this.getAbsoluteTransform(top).getMatrix();\n          context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n          context._applyOpacity(this);\n          context._applyGlobalCompositeOperation(this);\n        }\n        if (hasShadow) {\n          context._applyShadow(this);\n        }\n        drawFunc.call(this, context, this);\n      }\n      context.restore();\n      return this;\n    }\n  }, {\n    key: \"drawHit\",\n    value: function drawHit(can, top) {\n      var skipDragCheck = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (!this.shouldDrawHit(top, skipDragCheck)) {\n        return this;\n      }\n      var layer = this.getLayer(),\n        canvas = can || layer.hitCanvas,\n        context = canvas && canvas.getContext(),\n        drawFunc = this.hitFunc() || this.sceneFunc(),\n        cachedCanvas = this._getCanvasCache(),\n        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n      if (!this.colorKey) {\n        Util_1.Util.warn('Looks like your canvas has a destroyed shape in it. Do not reuse shape after you destroyed it. If you want to reuse shape you should call remove() instead of destroy()');\n      }\n      if (cachedHitCanvas) {\n        context.save();\n        var m = this.getAbsoluteTransform(top).getMatrix();\n        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        this._drawCachedHitCanvas(context);\n        context.restore();\n        return this;\n      }\n      if (!drawFunc) {\n        return this;\n      }\n      context.save();\n      context._applyLineJoin(this);\n      var selfCache = this === top;\n      if (!selfCache) {\n        var o = this.getAbsoluteTransform(top).getMatrix();\n        context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n      }\n      drawFunc.call(this, context, this);\n      context.restore();\n      return this;\n    }\n  }, {\n    key: \"drawHitFromCache\",\n    value: function drawHitFromCache() {\n      var alphaThreshold = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var cachedCanvas = this._getCanvasCache(),\n        sceneCanvas = this._getCachedSceneCanvas(),\n        hitCanvas = cachedCanvas.hit,\n        hitContext = hitCanvas.getContext(),\n        hitWidth = hitCanvas.getWidth(),\n        hitHeight = hitCanvas.getHeight(),\n        hitImageData,\n        hitData,\n        len,\n        rgbColorKey,\n        i,\n        alpha;\n      hitContext.clear();\n      hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n      try {\n        hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n        hitData = hitImageData.data;\n        len = hitData.length;\n        rgbColorKey = Util_1.Util._hexToRgb(this.colorKey);\n        for (i = 0; i < len; i += 4) {\n          alpha = hitData[i + 3];\n          if (alpha > alphaThreshold) {\n            hitData[i] = rgbColorKey.r;\n            hitData[i + 1] = rgbColorKey.g;\n            hitData[i + 2] = rgbColorKey.b;\n            hitData[i + 3] = 255;\n          } else {\n            hitData[i + 3] = 0;\n          }\n        }\n        hitContext.putImageData(hitImageData, 0, 0);\n      } catch (e) {\n        Util_1.Util.error('Unable to draw hit graph from cached scene canvas. ' + e.message);\n      }\n      return this;\n    }\n  }, {\n    key: \"hasPointerCapture\",\n    value: function hasPointerCapture(pointerId) {\n      return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n  }, {\n    key: \"setPointerCapture\",\n    value: function setPointerCapture(pointerId) {\n      PointerEvents.setPointerCapture(pointerId, this);\n    }\n  }, {\n    key: \"releaseCapture\",\n    value: function releaseCapture(pointerId) {\n      PointerEvents.releaseCapture(pointerId, this);\n    }\n  }]);\n  return Shape;\n}(Node_1.Node);\nexports.Shape = Shape;\nShape.prototype._fillFunc = _fillFunc;\nShape.prototype._strokeFunc = _strokeFunc;\nShape.prototype._fillFuncHit = _fillFuncHit;\nShape.prototype._strokeFuncHit = _strokeFuncHit;\nShape.prototype._centroid = false;\nShape.prototype.nodeType = 'Shape';\n(0, Global_2._registerNode)(Shape);\nShape.prototype.eventListeners = {};\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearHasShadowCache);\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearGetShadowRGBACache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillPatternImageChange.konva fillPatternRepeatChange.konva fillPatternScaleXChange.konva fillPatternScaleYChange.konva fillPatternOffsetXChange.konva fillPatternOffsetYChange.konva fillPatternXChange.konva fillPatternYChange.konva fillPatternRotationChange.konva', _clearFillPatternCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillLinearGradientColorStopsChange.konva fillLinearGradientStartPointXChange.konva fillLinearGradientStartPointYChange.konva fillLinearGradientEndPointXChange.konva fillLinearGradientEndPointYChange.konva', _clearLinearGradientCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillRadialGradientColorStopsChange.konva fillRadialGradientStartPointXChange.konva fillRadialGradientStartPointYChange.konva fillRadialGradientEndPointXChange.konva fillRadialGradientEndPointYChange.konva fillRadialGradientStartRadiusChange.konva fillRadialGradientEndRadiusChange.konva', _clearRadialGradientCache);\nFactory_1.Factory.addGetterSetter(Shape, 'stroke', undefined, (0, Validators_1.getStringOrGradientValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'strokeWidth', 2, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillAfterStrokeEnabled', false);\nFactory_1.Factory.addGetterSetter(Shape, 'hitStrokeWidth', 'auto', (0, Validators_1.getNumberOrAutoValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'strokeHitEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'perfectDrawEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowForStrokeEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'lineJoin');\nFactory_1.Factory.addGetterSetter(Shape, 'lineCap');\nFactory_1.Factory.addGetterSetter(Shape, 'sceneFunc');\nFactory_1.Factory.addGetterSetter(Shape, 'hitFunc');\nFactory_1.Factory.addGetterSetter(Shape, 'dash');\nFactory_1.Factory.addGetterSetter(Shape, 'dashOffset', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowColor', undefined, (0, Validators_1.getStringValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowBlur', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOpacity', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'shadowOffset', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOffsetX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOffsetY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternImage');\nFactory_1.Factory.addGetterSetter(Shape, 'fill', undefined, (0, Validators_1.getStringOrGradientValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartRadius', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndRadius', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternRepeat', 'repeat');\nFactory_1.Factory.addGetterSetter(Shape, 'fillEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'shadowEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'dashEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeScaleEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPriority', 'color');\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillPatternOffset', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternOffsetX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternOffsetY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillPatternScale', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternScaleX', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternScaleY', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillLinearGradientStartPoint', ['x', 'y']);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'strokeLinearGradientStartPoint', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientStartPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientStartPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillLinearGradientEndPoint', ['x', 'y']);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'strokeLinearGradientEndPoint', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientEndPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientEndPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillRadialGradientStartPoint', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillRadialGradientEndPoint', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternRotation', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRule', undefined, (0, Validators_1.getStringValidator)());\nFactory_1.Factory.backCompat(Shape, {\n  dashArray: 'dash',\n  getDashArray: 'getDash',\n  setDashArray: 'getDash',\n  drawFunc: 'sceneFunc',\n  getDrawFunc: 'getSceneFunc',\n  setDrawFunc: 'setSceneFunc',\n  drawHitFunc: 'hitFunc',\n  getDrawHitFunc: 'getHitFunc',\n  setDrawHitFunc: 'setHitFunc'\n});","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","_assertThisInitialized","_inherits","_createSuper","Object","defineProperty","exports","value","Shape","shapes","Global_1","Util_1","Factory_1","Node_1","Validators_1","Global_2","PointerEvents","HAS_SHADOW","SHADOW_RGBA","patternImage","linearGradient","radialGradient","dummyContext","getDummyContext","Util","createCanvasElement","getContext","_fillFunc","context","fillRule","attrs","fill","_strokeFunc","stroke","_fillFuncHit","_strokeFuncHit","_clearHasShadowCache","_clearCache","_clearGetShadowRGBACache","_clearFillPatternCache","_clearLinearGradientCache","_clearRadialGradientCache","_Node_1$Node","_super","config","_this","call","key","getRandomColor","colorKey","warn","getLayer","getCanvas","getSceneFunc","sceneFunc","getHitFunc","hitFunc","hasShadow","_getCache","_hasShadow","shadowEnabled","shadowOpacity","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_getFillPattern","__getFillPattern","fillPatternImage","ctx","pattern","createPattern","fillPatternRepeat","setTransform","tr","Transform","translate","fillPatternX","fillPatternY","rotate","Konva","getAngle","fillPatternRotation","scale","fillPatternScaleX","fillPatternScaleY","fillPatternOffsetX","fillPatternOffsetY","m","getMatrix","matrix","DOMMatrix","a","b","c","d","e","f","_getLinearGradient","__getLinearGradient","colorStops","fillLinearGradientColorStops","start","fillLinearGradientStartPoint","end","fillLinearGradientEndPoint","grd","createLinearGradient","x","y","n","length","addColorStop","_getRadialGradient","__getRadialGradient","fillRadialGradientColorStops","fillRadialGradientStartPoint","fillRadialGradientEndPoint","createRadialGradient","fillRadialGradientStartRadius","fillRadialGradientEndRadius","getShadowRGBA","_getShadowRGBA","rgba","colorToRGBA","r","g","hasFill","_this2","_calculate","fillEnabled","hasStroke","_this3","strokeEnabled","strokeWidth","strokeLinearGradientColorStops","hasHitStroke","width","hitStrokeWidth","intersects","point","stage","getStage","bufferHitCanvas","p","clear","drawHit","getImageData","Math","round","data","destroy","Node","prototype","_useBufferCanvas","forceFill","_a","perfectDrawEnabled","isTransparent","getAbsoluteOpacity","strokeForShadow","shadowForStrokeEnabled","setStrokeHitEnabled","val","getStrokeHitEnabled","getSelfRect","size","_centroid","height","getClientRect","arguments","undefined","skipTransform","relativeTo","fillRect","applyStroke","skipStroke","fillAndStrokeWidth","fillAndStrokeHeight","applyShadow","skipShadow","preWidth","abs","preHeight","blurRadius","rect","min","_transformedRect","drawScene","can","top","layer","canvas","cachedCanvas","_getCanvasCache","drawFunc","bufferCanvas","bufferContext","skipBuffer","isCache","cachingSelf","isVisible","save","getAbsoluteTransform","transform","_drawCachedSceneCanvas","restore","_applyLineJoin","o","ratio","pixelRatio","_applyShadow","_applyOpacity","_applyGlobalCompositeOperation","drawImage","_canvas","skipDragCheck","shouldDrawHit","hitCanvas","cachedHitCanvas","hit","_drawCachedHitCanvas","selfCache","drawHitFromCache","alphaThreshold","sceneCanvas","_getCachedSceneCanvas","hitContext","hitWidth","getWidth","hitHeight","getHeight","hitImageData","hitData","len","rgbColorKey","i","alpha","_hexToRgb","putImageData","error","message","hasPointerCapture","pointerId","setPointerCapture","releaseCapture","nodeType","_registerNode","eventListeners","on","Factory","addGetterSetter","getStringOrGradientValidator","getNumberValidator","getNumberOrAutoValidator","getBooleanValidator","getStringValidator","addComponentsGetterSetter","backCompat","dashArray","getDashArray","setDashArray","getDrawFunc","setDrawFunc","drawHitFunc","getDrawHitFunc","setDrawHitFunc"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/node_modules/konva/lib/Shape.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Shape = exports.shapes = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nconst Factory_1 = require(\"./Factory\");\nconst Node_1 = require(\"./Node\");\nconst Validators_1 = require(\"./Validators\");\nconst Global_2 = require(\"./Global\");\nconst PointerEvents = require(\"./PointerEvents\");\nvar HAS_SHADOW = 'hasShadow';\nvar SHADOW_RGBA = 'shadowRGBA';\nvar patternImage = 'patternImage';\nvar linearGradient = 'linearGradient';\nvar radialGradient = 'radialGradient';\nlet dummyContext;\nfunction getDummyContext() {\n    if (dummyContext) {\n        return dummyContext;\n    }\n    dummyContext = Util_1.Util.createCanvasElement().getContext('2d');\n    return dummyContext;\n}\nexports.shapes = {};\nfunction _fillFunc(context) {\n    const fillRule = this.attrs.fillRule;\n    if (fillRule) {\n        context.fill(fillRule);\n    }\n    else {\n        context.fill();\n    }\n}\nfunction _strokeFunc(context) {\n    context.stroke();\n}\nfunction _fillFuncHit(context) {\n    context.fill();\n}\nfunction _strokeFuncHit(context) {\n    context.stroke();\n}\nfunction _clearHasShadowCache() {\n    this._clearCache(HAS_SHADOW);\n}\nfunction _clearGetShadowRGBACache() {\n    this._clearCache(SHADOW_RGBA);\n}\nfunction _clearFillPatternCache() {\n    this._clearCache(patternImage);\n}\nfunction _clearLinearGradientCache() {\n    this._clearCache(linearGradient);\n}\nfunction _clearRadialGradientCache() {\n    this._clearCache(radialGradient);\n}\nclass Shape extends Node_1.Node {\n    constructor(config) {\n        super(config);\n        let key;\n        while (true) {\n            key = Util_1.Util.getRandomColor();\n            if (key && !(key in exports.shapes)) {\n                break;\n            }\n        }\n        this.colorKey = key;\n        exports.shapes[key] = this;\n    }\n    getContext() {\n        Util_1.Util.warn('shape.getContext() method is deprecated. Please do not use it.');\n        return this.getLayer().getContext();\n    }\n    getCanvas() {\n        Util_1.Util.warn('shape.getCanvas() method is deprecated. Please do not use it.');\n        return this.getLayer().getCanvas();\n    }\n    getSceneFunc() {\n        return this.attrs.sceneFunc || this['_sceneFunc'];\n    }\n    getHitFunc() {\n        return this.attrs.hitFunc || this['_hitFunc'];\n    }\n    hasShadow() {\n        return this._getCache(HAS_SHADOW, this._hasShadow);\n    }\n    _hasShadow() {\n        return (this.shadowEnabled() &&\n            this.shadowOpacity() !== 0 &&\n            !!(this.shadowColor() ||\n                this.shadowBlur() ||\n                this.shadowOffsetX() ||\n                this.shadowOffsetY()));\n    }\n    _getFillPattern() {\n        return this._getCache(patternImage, this.__getFillPattern);\n    }\n    __getFillPattern() {\n        if (this.fillPatternImage()) {\n            var ctx = getDummyContext();\n            const pattern = ctx.createPattern(this.fillPatternImage(), this.fillPatternRepeat() || 'repeat');\n            if (pattern && pattern.setTransform) {\n                const tr = new Util_1.Transform();\n                tr.translate(this.fillPatternX(), this.fillPatternY());\n                tr.rotate(Global_1.Konva.getAngle(this.fillPatternRotation()));\n                tr.scale(this.fillPatternScaleX(), this.fillPatternScaleY());\n                tr.translate(-1 * this.fillPatternOffsetX(), -1 * this.fillPatternOffsetY());\n                const m = tr.getMatrix();\n                const matrix = typeof DOMMatrix === 'undefined'\n                    ? {\n                        a: m[0],\n                        b: m[1],\n                        c: m[2],\n                        d: m[3],\n                        e: m[4],\n                        f: m[5],\n                    }\n                    : new DOMMatrix(m);\n                pattern.setTransform(matrix);\n            }\n            return pattern;\n        }\n    }\n    _getLinearGradient() {\n        return this._getCache(linearGradient, this.__getLinearGradient);\n    }\n    __getLinearGradient() {\n        var colorStops = this.fillLinearGradientColorStops();\n        if (colorStops) {\n            var ctx = getDummyContext();\n            var start = this.fillLinearGradientStartPoint();\n            var end = this.fillLinearGradientEndPoint();\n            var grd = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            return grd;\n        }\n    }\n    _getRadialGradient() {\n        return this._getCache(radialGradient, this.__getRadialGradient);\n    }\n    __getRadialGradient() {\n        var colorStops = this.fillRadialGradientColorStops();\n        if (colorStops) {\n            var ctx = getDummyContext();\n            var start = this.fillRadialGradientStartPoint();\n            var end = this.fillRadialGradientEndPoint();\n            var grd = ctx.createRadialGradient(start.x, start.y, this.fillRadialGradientStartRadius(), end.x, end.y, this.fillRadialGradientEndRadius());\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            return grd;\n        }\n    }\n    getShadowRGBA() {\n        return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n    }\n    _getShadowRGBA() {\n        if (!this.hasShadow()) {\n            return;\n        }\n        var rgba = Util_1.Util.colorToRGBA(this.shadowColor());\n        if (rgba) {\n            return ('rgba(' +\n                rgba.r +\n                ',' +\n                rgba.g +\n                ',' +\n                rgba.b +\n                ',' +\n                rgba.a * (this.shadowOpacity() || 1) +\n                ')');\n        }\n    }\n    hasFill() {\n        return this._calculate('hasFill', [\n            'fillEnabled',\n            'fill',\n            'fillPatternImage',\n            'fillLinearGradientColorStops',\n            'fillRadialGradientColorStops',\n        ], () => {\n            return (this.fillEnabled() &&\n                !!(this.fill() ||\n                    this.fillPatternImage() ||\n                    this.fillLinearGradientColorStops() ||\n                    this.fillRadialGradientColorStops()));\n        });\n    }\n    hasStroke() {\n        return this._calculate('hasStroke', [\n            'strokeEnabled',\n            'strokeWidth',\n            'stroke',\n            'strokeLinearGradientColorStops',\n        ], () => {\n            return (this.strokeEnabled() &&\n                this.strokeWidth() &&\n                !!(this.stroke() || this.strokeLinearGradientColorStops()));\n        });\n    }\n    hasHitStroke() {\n        const width = this.hitStrokeWidth();\n        if (width === 'auto') {\n            return this.hasStroke();\n        }\n        return this.strokeEnabled() && !!width;\n    }\n    intersects(point) {\n        var stage = this.getStage(), bufferHitCanvas = stage.bufferHitCanvas, p;\n        bufferHitCanvas.getContext().clear();\n        this.drawHit(bufferHitCanvas, null, true);\n        p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;\n        return p[3] > 0;\n    }\n    destroy() {\n        Node_1.Node.prototype.destroy.call(this);\n        delete exports.shapes[this.colorKey];\n        delete this.colorKey;\n        return this;\n    }\n    _useBufferCanvas(forceFill) {\n        var _a;\n        if (!this.getStage()) {\n            return false;\n        }\n        const perfectDrawEnabled = (_a = this.attrs.perfectDrawEnabled) !== null && _a !== void 0 ? _a : true;\n        if (!perfectDrawEnabled) {\n            return false;\n        }\n        const hasFill = forceFill || this.hasFill();\n        const hasStroke = this.hasStroke();\n        const isTransparent = this.getAbsoluteOpacity() !== 1;\n        if (hasFill && hasStroke && isTransparent) {\n            return true;\n        }\n        const hasShadow = this.hasShadow();\n        const strokeForShadow = this.shadowForStrokeEnabled();\n        if (hasFill && hasStroke && hasShadow && strokeForShadow) {\n            return true;\n        }\n        return false;\n    }\n    setStrokeHitEnabled(val) {\n        Util_1.Util.warn('strokeHitEnabled property is deprecated. Please use hitStrokeWidth instead.');\n        if (val) {\n            this.hitStrokeWidth('auto');\n        }\n        else {\n            this.hitStrokeWidth(0);\n        }\n    }\n    getStrokeHitEnabled() {\n        if (this.hitStrokeWidth() === 0) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    getSelfRect() {\n        var size = this.size();\n        return {\n            x: this._centroid ? -size.width / 2 : 0,\n            y: this._centroid ? -size.height / 2 : 0,\n            width: size.width,\n            height: size.height,\n        };\n    }\n    getClientRect(config = {}) {\n        const skipTransform = config.skipTransform;\n        const relativeTo = config.relativeTo;\n        const fillRect = this.getSelfRect();\n        const applyStroke = !config.skipStroke && this.hasStroke();\n        const strokeWidth = (applyStroke && this.strokeWidth()) || 0;\n        const fillAndStrokeWidth = fillRect.width + strokeWidth;\n        const fillAndStrokeHeight = fillRect.height + strokeWidth;\n        const applyShadow = !config.skipShadow && this.hasShadow();\n        const shadowOffsetX = applyShadow ? this.shadowOffsetX() : 0;\n        const shadowOffsetY = applyShadow ? this.shadowOffsetY() : 0;\n        const preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n        const preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n        const blurRadius = (applyShadow && this.shadowBlur()) || 0;\n        const width = preWidth + blurRadius * 2;\n        const height = preHeight + blurRadius * 2;\n        const rect = {\n            width: width,\n            height: height,\n            x: -(strokeWidth / 2 + blurRadius) +\n                Math.min(shadowOffsetX, 0) +\n                fillRect.x,\n            y: -(strokeWidth / 2 + blurRadius) +\n                Math.min(shadowOffsetY, 0) +\n                fillRect.y,\n        };\n        if (!skipTransform) {\n            return this._transformedRect(rect, relativeTo);\n        }\n        return rect;\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || layer.getCanvas(), context = canvas.getContext(), cachedCanvas = this._getCanvasCache(), drawFunc = this.getSceneFunc(), hasShadow = this.hasShadow(), stage, bufferCanvas, bufferContext;\n        var skipBuffer = canvas.isCache;\n        var cachingSelf = top === this;\n        if (!this.isVisible() && !cachingSelf) {\n            return this;\n        }\n        if (cachedCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n            return this;\n        }\n        if (!drawFunc) {\n            return this;\n        }\n        context.save();\n        if (this._useBufferCanvas() && !skipBuffer) {\n            stage = this.getStage();\n            bufferCanvas = stage.bufferCanvas;\n            bufferContext = bufferCanvas.getContext();\n            bufferContext.clear();\n            bufferContext.save();\n            bufferContext._applyLineJoin(this);\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            bufferContext.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n            drawFunc.call(this, bufferContext, this);\n            bufferContext.restore();\n            var ratio = bufferCanvas.pixelRatio;\n            if (hasShadow) {\n                context._applyShadow(this);\n            }\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n            context.drawImage(bufferCanvas._canvas, 0, 0, bufferCanvas.width / ratio, bufferCanvas.height / ratio);\n        }\n        else {\n            context._applyLineJoin(this);\n            if (!cachingSelf) {\n                var o = this.getAbsoluteTransform(top).getMatrix();\n                context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n                context._applyOpacity(this);\n                context._applyGlobalCompositeOperation(this);\n            }\n            if (hasShadow) {\n                context._applyShadow(this);\n            }\n            drawFunc.call(this, context, this);\n        }\n        context.restore();\n        return this;\n    }\n    drawHit(can, top, skipDragCheck = false) {\n        if (!this.shouldDrawHit(top, skipDragCheck)) {\n            return this;\n        }\n        var layer = this.getLayer(), canvas = can || layer.hitCanvas, context = canvas && canvas.getContext(), drawFunc = this.hitFunc() || this.sceneFunc(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (!this.colorKey) {\n            Util_1.Util.warn('Looks like your canvas has a destroyed shape in it. Do not reuse shape after you destroyed it. If you want to reuse shape you should call remove() instead of destroy()');\n        }\n        if (cachedHitCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n            return this;\n        }\n        if (!drawFunc) {\n            return this;\n        }\n        context.save();\n        context._applyLineJoin(this);\n        const selfCache = this === top;\n        if (!selfCache) {\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n        }\n        drawFunc.call(this, context, this);\n        context.restore();\n        return this;\n    }\n    drawHitFromCache(alphaThreshold = 0) {\n        var cachedCanvas = this._getCanvasCache(), sceneCanvas = this._getCachedSceneCanvas(), hitCanvas = cachedCanvas.hit, hitContext = hitCanvas.getContext(), hitWidth = hitCanvas.getWidth(), hitHeight = hitCanvas.getHeight(), hitImageData, hitData, len, rgbColorKey, i, alpha;\n        hitContext.clear();\n        hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n        try {\n            hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n            hitData = hitImageData.data;\n            len = hitData.length;\n            rgbColorKey = Util_1.Util._hexToRgb(this.colorKey);\n            for (i = 0; i < len; i += 4) {\n                alpha = hitData[i + 3];\n                if (alpha > alphaThreshold) {\n                    hitData[i] = rgbColorKey.r;\n                    hitData[i + 1] = rgbColorKey.g;\n                    hitData[i + 2] = rgbColorKey.b;\n                    hitData[i + 3] = 255;\n                }\n                else {\n                    hitData[i + 3] = 0;\n                }\n            }\n            hitContext.putImageData(hitImageData, 0, 0);\n        }\n        catch (e) {\n            Util_1.Util.error('Unable to draw hit graph from cached scene canvas. ' + e.message);\n        }\n        return this;\n    }\n    hasPointerCapture(pointerId) {\n        return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        PointerEvents.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        PointerEvents.releaseCapture(pointerId, this);\n    }\n}\nexports.Shape = Shape;\nShape.prototype._fillFunc = _fillFunc;\nShape.prototype._strokeFunc = _strokeFunc;\nShape.prototype._fillFuncHit = _fillFuncHit;\nShape.prototype._strokeFuncHit = _strokeFuncHit;\nShape.prototype._centroid = false;\nShape.prototype.nodeType = 'Shape';\n(0, Global_2._registerNode)(Shape);\nShape.prototype.eventListeners = {};\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearHasShadowCache);\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearGetShadowRGBACache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillPatternImageChange.konva fillPatternRepeatChange.konva fillPatternScaleXChange.konva fillPatternScaleYChange.konva fillPatternOffsetXChange.konva fillPatternOffsetYChange.konva fillPatternXChange.konva fillPatternYChange.konva fillPatternRotationChange.konva', _clearFillPatternCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillLinearGradientColorStopsChange.konva fillLinearGradientStartPointXChange.konva fillLinearGradientStartPointYChange.konva fillLinearGradientEndPointXChange.konva fillLinearGradientEndPointYChange.konva', _clearLinearGradientCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillRadialGradientColorStopsChange.konva fillRadialGradientStartPointXChange.konva fillRadialGradientStartPointYChange.konva fillRadialGradientEndPointXChange.konva fillRadialGradientEndPointYChange.konva fillRadialGradientStartRadiusChange.konva fillRadialGradientEndRadiusChange.konva', _clearRadialGradientCache);\nFactory_1.Factory.addGetterSetter(Shape, 'stroke', undefined, (0, Validators_1.getStringOrGradientValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'strokeWidth', 2, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillAfterStrokeEnabled', false);\nFactory_1.Factory.addGetterSetter(Shape, 'hitStrokeWidth', 'auto', (0, Validators_1.getNumberOrAutoValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'strokeHitEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'perfectDrawEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowForStrokeEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'lineJoin');\nFactory_1.Factory.addGetterSetter(Shape, 'lineCap');\nFactory_1.Factory.addGetterSetter(Shape, 'sceneFunc');\nFactory_1.Factory.addGetterSetter(Shape, 'hitFunc');\nFactory_1.Factory.addGetterSetter(Shape, 'dash');\nFactory_1.Factory.addGetterSetter(Shape, 'dashOffset', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowColor', undefined, (0, Validators_1.getStringValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowBlur', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOpacity', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'shadowOffset', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOffsetX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOffsetY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternImage');\nFactory_1.Factory.addGetterSetter(Shape, 'fill', undefined, (0, Validators_1.getStringOrGradientValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartRadius', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndRadius', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternRepeat', 'repeat');\nFactory_1.Factory.addGetterSetter(Shape, 'fillEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'shadowEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'dashEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeScaleEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPriority', 'color');\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillPatternOffset', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternOffsetX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternOffsetY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillPatternScale', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternScaleX', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternScaleY', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillLinearGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'strokeLinearGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientStartPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientStartPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillLinearGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'strokeLinearGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientEndPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientEndPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillRadialGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillRadialGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternRotation', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRule', undefined, (0, Validators_1.getStringValidator)());\nFactory_1.Factory.backCompat(Shape, {\n    dashArray: 'dash',\n    getDashArray: 'getDash',\n    setDashArray: 'getDash',\n    drawFunc: 'sceneFunc',\n    getDrawFunc: 'getSceneFunc',\n    setDrawFunc: 'setSceneFunc',\n    drawHitFunc: 'hitFunc',\n    getDrawHitFunc: 'getHitFunc',\n    setDrawHitFunc: 'setHitFunc',\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}