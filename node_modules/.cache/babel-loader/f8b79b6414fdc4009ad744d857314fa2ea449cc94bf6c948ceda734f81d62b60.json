{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Desktop\\\\WWW\\\\react\\\\skynet\\\\skynet\\\\src\\\\test\\\\siatka-izometryczna.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 30;\nconst TILE_SIZE = 30;\nfunction drawIsometricGrid(context) {\n  context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n  for (let x = 0; x < GRID_SIZE; x++) {\n    for (let y = 0; y < GRID_SIZE; y++) {\n      drawIsometricTile(context, x, y);\n    }\n  }\n}\nfunction drawIsometricTile(context, x, y) {\n  const isoX = (x - y) * TILE_SIZE;\n  const isoY = (x + y) * TILE_SIZE / 2;\n  context.beginPath();\n  context.moveTo(isoX, isoY);\n  context.lineTo(isoX + TILE_SIZE, isoY + TILE_SIZE / 2);\n  context.lineTo(isoX, isoY + TILE_SIZE);\n  context.lineTo(isoX - TILE_SIZE, isoY + TILE_SIZE / 2);\n  context.closePath();\n  context.fillStyle = (x + y) % 2 === 0 ? '#ccc' : '#999';\n  context.fill();\n}\nfunction CanvasComponent() {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.translate(canvas.width / 2, TILE_SIZE / 2);\n    drawIsometricGrid(context);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: GRID_SIZE * TILE_SIZE * 2,\n    height: GRID_SIZE * TILE_SIZE\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(CanvasComponent, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = CanvasComponent;\nexport default CanvasComponent;\nvar _c;\n$RefreshReg$(_c, \"CanvasComponent\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","GRID_SIZE","TILE_SIZE","drawIsometricGrid","context","clearRect","canvas","width","height","x","y","drawIsometricTile","isoX","isoY","beginPath","moveTo","lineTo","closePath","fillStyle","fill","CanvasComponent","_s","canvasRef","current","getContext","translate","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/src/test/siatka-izometryczna.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst GRID_SIZE = 30;\nconst TILE_SIZE = 30;\n\nfunction drawIsometricGrid(context) {\n  context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n\n  for (let x = 0; x < GRID_SIZE; x++) {\n    for (let y = 0; y < GRID_SIZE; y++) {\n      drawIsometricTile(context, x, y);\n    }\n  }\n}\n\nfunction drawIsometricTile(context, x, y) {\n  const isoX = (x - y) * TILE_SIZE;\n  const isoY = (x + y) * TILE_SIZE / 2;\n\n  context.beginPath();\n  context.moveTo(isoX, isoY);\n  context.lineTo(isoX + TILE_SIZE, isoY + TILE_SIZE / 2);\n  context.lineTo(isoX, isoY + TILE_SIZE);\n  context.lineTo(isoX - TILE_SIZE, isoY + TILE_SIZE / 2);\n  context.closePath();\n\n  context.fillStyle = (x + y) % 2 === 0 ? '#ccc' : '#999';\n  context.fill();\n}\n\nfunction CanvasComponent() {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.translate(canvas.width / 2, TILE_SIZE / 2);\n    drawIsometricGrid(context);\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={GRID_SIZE * TILE_SIZE * 2}\n      height={GRID_SIZE * TILE_SIZE}\n    />\n  );\n}\n\nexport default CanvasComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,SAAS,GAAG,EAAE;AAEpB,SAASC,iBAAiBA,CAACC,OAAO,EAAE;EAClCA,OAAO,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAED,OAAO,CAACE,MAAM,CAACC,KAAK,EAAEH,OAAO,CAACE,MAAM,CAACE,MAAM,CAAC;EAEpE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,SAAS,EAAEQ,CAAC,EAAE,EAAE;IAClC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,SAAS,EAAES,CAAC,EAAE,EAAE;MAClCC,iBAAiB,CAACP,OAAO,EAAEK,CAAC,EAAEC,CAAC,CAAC;IAClC;EACF;AACF;AAEA,SAASC,iBAAiBA,CAACP,OAAO,EAAEK,CAAC,EAAEC,CAAC,EAAE;EACxC,MAAME,IAAI,GAAG,CAACH,CAAC,GAAGC,CAAC,IAAIR,SAAS;EAChC,MAAMW,IAAI,GAAG,CAACJ,CAAC,GAAGC,CAAC,IAAIR,SAAS,GAAG,CAAC;EAEpCE,OAAO,CAACU,SAAS,CAAC,CAAC;EACnBV,OAAO,CAACW,MAAM,CAACH,IAAI,EAAEC,IAAI,CAAC;EAC1BT,OAAO,CAACY,MAAM,CAACJ,IAAI,GAAGV,SAAS,EAAEW,IAAI,GAAGX,SAAS,GAAG,CAAC,CAAC;EACtDE,OAAO,CAACY,MAAM,CAACJ,IAAI,EAAEC,IAAI,GAAGX,SAAS,CAAC;EACtCE,OAAO,CAACY,MAAM,CAACJ,IAAI,GAAGV,SAAS,EAAEW,IAAI,GAAGX,SAAS,GAAG,CAAC,CAAC;EACtDE,OAAO,CAACa,SAAS,CAAC,CAAC;EAEnBb,OAAO,CAACc,SAAS,GAAG,CAACT,CAAC,GAAGC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG,MAAM;EACvDN,OAAO,CAACe,IAAI,CAAC,CAAC;AAChB;AAEA,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,SAAS,GAAGzB,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd,MAAMQ,MAAM,GAAGgB,SAAS,CAACC,OAAO;IAChC,MAAMnB,OAAO,GAAGE,MAAM,CAACkB,UAAU,CAAC,IAAI,CAAC;IACvCpB,OAAO,CAACqB,SAAS,CAACnB,MAAM,CAACC,KAAK,GAAG,CAAC,EAAEL,SAAS,GAAG,CAAC,CAAC;IAClDC,iBAAiB,CAACC,OAAO,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA;IACE0B,GAAG,EAAEJ,SAAU;IACff,KAAK,EAAEN,SAAS,GAAGC,SAAS,GAAG,CAAE;IACjCM,MAAM,EAAEP,SAAS,GAAGC;EAAU;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEN;AAACT,EAAA,CAjBQD,eAAe;AAAAW,EAAA,GAAfX,eAAe;AAmBxB,eAAeA,eAAe;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}