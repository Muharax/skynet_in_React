{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Desktop\\\\WWW\\\\react\\\\skynet\\\\skynet\\\\src\\\\siatka\\\\siatka.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst speedBreak = 1000;\nconst generateShuffledNumbers = (min, max) => {\n  let numbers = Array.from({\n    length: max - min + 1\n  }, (_, i) => i + min);\n  for (let i = numbers.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [numbers[i], numbers[j]] = [numbers[j], numbers[i]];\n  }\n  return numbers;\n};\nconst Div = ({\n  startAnimation,\n  number,\n  animationDuration,\n  minNumber,\n  maxNumber,\n  handleSliderChange\n}) => {\n  _s();\n  const [displayedNumbers, setDisplayedNumbers] = useState(generateShuffledNumbers(minNumber, maxNumber));\n  useEffect(() => {\n    const shuffledNumbers = generateShuffledNumbers(minNumber, maxNumber);\n    if (startAnimation) {\n      setDisplayedNumbers(shuffledNumbers);\n    } else {\n      setDisplayedNumbers([shuffledNumbers[0], number, shuffledNumbers[0]]);\n    }\n  }, [startAnimation, number, minNumber, maxNumber]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0.1\",\n      max: \"0.2\",\n      step: \"0.1\",\n      value: animationDuration,\n      onChange: handleSliderChange,\n      orient: \"vertical\",\n      style: {\n        writingMode: 'bt-lr'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '50px',\n        height: '50px',\n        border: '1px solid black',\n        backgroundColor: '#eee',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: startAnimation ? 'number-spin' : '',\n        style: {\n          position: 'relative',\n          animationDuration: `${animationDuration}s`\n        },\n        children: displayedNumbers.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '2px'\n          },\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Div, \"EEMBcUXqmhB58dfCdnJiiU0S4pE=\");\n_c = Div;\nconst Siatka = () => {\n  _s2();\n  const [startAnimation, setStartAnimation] = useState(false);\n  const [numbers, setNumbers] = useState([]);\n  const [animationDurations, setAnimationDurations] = useState([0.3, 0.3, 0.3, 0.3, 0.3, 0.3]);\n  const [minNumber, setMinNumber] = useState(1);\n  const [maxNumber, setMaxNumber] = useState(49);\n  const grid = [];\n  const handleClick = () => {\n    const nums = new Set();\n    while (nums.size < 6) {\n      nums.add(Math.floor(Math.random() * (maxNumber - minNumber + 1) + minNumber));\n    }\n    setNumbers([...nums]);\n    setStartAnimation(true);\n  };\n  useEffect(() => {\n    if (!startAnimation) return;\n    let timeout;\n    for (let i = 0; i < 6; i++) {\n      timeout = setTimeout(() => {\n        setStartAnimation(i < 5);\n      }, animationDurations[i] * speedBreak);\n    }\n    return () => clearTimeout(timeout);\n  }, [startAnimation, animationDurations]);\n  for (let i = 0; i < 6; i++) {\n    const handleSliderChange = e => {\n      setAnimationDurations(animationDurations.map((duration, index) => {\n        if (index === i) {\n          return Number(e.target.value);\n        } else {\n          return duration;\n        }\n      }));\n    };\n    grid.push( /*#__PURE__*/_jsxDEV(Div, {\n      startAnimation: startAnimation,\n      number: numbers[i],\n      animationDuration: animationDurations[i],\n      minNumber: minNumber,\n      maxNumber: maxNumber,\n      handleSliderChange: handleSliderChange\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Losowanie Lotto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Losuj liczby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s2(Siatka, \"tARiG9syunVkOCixa7BEXMd0JA0=\");\n_c2 = Siatka;\nexport default Siatka;\nvar _c, _c2;\n$RefreshReg$(_c, \"Div\");\n$RefreshReg$(_c2, \"Siatka\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","speedBreak","generateShuffledNumbers","min","max","numbers","Array","from","length","_","i","j","Math","floor","random","Div","startAnimation","number","animationDuration","minNumber","maxNumber","handleSliderChange","_s","displayedNumbers","setDisplayedNumbers","shuffledNumbers","style","margin","children","type","step","value","onChange","orient","writingMode","fileName","_jsxFileName","lineNumber","columnNumber","width","height","border","backgroundColor","display","justifyContent","alignItems","overflow","className","position","map","num","index","marginBottom","_c","Siatka","_s2","setStartAnimation","setNumbers","animationDurations","setAnimationDurations","setMinNumber","setMaxNumber","grid","handleClick","nums","Set","size","add","timeout","setTimeout","clearTimeout","e","duration","Number","target","push","flexDirection","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/src/siatka/siatka.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nconst speedBreak = 1000;\r\n\r\nconst generateShuffledNumbers = (min, max) => {\r\n  let numbers = Array.from({length: max - min + 1}, (_, i) => i + min);\r\n  for(let i = numbers.length - 1; i > 0; i--){\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [numbers[i], numbers[j]] = [numbers[j], numbers[i]];\r\n  }\r\n  return numbers;\r\n};\r\n\r\nconst Div = ({ startAnimation, number, animationDuration, minNumber, maxNumber, handleSliderChange }) => {\r\n  const [displayedNumbers, setDisplayedNumbers] = useState(generateShuffledNumbers(minNumber, maxNumber));\r\n\r\n  useEffect(() => {\r\n    const shuffledNumbers = generateShuffledNumbers(minNumber, maxNumber);\r\n    if (startAnimation) {\r\n      setDisplayedNumbers(shuffledNumbers);\r\n    } else {\r\n      setDisplayedNumbers([\r\n        shuffledNumbers[0],\r\n        number, \r\n        shuffledNumbers[0]\r\n      ]);\r\n    }\r\n  }, [startAnimation, number, minNumber, maxNumber]);\r\n\r\n  return (\r\n    <div style={{ margin: '20px' }}>\r\n      <input \r\n        type=\"range\" \r\n        min=\"0.1\" \r\n        max=\"0.2\" \r\n        step=\"0.1\" \r\n        value={animationDuration} \r\n        onChange={handleSliderChange} \r\n        orient=\"vertical\"\r\n        style={{writingMode: 'bt-lr'}}\r\n      />\r\n      <div style={{ width: '50px', height: '50px', border: '1px solid black', backgroundColor: '#eee', display: 'flex', justifyContent: 'center', alignItems: 'center', overflow: 'hidden' }}>\r\n        <div \r\n          className={startAnimation ? 'number-spin' : ''} \r\n          style={{ position: 'relative', animationDuration: `${animationDuration}s` }}\r\n        >\r\n          {displayedNumbers.map((num, index) => (\r\n            <div key={index} style={{ marginBottom: '2px' }}>{num}</div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Siatka = () => {\r\n  const [startAnimation, setStartAnimation] = useState(false);\r\n  const [numbers, setNumbers] = useState([]);\r\n  const [animationDurations, setAnimationDurations] = useState([0.3, 0.3, 0.3, 0.3, 0.3, 0.3]);\r\n  const [minNumber, setMinNumber] = useState(1);\r\n  const [maxNumber, setMaxNumber] = useState(49);\r\n  const grid = [];\r\n\r\n  const handleClick = () => {\r\n    const nums = new Set();\r\n    while(nums.size < 6) {\r\n      nums.add(Math.floor(Math.random() * (maxNumber - minNumber + 1) + minNumber));\r\n    }\r\n    setNumbers([...nums]);\r\n    setStartAnimation(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!startAnimation) return;\r\n\r\n    let timeout;\r\n    for (let i = 0; i < 6; i++) {\r\n      timeout = setTimeout(() => {\r\n        setStartAnimation(i < 5);\r\n      }, animationDurations[i] * speedBreak);\r\n    }\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [startAnimation, animationDurations]);\r\n\r\n  for (let i = 0; i < 6; i++) {\r\n    const handleSliderChange = (e) => {\r\n      setAnimationDurations(animationDurations.map((duration, index) => {\r\n        if (index === i) {\r\n          return Number(e.target.value);\r\n        } else {\r\n          return duration;\r\n        }\r\n      }));\r\n    }\r\n\r\n    grid.push(\r\n      <Div\r\n        key={i}\r\n        startAnimation={startAnimation}\r\n        number={numbers[i]}\r\n        animationDuration={animationDurations[i]}\r\n        minNumber={minNumber}\r\n        maxNumber={maxNumber}\r\n        handleSliderChange={handleSliderChange}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      <h1>Losowanie Lotto</h1>\r\n      <div style={{ display: 'flex' }}>\r\n        {grid}\r\n      </div>\r\n      <button onClick={handleClick}>Losuj liczby</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Siatka;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}