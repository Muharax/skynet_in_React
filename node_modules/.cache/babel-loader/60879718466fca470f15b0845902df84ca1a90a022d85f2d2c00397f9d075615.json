{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Desktop\\\\WWW\\\\react\\\\skynet\\\\skynet\\\\src\\\\siatka\\\\losowanie.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Losowanie2() {\n  _s();\n  const [numbers, setNumbers] = useState(new Set());\n  const [isRunning, setIsRunning] = useState(false); // Nowy stan do obsługi stanu generowania\n  const intervalId = useRef(null); // useRef do przechowywania id interwału\n\n  const generateRandomNumber = () => {\n    // Wygeneruj losową liczbę od 1 do 5\n    const randomNumber = Math.floor(Math.random() * 5) + 1;\n    setNumbers(prevNumbers => {\n      let newNumbers = new Set(prevNumbers);\n      if (newNumbers.has(randomNumber)) {\n        // Jeśli liczba już istnieje, zwróć poprzednie numery\n        return newNumbers;\n      }\n      if (newNumbers.size === 3) {\n        // Usuń pierwszy element tablicy i dodaj nową liczbę na końcu\n        const firstNumber = Array.from(newNumbers)[0];\n        newNumbers.delete(firstNumber);\n      }\n      newNumbers.add(randomNumber);\n      return newNumbers;\n    });\n  };\n  const handleButtonClick = () => {\n    setIsRunning(!isRunning);\n  };\n  useEffect(() => {\n    if (isRunning) {\n      intervalId.current = setInterval(generateRandomNumber, 1000); // Generuj liczbę co sekundę\n    } else {\n      // Jeśli generowanie jest uruchomione, zatrzymaj generowanie\n      if (intervalId.current) clearInterval(intervalId.current);\n    }\n  }, [isRunning]); // Dodaj isRunning do tablicy zależności\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: isRunning ? 'STOP' : 'START'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), Array.from(numbers).map((number, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: number\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Losowanie2, \"1pJC51NVjbgq5Oa7l9qg3iJKEvE=\");\n_c = Losowanie2;\nexport default Losowanie2;\nvar _c;\n$RefreshReg$(_c, \"Losowanie2\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Losowanie2","_s","numbers","setNumbers","Set","isRunning","setIsRunning","intervalId","generateRandomNumber","randomNumber","Math","floor","random","prevNumbers","newNumbers","has","size","firstNumber","Array","from","delete","add","handleButtonClick","current","setInterval","clearInterval","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","number","index","_c","$RefreshReg$"],"sources":["C:/Users/Neo/Desktop/WWW/react/skynet/skynet/src/siatka/losowanie.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction Losowanie2() {\r\n  const [numbers, setNumbers] = useState(new Set());\r\n  const [isRunning, setIsRunning] = useState(false); // Nowy stan do obsługi stanu generowania\r\n  const intervalId = useRef(null); // useRef do przechowywania id interwału\r\n\r\n  const generateRandomNumber = () => {\r\n    // Wygeneruj losową liczbę od 1 do 5\r\n    const randomNumber = Math.floor(Math.random() * 5) + 1;\r\n    \r\n    setNumbers(prevNumbers => {\r\n      let newNumbers = new Set(prevNumbers);\r\n      if (newNumbers.has(randomNumber)) {\r\n        // Jeśli liczba już istnieje, zwróć poprzednie numery\r\n        return newNumbers;\r\n      }\r\n\r\n      if (newNumbers.size === 3) {\r\n        // Usuń pierwszy element tablicy i dodaj nową liczbę na końcu\r\n        const firstNumber = Array.from(newNumbers)[0];\r\n        newNumbers.delete(firstNumber);\r\n      }\r\n      newNumbers.add(randomNumber);\r\n      return newNumbers;\r\n    });\r\n  }\r\n\r\n  const handleButtonClick = () => {\r\n    setIsRunning(!isRunning);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isRunning) {\r\n      intervalId.current = setInterval(generateRandomNumber, 1000); // Generuj liczbę co sekundę\r\n    } else {\r\n      // Jeśli generowanie jest uruchomione, zatrzymaj generowanie\r\n      if (intervalId.current) clearInterval(intervalId.current);\r\n    }\r\n  }, [isRunning]); // Dodaj isRunning do tablicy zależności\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleButtonClick}>{isRunning ? 'STOP' : 'START'}</button>\r\n      {Array.from(numbers).map((number, index) => (\r\n        <div key={index}>{number}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Losowanie2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAIS,GAAG,CAAC,CAAC,CAAC;EACjD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAMY,UAAU,GAAGV,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEjC,MAAMW,oBAAoB,GAAGA,CAAA,KAAM;IACjC;IACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAEtDT,UAAU,CAACU,WAAW,IAAI;MACxB,IAAIC,UAAU,GAAG,IAAIV,GAAG,CAACS,WAAW,CAAC;MACrC,IAAIC,UAAU,CAACC,GAAG,CAACN,YAAY,CAAC,EAAE;QAChC;QACA,OAAOK,UAAU;MACnB;MAEA,IAAIA,UAAU,CAACE,IAAI,KAAK,CAAC,EAAE;QACzB;QACA,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAACL,UAAU,CAAC,CAAC,CAAC,CAAC;QAC7CA,UAAU,CAACM,MAAM,CAACH,WAAW,CAAC;MAChC;MACAH,UAAU,CAACO,GAAG,CAACZ,YAAY,CAAC;MAC5B,OAAOK,UAAU;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC9BhB,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAEDT,SAAS,CAAC,MAAM;IACd,IAAIS,SAAS,EAAE;MACbE,UAAU,CAACgB,OAAO,GAAGC,WAAW,CAAChB,oBAAoB,EAAE,IAAI,CAAC,CAAC,CAAC;IAChE,CAAC,MAAM;MACL;MACA,IAAID,UAAU,CAACgB,OAAO,EAAEE,aAAa,CAAClB,UAAU,CAACgB,OAAO,CAAC;IAC3D;EACF,CAAC,EAAE,CAAClB,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB,oBACEN,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAQ4B,OAAO,EAAEL,iBAAkB;MAAAI,QAAA,EAAErB,SAAS,GAAG,MAAM,GAAG;IAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EAC1Eb,KAAK,CAACC,IAAI,CAACjB,OAAO,CAAC,CAAC8B,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACrCnC,OAAA;MAAA2B,QAAA,EAAkBO;IAAM,GAAdC,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC9B,EAAA,CA/CQD,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AAiDnB,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}