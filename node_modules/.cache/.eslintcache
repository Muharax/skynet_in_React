[{"C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\index.js":"1","C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\App.js":"2","C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\login.js":"3","C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\menu.js":"4","C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\HomePage.js":"5","C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\MainWindow\\MainWindow.js":"6","C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\Home\\Home.js":"7","C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\Uzytkownicy\\Uzytkownicy.js":"8","C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\MainWindow\\Search\\Search.js":"9","C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\logowanie\\logowanie.js":"10","C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\logout\\logout.js":"11"},{"size":255,"mtime":1690628721443,"results":"12","hashOfConfig":"13"},{"size":773,"mtime":1690658005577,"results":"14","hashOfConfig":"13"},{"size":1815,"mtime":1690623749298,"results":"15","hashOfConfig":"13"},{"size":192,"mtime":1690493567931,"results":"16","hashOfConfig":"13"},{"size":0,"mtime":1690624924482,"results":"17","hashOfConfig":"13"},{"size":2066,"mtime":1690658006449,"results":"18","hashOfConfig":"13"},{"size":149,"mtime":1690628964585,"results":"19","hashOfConfig":"13"},{"size":3427,"mtime":1690639546863,"results":"20","hashOfConfig":"13"},{"size":747,"mtime":1690633394313,"results":"21","hashOfConfig":"13"},{"size":3467,"mtime":1690658801027,"results":"22","hashOfConfig":"13"},{"size":564,"mtime":1690650090164,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"zscl60",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\index.js",[],[],[],"C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\App.js",[],[],"C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\login.js",["61"],[],"import { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n\r\n    const [messageStatus, setMessageStatus] = useState(null); // Nowy stan lokalny\r\n\r\n\r\n    const [form, setForm] = useState({\r\n        login: '',\r\n        pass: ''\r\n      });\r\n\r\n    const handleChange = e => {\r\n        setForm({\r\n          ...form,\r\n          [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log('YE');\r\n\r\n    // fetch('http://localhost:3001/login', {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //       'Content-Type': 'application/json',\r\n    //     },\r\n    //     body: JSON.stringify(form),\r\n    //   })\r\n    //   .then(response => response.json())\r\n    //   .then(data => {\r\n    //     console.log('Success:', data);\r\n    //     setMessageStatus(data.message);\r\n    //     // alert(`${data.message}`);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.error('Error:', error);\r\n    //   });\r\n\r\n\r\n\r\n    // Miejsce na funkcję logowania, która powinna zwrócić promise\r\n    // Na przykład:\r\n    // try {\r\n    //   await loginUser(username, password);\r\n    //   navigate('/dashboard');\r\n    // } catch (error) {\r\n    //   // Obsłuż błąd logowania\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n        <div className='AB'>{messageStatus && <div className='msg-color'>{messageStatus}</div>}</div>\r\n      <label>\r\n        Username:\r\n        <input type=\"text\" name=\"username\" onChange={handleChange}/>\r\n      </label>\r\n      <label>\r\n        Password:\r\n        <input type=\"password\" name=\"password\" onChange={handleChange} />\r\n      </label>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n",[],"C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\menu.js",[],[],"C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\HomePage.js",[],[],"C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\MainWindow\\MainWindow.js",[],[],"C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\Home\\Home.js",[],[],"C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\Uzytkownicy\\Uzytkownicy.js",[],[],"C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\MainWindow\\Search\\Search.js",[],[],"C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\logowanie\\logowanie.js",["62","63","64"],[],"import React, { useState, useEffect } from \"react\";\r\nimport logo from '../MainWindow/img/logo.png';\r\n\r\nconst URL = 'http://localhost:3001';\r\n\r\nfunction Logowanie({ handleLogin }) {\r\n  const [username, setUsername] = useState(\"ADMIN11\");\r\n  const [password, setPassword] = useState(\"admino\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [serverMessage, setServerMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setToken(generateToken());\r\n  }, []);\r\n\r\n  const generateToken = () => {\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if(username == \"ADMIN11\" && password ==\"admino\"){\r\n      handleLogin(\"Logowanie poprawne\");\r\n      return;\r\n    }else{\r\n      setServerMessage(`${username} nie ma w bazie`);\r\n      return;\r\n    }\r\n    // try {\r\n    //   const response = await fetch(`${URL}/logowanie`, {\r\n    //     method: 'POST',\r\n    //     headers: { 'Content-Type': 'application/json' },\r\n    //     body: JSON.stringify({ username, password, token })\r\n    //   });\r\n\r\n    //   const data = await response.json();\r\n    //   setServerMessage(data.message);\r\n      \r\n    //   if (data.token) {\r\n    //     localStorage.setItem('token', data.token);\r\n    //     handleLogin(data.message);\r\n    //   }\r\n    // } catch (error) {\r\n    //   setServerMessage(`Niepoprawne dane logowania: ${error.message}`);\r\n    // }\r\n  };\r\n\r\n  // Rest of your component...\r\n\r\n  return (\r\n    <div id=\"LOGOWANIE\">\r\n      <div className=\"alert\">{serverMessage && <div>{serverMessage}</div>}</div>\r\n      <div className=\"LG\">\r\n        <div className=\"logos\">\r\n          <img src={logo} alt=\"\" className=\"logos-SWG\" />\r\n        </div>\r\n\r\n        <div id=\"logowanie-s\">\r\n          <form onSubmit={handleSubmit}>\r\n          <input\r\n                type=\"hidden\"\r\n                id=\"token\"\r\n                autoComplete=\"off\"\r\n                name=\"token\"\r\n                placeholder=\"Token\"\r\n                value={token}\r\n                className=\"w100\"\r\n              />\r\n\r\n            <div id=\"name\">\r\n              <i className=\"material-icons prefix cwhite\">apps</i>\r\n              <input\r\n                type=\"text\"\r\n                id=\"first\"\r\n                autoComplete=\"off\"\r\n                autoFocus=\"On\"\r\n                name=\"user\"\r\n                placeholder=\"Login\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                className=\"w100\"\r\n                // required\r\n              />\r\n            </div>\r\n\r\n            <div id=\"pass\">\r\n              <i className=\"material-icons prefix cwhite\">lock</i>\r\n              <input\r\n                type=\"password\"\r\n                id=\"second\"\r\n                autoComplete=\"off\"\r\n                name=\"pass\"\r\n                placeholder=\"Hasło\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                className=\"w100\"\r\n                // required\r\n              />\r\n            </div>\r\n\r\n            <div id=\"btn-log-in\">\r\n              <div className=\"wrapper\">\r\n                <div className=\"box\">\r\n                  <button type=\"submit\" className=\"log-in\" id=\"sub\">\r\n                    Sign In\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logowanie;\r\n\r\n  ","C:\\Users\\Neo\\Desktop\\WWW\\react\\skynet\\skynet\\src\\logout\\logout.js",[],[],{"ruleId":"65","severity":1,"message":"66","line":6,"column":27,"nodeType":"67","messageId":"68","endLine":6,"endColumn":43},{"ruleId":"65","severity":1,"message":"69","line":4,"column":7,"nodeType":"67","messageId":"68","endLine":4,"endColumn":10},{"ruleId":"70","severity":1,"message":"71","line":22,"column":17,"nodeType":"72","messageId":"73","endLine":22,"endColumn":19},{"ruleId":"70","severity":1,"message":"71","line":22,"column":42,"nodeType":"72","messageId":"73","endLine":22,"endColumn":44},"no-unused-vars","'setMessageStatus' is assigned a value but never used.","Identifier","unusedVar","'URL' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]